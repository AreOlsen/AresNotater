{"/":{"title":"Ares notater.","content":"\n## Korleis bruke:\n\nBruk search baren til å søke etter notatene du trenger.\nShittet nederst (kartet) fungere så vidt.\nDet litt confusing fordi av og til vise ikkje tittelen til filen i searchen.\nMen då er det som regel den første.\n\n## Stay gangster:\n\nStay gangster my brudas :)))\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/%C3%98kologi.":{"title":"","content":"# Økologi.\n\nDet er læren om organismer, deira tilpasningar og sampsill med hverandre, forhaldet til miljøet dei lever i.\n\nInnanfor økologi kan ein sjå på eit organisme, ein populasjon, eit samfunn, og eit økosystem.\n\n\n## Fra individ til økosystem.\n\nINDIVID:\nEin enhet som ikkje kan dividerast utan å miste sin eiga art.\n\n[[Kva er ein art.]]: \n1. Økologisk definisjon\n\t1. Ein art er eit organisme som kan få forplantnings dyktig avkom.\n2. Morfologisk\n\t1. Utsjånad som definerer arten.\n3. Fylogenetisk\n\t1. DNA som identifiserer arten.\n\nPOPULASJON:\nEin samling av individer av samme art, som lever innan eit geografisk avgrensa område. \n\nSAMFUNN:\nAlt levande, alle populasjoner av forskjellige arter, innanfor eit geografiks avgrensa område.\n\nSlike område er ofte naturleg avgrenset.\n\nØKOSYSTEM:\nAlle biotiske og abiotiske faktorer innanfor eit geografisk avgrensa område.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/ATP":{"title":"","content":"# ATP\n\nATP - Adenosintrifosfat er den viktigste energikjelden til ein celle den gir rask høg mengde energi. ATP oppstår igjennom [[Metabolisme.]]. \n\n## Struktur\nStrukturen til ATP er som følgende:\nEin adenosin gruppe som består av ein adenin og eit ribose sakkarid, og tre ulike bindet saman fosfat grupper. Strukturen ser nemleg slik ut:\n![](http://loretocollegebiology.weebly.com/uploads/1/4/8/5/14853288/1725518.jpg?838)\n\nAdenin er ein nitrogenholdig [[pH, syrer og baser.|base]]. Ribose er eit [[Karbohydrater.|sukker]], og så har vi tre ulike fosfat grupper.\nAdenosin er ribosen, og adeninen sammensett til eit gruppe betegnelse.\nFor å danne ATP krevest det oksygen, som gjer at mange av organismets funksjoner blir severt skadet og påvirket dersom det oppstår ein mangel av oksygen.\n## Energi\nEnergien til ATP er ganske spesiell. \nEnergien til ATP er nemleg lagret i bindingene mellom dei tre ulike fosfat gruppene, dette betyr at viss ein bryter disse bindingene i frå kvarandre gjennom ein [[Metabolisme.#Katabolisme|katabolisme prosses]] så utgir ein energien. Når ein mister ein fosfat gruppe skifter strukturen seg i molekylet. Når ein mister ein fosfatgruppe går den over i frå adenosin*tri*fosfat over til adenosin*di*fosfat, eventuellt når ein mister ein til adension*mono*fosfat, og til slutt adenosin. Pga. bindingene i mellom disse fosfatgruppen er så høge vil molekylet helst bli kvitt mest av fosfatene slik at bindindinge mellom dei blir meir stabil og mindre energikraftige. \n\n## Døme på bruk av ATP.\nEit godt døme på bruken av ATP i ein anabolisk prosess er til dømes ved prosessen av hydrolisme. \nHer kan det sjå ut:\n$Adenosin = Ad$\n$Fosfatgruppe = P$\n$Ad-P-P-P + H_2O \\rightarrow Ad-P-P + P-OH + H^{+} + ENERGI$.\n$-$ er berre ein betegnelse for binding.\n## Dannelse.\nMåten eit ATP molekyl oppstår er gjennom svært mange ulike prosesser til dømes kan den oppstå i frå [[Fotosyntesen]] som går over til mitokondria sin [[Cellulær respirasjon.]] som gjennom ein fosfat gruppe som så fester seg  til eit adenosin*di*fosfat blir over til eit adenosin*tri*fosfat. Dette krever energi for å settje det på adenosindi/monofosfatet. Å skape ein ATP, ADP, eller AMP skjer gjennom anaboliske prosesser.\n\n\n\u003e[!INFO] Energi-valutaen.\nPga. Adensiontrifosfat er så viktig for energi i cellen blir den ofte kalt for energivalutaen i cellen, dette er fordi den kan lagre store mengder ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Akselerasjon.":{"title":"","content":"# Akselerasjon.\n\nAkselerasjon er simpelt sagt ein forandring i [[Hastighet]] (det er den vekstfarten til hastigheten i ein [[Hastighet(v) vs tid (s).]] graf). Vi kan bruke vår kunnskap om derivanter, og gjennomsnittleg vekstfart for å finne akselerasjonen til eit objekt.\n\nSymbolet for akselerasjon er $a$.\n\nNår vi har ein konstant akselerasjon kan vi finne akselerasjonen gjennom formelen for gjennomsnittleg vekstfart:\nDette tyder til at $\\large a=\\frac{\\Delta x}{\\Delta t}$.\n\nNår vi har ein forandrande akselerasjon som ikkje er konstant må vi derivere hastighet funksjonen slik at vi får akselerasjonen sin funksjon.\nDette tyder til at $hastighet´(x)=akselerasjon(x)$. (Derivert funksjon av hastighet er akselerasjon.)\n\nTil dømes har gravitet ein akselerasjon på $\\large -9.8\\times\\frac{m}{s^2}$.\n\nAkselerasjon er jo som sagt ein forandring på hastighet over tid. \nDette tyder til at SI enheten til akselerasjon er  $\\large \\frac{m}{s^2}$, fordi $\\huge \\frac{hastighet=\\frac{m}{s}}{tid=s} = \\frac{\\frac{m}{s}}{s} = \\frac{m}{s\\times s}= \\frac{m}{s^2}$.\n\n\nBilete over hastighet i ein hastighet vs tids graf:\n![]()\n\nNår hastigheten er konstant betyr det at akselerasjonen er sjølvsagt 0, fordi hastigheten er forandrer seg ikkje.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Aktiverings-energi.":{"title":"","content":"# Aktiverings energi.\n\nAktiverings energi er ein særdeles viktig del av [[Kinetikk.]] og forklarer korleis ein reaksjon i det heile tatt starter.\n\nAktiverings energi er nemleg den mengden energi som er krevd for at ein reaksjon i det heile tatt skal skje, uansett om den er [[Metabolisme.#Viktig|endergonisk eller eksergonisk]]. Du kan tenke på aktiveringsenergien som den lille ekstra energien du trenger om morgenen for å få deg ut av sengen slik at du kan forsette dagen.\n\nAktiverings energi har ein notasjon som er slik :\n$E_A$,        E= Energi, A = aktiverings.\n\n$\\Delta G$ er forandring i fri energi. \n\n\n## Kva aktiverings energi gjer på molekylært nivå.\nKvifor vil ein eksergonisk reaksjon, altså ein negativ $\\Delta G$ kreve energi til å fortsette?  Viss vi skal forstå dette må vi analysere kva som skjer på det molekylære nivået når ein reaksjon skjer.\n\nNår ein reaksjon skjer uansett om den er endergonisk eller eksergonisk så må den ha ein viss energi til å klare å bryte dei elektronparbindingene i mellom dei ulike atomene, slik at dei kan skape ein ny molekylær struktur. \nNår det kjemer ein aktiveringsenergi vil molekylet ha ein svært høg energi stadie som tyder til at den er svært ustabil, denne fasen av overgang heiter \"tranisjon fasen\", og for å bli meir stabil øydelleger den bindingene sine slik at den kan bli meir stabil, eventuellt skaper nye bindinger for å oppnå det optimale laveste energi nivå. ([[Kva er grunnstoffer og atomer.|8-skall regelen]]). Dermed krever den ein aktiveringsenergi for å skape ein reaksjon uansett om den er eksergonisk eller endergonisk. \n\nGenerelt er tranisjons fasen alltid på eit høgere energi stadie enn reaktantene eller produktene, slik at $E_A$ har alltid ein positiv verdi, uavhengig om reaksjonen er entens endergonisk eller eksergonisk. Under kan ein sjå diagrammene til endergonisk og eksergoniske reaksjoner.\n\n![](https://bio.libretexts.org/@api/deki/files/1040/Figure_06_03_03.jpg?revision=1)\n\nHer kan vi sjå at eksergoniske gir ut energi og dermed har ein lavere energitilstand til slutt, likevel derimot ein endergonisk reaksjon som tar inn meir energi ja den går litt ned men overalt så er den høgere fordi som sagt den tar inn meir energi. \n\n\u003e[!INFO] NB.\n\u003eNår vi sier ein reaksjon er endergonisk så tyder det at til slutt krever den meir energi enn den gir ut, og eksergonisk gir ut meir energi til slutt enn den krever. Vi kan **ikkje** si at ein reaksjon som er eksergonisk er på ein måte endergonisk fordi den krever aktiveringsenergi, vi tenker berre på start slutt, ikkje overgang.\n\nKjelden for aktiveringsenergi er som oftast varme, der reaktant molekylene tar inn varmenergien frå dens omgivelser. Denne termiske energien auker farten til reaktant molekylene, som gjer at den har ein høgere sjanse og høgere kraft på deirast kollisjoner, og ikkje minst \"vibrerer\" og atomene og bindingene inni dei individuelle molekylene som gjera t dei er meir sannsynleg til å bryte. Når ein reaktant molekyl absorbe nok energi til å oppnå transisjon fasen, kan den fortsette til resten av reaksjonen.\n\n## Aktiverings energi og reaksjons rate.\nAktiveringsenergien til ein kjemisk reaksjon er svært tilknyttet til dens reaksjonsrate. Spesifikk, høgere aktiveringsenergi, lavere reaksjonsrate. Dette er fordi molekylene kan berre gjere reaksjonen når dei har nådd toppen av aktiveringsenergi krevd mengden. Kor høgere minimum kravet er der mindrre molekyler vil ha nok energi til å klare å utføre reaksjonen på kvart moment. \n\nMange reaksjoner har ein så høg aktiveringsenergi at den ikkje kan fortsette utan eit innslag av energi i det heile, (ofte kan gasser reagere berre gjennom kollisjonene i frå gassmolekylene). Til dømes, vil ikkje ved ta fyr i romtemperatur fordi energien som kjemer i frå luften som treffer veden ikkje er høg nok til å komme over minimum kravet til aktiveringsenergi-en for å skape ein flamme. Dette er grunnen til friksjon kan bli brukt til å skape flamme, det auker energien til staden. Den utgitte energien som kjemer i frå den eksergoniske reaksjonen som er flamme, vil òg hjelpe andre molekyler i nærheten til å ta fyr òg, som gjer at dette er ein kjedereaksjon.\n\nDei aller fleste kjemiske reaksjoner som tek plass i [[Introduksjon til cellen.|celler]] er som dei hydrokarbone forbrenningene. Døme: Aktiveringsenergien er for høg for reaksjonene til å ta plass i stor grad ved rom temperatur. Dette hørest kan ikkje ut som eit problem, du kan ikkje settje ein flame inni ein celle utan å skape skade. Heldigvis er det mogleg å settje minimum kravet på aktiveringsenergi lavere i ein reaksjon, og dermed auke reaksjonsraten òg. denne prosessen av å redusere minimum kravet på aktiveringsenergi heiter \"katalyse\". Og faktoren i katalyse som gjer at minimum kravet på aktiveringsenergien er kalt [[Katalysatorer.]]. Biologiske katalyster heiter [[Enzymer]].","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Alkohol-etanol-gj%C3%A6ring.":{"title":"","content":"# Alkohol/etanol gjæring.\nUnder [[Cellulær respirasjon.#Glykolyse|glykolse]] når det er ein mangel av oksygen kan det oppstå mange ulike gjæringsproseser. Bla. [[Melkesyregjæring.]] og etanol gjæring.\n\nEtanol gjæring fungerer likt som melkesyregjæring ved at det går ut på $NAD^+$ og $NADH$ i glykolyse prosessen.\n\nUnder alle gjæringsprosesser i glykolyse blir det oksidert $NADH$, slik at det blir over til $NAD^+$ som kan bli gjenbrukt til glykolyse igjen. I etanolgjæring blir det som skjer med [[Cellulær respirasjon.#Glykolyse|pyruvatene]] litt annleis enn når det prat om melkesyregjæring. I etanol gjæring er det som skjer to ulike prosesser.\n1. Pyruvat dekarboksylase\n2. Alkohol dehydrogenase\n\n\n## Pyruvat dekarboksylase.\nI pyruvat dekarboskylase blir pyruvatene nesten splittet i to, der den eine siden er ein $CO_2$ og den andre siden er resten av pyruvatet, aka. Acetaldehyde. Denne prosessen er ein reduseringsprosess.\nDenne prosessen kan visualisert slik:\n![[Alkohol \u0026 etanol gjæring. 2022-07-21 15.37.10.excalidraw]]\n\n\nEin kan tenke på dette steget som det steget som må bli utført for at etanolet skal bli skapt videre.\n\n## Alkohol dehydrogenase.\nAlkohol dehydrogenase er \"prosessen\" som omdanner denne Acetaldehyde-en over til eit etanol molekyl. I alkoholdehydrogenase blir strukturen til denne acetaldehyde molekylet omdannet nesten likt som i [[Melkesyregjæring.]] over til eit nytt molekyl. Denne prosessen samtidig som oksideringen av $NADH$ over til $NAD^+$, dette hydrogen atomet som blir mistet fester seg til acetaldehyden og omstrukturer strukturen til acetaldehyden over til det meir kjente molekylet \"Etanol\".\n\nLikt som i melkegjæresyring er det svært mange organismer som bruker dette som ein energikjelde i staden for å gå videre til Kreb's syklusen og deretter elektrontransportkjeden som er meir energigivende men krever oksygen. \n\nDenne prosessen kan visualisert slik:\n![[Alkohol \u0026 etanol gjæring. 2022-07-21 15.52.01.excalidraw]]\n\n## Fun facto.💀\n\u003e[!INFO] Fun fact. Brød har alkohol. \n\u003eGjær, tørrgjær, våtgjær alle dei ulike gjærene som vi bruker til å bake, eller å lage alkohol, bruker Etanolgjæring, gjæret sin energikjelde er dermed glykolyse og den bruker etanolgjæring for å kunne fortsette å gjere glykolyse for å skape energi. NB. ikkje all \"gjær\" bruker etanolgjæring, nokre bruker til dømes melkesyregjæring.\n\u003eBrød bruker gjær til å heve seg fordi prosessen skaper nesten boble liknande gassstoffer (Hehe: looking at you $CO_2$) som hever den. Det er òg sant at brød inneholder litt etanol i seg, så du kan spise deg full, bokstavleg talt. Men som oftast blir denne etanolen fordampet vekk fordi varmen er så høg. \n\nÅ lage brød dermed er å lage brennevin.\nOg å lage brennevin er det samme som å lage brennevin.\nBrød = brennevin. 🤯🐿💀\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Andre-derivasjonsregel-Rasjonale-funksjoner.":{"title":"","content":"## Rasjonale funksjon derivasjon.. \nNår vi har ein funksjon som består av ein [[Polynom terminologi#Rasjonale funksjoner Polynom brøker|rasjonale funksjoner.]]\nFørst deriverer vi både telleren og nevneren og setter disse til side, slik at vi kan bruke dei etterpå. Så følger vi oppsettet og rekner ut, då får vi den deriverte funksjoen av den rasjonale funksjonen.\n\nDen originale funksjonen. \n$\\large f(x)=\\frac{p(x)}{q(x)}$\n\nDen deriverte funskjonen.\n$\\large f'(x)=\\frac{p'(x)\\cdot q(x) - q'(x)\\cdot p(x)}{q(x)^2}$\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Apoptose":{"title":"","content":"# Apoptose (Programmert daud av celler).\n\n\nOrdet Apoptose kjemer frå Gresk og betyr Apop=\"Vekk/ ifra\", tose=\"falle\".\nApoptose = \"Falle vekk\".\n\nApoptose er ein normal prosess som dei aller felste [[Introduksjon til cellen.|celler]] som gjer at dei døyr på ein fin og god måte slik at ressursene inni cellen kan bli gjenbrukt. (Altså [[Kva er organeller - organeller i eukaryotiske celler.|organeller]] og andre stoffer inni).\n\nUnder apoptose blir ein celle \"brytt\" ned, ikkje direkte av organellene og innhaldet blir øydelagt men at dei splittes frå kvarandre og alt ressurser cellen brukte kan bli gjenbrukt av andre celler. Disse bitene som organellene og likt blir delt inn i kalles for \"*bleb*\" og er nesten som resirkuleringsposer. **Bemerk** deg at dette ikkje inkluderer [[DNA]] og resten av cellekjernen, dette er fordi ein celle ofte inngår apoptose pga. feil i DNA.\n\n\n### Ulike former for celledaud, nekrose og apoptose.\n\nDet er hovudsakeleg to ulike metoder ein celle kan dø på:\n1. Nekrose\n\t1. Cellen berre popper, alt inni berre sprutes ut, og organeller og likt kan ikkje bli brukt av andre celler. \n2. Apoptose\n\t1. Cellen blir brytt ned, gjennom at den blir organisert inn i små biter som andre celler kan bruke om igjen. Utanom cellekjernen den brytes komplett ned.\n\nApoptose er det kroppen ønsker å oppnå.\n\nBasically er apoptose sjølvmord av celler 💀 og cellen brytes ned, der dei ulike komponentene blir pakket inn i nærast poser (kalt *bleb*, no joke dei er kalt bleb).\n\n\n![500](https://www.researchgate.net/publication/334653349/figure/download/fig1/AS:784190744297472@1563977051069/Changes-in-cell-morphology-that-distinguish-apoptosis-from-necrosis.png)\n\n\n\u003e[!INFO] the fucks the point.\n\u003eApoptose er viktig og skjer i kroppen konstant, og regulerer bla. mengden celler i kroppen.\n\n### Kreft.\nEin [[Kreft.|kreftcelle]] vil oftast gå igjennom apoptose, slik at kreften ikkje sprer seg.\n\nDette oppnås,     (det blir oppdaget at cellen er kreft, cellen leggjer ikkje merke til det med ein gong),   gjennom fleire ulike metoder, men skjer gjennom apoptose heile tiden. \n\n\nBasically apoptose good! 🥳 jippi.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Arbeid":{"title":"","content":"# Arbeid\n\n## Definisjonen av arbeid\nNormalt vil ein si at arbeid er mengden kraft gange med strekningen\n\n[[Newtons andre lov, vekt]].\n\n$Arbeid = kraft \\times strekning$\n\n\n$\\LARGE W=F\\times \\Delta x$, \navhenger av at strekning og bevegelsen er i samme retning.\n\n\u003e[!WARNING] Post Scriptum\n\u003eIKKJE TA HENSYN TIL RETNING MED + - I DISSE KALKULASJONENE. BERRE STØRRELSE INGEN +- RETNING.\n\n\nSymbolet for arbeid er joule ($J$). \nDersom det er ein forskjell i kraft retning og strekning må ein omdanne det til å vere ein horisontal kraft gjennom [[Vektorer, to dimesjoner.]] kan vi bruke trigonometriske funksjoner for å omdanne kraften sin vinkel over til $x$ aksen. Dermed er $W = F\\times \\cos(\\theta)\\times \\Delta x$.\n\n\nTil dømes:\n![[Arbeid 2022-11-09 14.38.01.excalidraw|750]]\n\nDet er ein **viktig** regel å huske alle rettvinklet krefter for vinkelen til  $\\sum \\vec{F}$ vil vere $0$. Fordi du drar den ikkje opp eller ned, vil det vere 0, det er normalkrefter.\n\n$\\vec{F}\\times sin(\\theta)$ gir  $\\vec{F}_y$ som er ein normalkraft og utfører dermed ingen kraft.\nVi kan isolere $\\vec{F}_x$ og bruke dette for å løyse for arbeidet i dette tilfellet.\n\n\n## [[Statisk og kinematisk friksjon.|Friksjons arbeid]]\nIkkje ta hensyn til friksjonsretning men berre dens størrelse.\n\n$W_r = -R\\times \\Delta x$\n\n\n\u003e[!INFO] Post Scriptum.\n\u003eOfte sier vi at energi er det samme som arbeid. Dersom oppgåvo spør etter energien finn arbeidet.\n\u003e\n\n## megmeg\n\n![](https://preview.redd.it/8hcgq5m5s4z91.jpg?width=640\u0026crop=smart\u0026auto=webp\u0026s=1a33e8c58acfb094b75d3daf51b695ea00f47832)\n\n\n\n### Setningen om [[Kinetisk energi.]]\nArbeidet som utføres av summnen av kreftene som virker på en gjenstand er lik endringen i gjenstandes kinetisk energi.\n$\\huge W_{\\sum F}= \\Delta E_k = m\\times a \\times \\Delta x = m(\\frac{1}{2}\\times v_f^2- \\frac{1}{2}v_i^2)$\n$\\rightarrow$\n$W_{\\sum F}=m(0.5*v_f^2-0.5*0.5v_i^2)$\n\n$\\huge W_{\\sum F} = \\frac{1}{2}\\times m \\times (v_f^2-v_i^2) = \\Delta E_k$\n.\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Areal-setningen.":{"title":"","content":"# Areal av alle trekanter.  Areal-setningen.\n\n## Kva er areal-setningen\nAareal-setningen, er ein setning som forteljar arealet til ein trekant ved oppgitt vinkel, og sidelengder.\nNormalt er arealet til ein trekant, $\\frac{\\textit{høgda} \\times \\textit{bredde}}{2}$, og dette er noko som areal setningen bygger på. Problemet er at vi normalt ikkje har ein implisitt høyde i ein trekant som ikkje er rettvinklet, men vi kan finne den gjennom sinus og litt smart tenking. Areal setningen er berre ein videreutbygging av den normale setningen for eit rettvinklet trekant sitt areal.\n\n## Korleis finne arealet.\n\n### Formelen:\n\n\n$A=\\frac{1}{2}\\times g \\times h = \\frac{1}{2}\\times p \\times q \\times \\sin (u)$.\n\n$A=\\frac{1}{2} \\times grunnlinje \\times hypotenus \\times \\sin(\\theta)$.\n\n$u \\ne 90 \\deg$.\nViss $u = 90 \\deg$ så er formelen berre den originale.\n\nSjå bevis at setningen for meir utdypelse.\n\n\n## Bevis av setningen.\n\nEin trekant har formen:\n\n![](https://www.matematikk.org/aim/matematikk/files/7/5/9/c63a958ae89952572f6fc6e70ade9577cbff79a088/759c63a958ae89952572f6fc6e70ade9577cbff79a088.png/Scale?geometry=200x400%3E)\n\nVi veit at $sin (\\theta) = \\frac{motstående\\space katet}{hypotenus}$. Dermed når høyden (h) er den motstående kateten, kan vi finne høyden ved $sin(\\theta)\\times hypotenus$. Dette gjer den siste ukjente variabelen \"høyden\" i den gamle setningen for areal ($\\frac{1}{2}\\times grunnlinje\\times høyde$) over til ein variant som bruker $sin(\\theta)\\times hypotenus$ til høyden. Denne varianten er dermed sjølvsagt $\\frac{1}{2}\\times grunnlinje \\times \\sin (\\theta) \\times hypotenus$.\n**Her i dette eksempelet er hypotenusen AC.**","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Arker":{"title":"","content":"# Arker:\n\n## Kva er arker\n\nArker (Archaea) er små eincella [[Prokaryote celler.|prokaryot]] mikro-organismar som utsende messig liknar på [[Bakteriar]], men er forskjellig på nokre ulike punkter. Mange ulike arter av arker blir anerkjente som *ekstremofile*, dette er fordi disse artene ofte lever under ekstreme forhold på grunn av [[Økologi.|miljøet]]. Tradisjonelt var «Arker» anerkjent til å vere bakteriar, berre ein anna form, og det gamle tradisjonelle vitskaplege namnet var «Bacteria Archaea». I dag er ikkje arker anset som bakteriar lengre fordi vi har ny fylogenetisk teknologi som klarte å oppdage eit skilje.\n\n## Ulike kategoriar av arker\nArker er tenkt til å ha vært dei aller første organismane som levde på jordkloden (oppstod 3,5 milliardar år sidan), og dette er grunnen til at mange arter av arker er svært godt egna til ekstreme forhald og temperaturar. Slike arker er anerkjent som ekstremofile. I dei første årene av jordkloden var det ekstreme forhald som syrleg regn, høge temperaturar, og store mengder av farlege gassar, dette måtte dei første organismane være egna til slik at dei kunne overleve. Arker er oftast kategorisert inn i tre hovud-kategoriar for å differensiere mellom dei. Disse kategoriane har namna av _termofile_, _halofile_ og _metandannarar_. \n\n*Termofile* arker er ekstremofile arker som liker ekstreme høge temperaturar. Normalt vil små eincella organismar sitt DNA gå i oppløysning og skape permanent skade til organismen ved høge temperaturar, men termofile arker klarer å overleve i slike forhald. Eit døme på ein termofil ark er «_Pyrolobus Fumarii»_ som er funnet til å klare å overleve i 113-Celsius.\n\n*Halofile* arker er ekstremofile arker som lever i svært salte område. Ein normal celle er ikkje i stand til å klare å overleve slike høge salt-konsentrasjonar, men halofile organismar klarer det. Område som halofile organismar trivest i er til dømes; svarte-havet og saltsjøar. \n\n*Metandannarar* er derimot ikkje ekstremofile arker. Metandannarar er arker som dannar metan i frå abiotiske stoffar i naturen som karbon. Metandannarar kan ein finne i bla. myrer, djupe lag av sedimenter i havet og inni tarmane til dyr. Det er òg andre kategoriar for arker, som asidofile arker (arker som liker ekstreme syrlege forhald; er ekstremofile), men arker i disse kategoriane er litt meir sjeldne.\n\n\n## Forskjell på arker og bakteriar\nFor å kunne overleve i slike ekstreme forhald må arkene være egna til miljøet, måten den egner seg til miljøet er hovudsakeleg gjennom strukturen til [[Introduksjon til cellemembranen|plasmamembranane]] og cellevegga til arké-cella. Arker er generelt kjent til å ha like strukturer og komponentar som bakteriar, men  ofte er forskjellig på små punkter. Til dømes i celleveggen til ein standard prokaryot celle er det ganske mykje _peptidoglykan_, dette er noko som arker ikkje pleier å ha. I celleveggen til ein arké pleier det heller å vere *[[Karbohydrater.|karbohydrat]]* og *[[Proteiner og aminosyrer.|protein]]* i staden. I  ein standard prokaryot celle er det som regel ganske mange *[[Strukturen til cellemembranen.|fosfolilipider]]*([[Lipider.]]) som strukturer opp membranane, i arker er det i tillegg ein stor mengde _eterlipidar_, og _arkeol_. Noko som òg skilje ut arker frå bakterie-riket i prokaryot domenet.\n\nUndergrupper av arker har ulike unike metabolske reaksjonsveger. Arker er svært forskjellig i morfologiske, [[Metabolisme.|metabolske]] og geografiske aspektar frå kvarandre. Dette tillèt arker å utføre mange [[Økologi.|økologiske]] roller i naturen, bla. karbonfiksering og nitrogenfiksering, organisk materiale omsetjing, og mykje meir.  Metandannande arker skaper metan som eit sluttprodukt i frå karbon i frå lufta, bla. CO2. Disse arkene spiller ein viktig rolle for resirkulering av karbonforbindelsene på jordkloden, og dermed spiller ein viktig rolle i karbonkretsløpet. Likt er det andre arker som gjer det same med nitrogen, og disse spiller ein viktig rolle i nitrogenkretsløpet. Dersom arker ikkje hadde spilt ein rolle i disse kretsløpa hadde moglegheita til store organismar og biologisk mangfald på jordkloden vært meir avgrensa.\n\n## Sjukdoms framkallande arker\nIngen klare dømer på arker som er protogene eller parasitter er kjent til i dag. Mange organismar er kjent til å utnytte andre organismar til å kunne sjølv tene på det. Slik som å vidareføra sjukdomar eller å stele næring. Dette er noko som arker ikkje er kjent til å gjere, arker er heller oftast *mutualister* eller *kommensalar*. *Mutualister* betyr at begge partane tener som regel på samhandlinga mellom organismane, mens derimot betyr *kommensalar* at berre ein part tener på det, men den andre blir ikkje skada. At arker er oftast mutualister eller kommensalar gjer at arker spiller ein viktig rolle for økosystema og skader dei ikkje. \n\n## Historie:\nFør arker var oppdaga til å vere eit eiga rike var det ein stor usikkerheit om kvifor nokre bakteriar var annleis på mange aspektar frå ein standard bakterie. På denne tida prøvde ein å klassifisere mikroorganismar basert på strukturen til celleveggen, form og fasong, og ulike næring dei innteke, men ingen klare kategoriseringar oppstod. I 1965 var det to forskarar, Emile Zuckerkandl og Linus Pauling, som meinte at det var betre å bruke ny moderne fylogenetisk teknologi til å forsøke klassifisere disse mikroorganismane. . Seinare i 1977 var arker først oppdaga til å vere eit eiga rike av Carl R. Woese, ein amerikansk mikrobiolog og biokjemikar, og George E. Fox, ein astrobiologikar. Gjennom fylogenetisk analyse av slike mikroorganismar sine ribosom-RNA oppdaga dei saman at prokaryotar kunne vere meir enn berre bakteriar, noko som Emile Zuckerkandl og Linus Pauling ikkje hadde vurdert. Han oppdaga at prokaryot domenet var nemleg delt inn i to riker: arker og bakteriar. Før denne oppdaginga var det tidlegare trudd at arker var berre ein anna form for bakteriar.\n\n\n## Dømer på arker\n### Aeropyrum Pernix\nA. Pernix er ein termofil arké oppdaga ved kysten i Japan. Den var den aller første strengt hypertermofile (ekstrem termofil) arké til å bli oppdaga. Den er ballforma og har ein diameter på omtrent 1 mikrometer. Den lever i forhald mellom 70 og 100 celsius, men lever optimalt rundt 95 celsius. \n\n### Sulfolo Solfataricus\nSulfolo Solfataricus er den mest studerte termofile arké til i dag. Den var først oppdaga i 1980 der den levde i vulkanen Solfatara. Den lever optimalt i 80 Celsius og med ein pH mellom 2 og 4. Den er ballforma og lager frekvent lober.\n\n### Methanogenium Frigidum\nMethanogenium Frigidum er ein psykrofil metandannar i frå «Ace Lake» i Alaska. Cellene er litt halofile og ballforma (med diameter rundt 1,2 - 2,5 mikrometer). Dei krev salt til å vakse og har ein preferanse for kalde temperaturar. Dei lever optimalt rundt 15 Celsius, og har ikkje moglegheit til å vakse når det når 18 til 20 Celsius. \n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Asymptotic-notation.":{"title":"","content":"\n# Asymptotic notation.\nA function as the size of its input (the algorithm). The rate that the time/complexity instructions increases in by the number of input is called \"the growth rate\". We only focus on the biggest term as the function input for example $n^2+n$ we only care about the $n^2$. This example has the time complexity of $n^2$ because this value will always become the largest as $n$ increases. We also do not care about coefficients.\n\nWe have three forms of asymptotic notation.\n1. [[Big theta]]\n2. [[Big O]]\n3. [[Big omega]]\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/B%C3%A6rekraftig-forvaltning-av-naturen.":{"title":"","content":"# Bærekraftig forvaltning av naturen.\n\n\nAt [[Mangfald|naturen]] har ein nytteverdi:\nbetyr at den har ein verdi til ressurser, opplevingar, økosystemar, pollinering, rekreasjon, aesthetics etc, den kan bli bruktt til vår nytte.\n\nAt naturen har ein eigaverdi:\nbetyr at naturen har ein verdi i seg sjølv fordi den eksistere.\nTrer i amasonas har ein verdi likevel vi ikkje bruker dei.\n\n\nAt vi ser på naturen frå eit nytteverdi perspektivt betyr at den har ein *antroposentrisk natursyn*, mennesk t er i sentrum. Vi spør ofte kva kan vi bruke denne naturressursen til?\n\nAt vi ser på naturen frå ein eiga verdi perspektivt betyr at den har ein *biosentrisk natursyn*, naturen i sentrum. Ødelegger dette naturen? stiller vi ofte til oss sjølv når vi har eit slikt syn.\n\nVåre tanker og handlinger er påvirket av mange ulike forhold:\nNokre faktorer er til dømes:\n- kultur\n- effektivitet\n- lettvint?\n- vaner\n- frykt\n- behov\n- kostnad\n- forventningar av samfunnet\n- tilgjenglige ressurser\n- ønske\n- **latskap**\n- gevinst\n- reglar\n- verdiar som person\n\t- moral og etisk forsvarlegt\n- moglegheit\n\nVi har nokre reglar rundt bærekraft rundt naturen i regelverket *Naturmangfoldloven*.\nDette var vedtatt i 2009.\nHensikt: \nSikre vern og bærekraftig bruk av naturen.\n\nBærekraftig betyr:\n**\"Sikre mennesker ressursbehov samstundes som økosystema og det biologiske mangfaldet blir bevart for framtidige generasjonar\".**\n\n\nAlle tiltak som påvirkar naturen skal bli vurdert etter denna lova.\nLoven angår bla. truede arter, fremmede arter, områdevern.\n\nProblemet er at ofte blir loven tolket skikkelig dårlig av kommunar og synet er ofte på antroposentrisk natursynet. \n\n\n\n\n## Naturlege og menneskapte endringar i naturen.\n### Naturlege\nBåde [[Mangfald|abiotiske og biotiske]] faktorar påvirker populasjoner og økosystemar.\n* Dette kan vere skred, skogbrann, ras, elver som skifter laup, etc.\n\t* Konsekvensen er at dyrearter og leveområdet der blir forandres.\n\t* Men og gir moglegheit for nye arter å etablere seg der.\n\t\t* Dette kalles for *suksesjon.*\n\nSuksesjon kan foregå på to ulike måter:\n1. *Primær*: Nytt land blir gjort tilgjengleg og artsmangfaldet etableres der det ikkje før fantes liv.\n\t1. Eks. isbre smelter. Etterlater nye områder der det åpnes for liv av organismar.\n\t2. \"Ved nullpunkt\" starter heilt frå nullpunkt.\n2. *Sekundær*: endringer i eit område  der en ikkje startar frå eit nullpunkt.\n\t1. Eks: Skogbrann/ras. Der tidlegere forhald kan vere delvis til staden, nokre planter og dyr, etc, kan overleve. \n\nI ein sekundær endring blir det fasene kalt for:\n1. RETURN TO THIS.\n\n\n### Menneskeskapte\n\nFleire menneskapte ting som veibygging påvirkerar naturen.\nVeibygging gjer at jord og stiein blir liggende bart i området. \nDette er ein form for primæt suksesjon.\n\nHogst til dømes vil gjere at nokre planter, dyr og andre organismar blir igjen som gjer at den er ein sekundær suksesjon.\n\nProblemet når mennesker gjer det i staden for dei naturlige er at mennesker gjer det mykje raskare og oftere og i større grad. Til dømes:\nvi fisker opp nesten all fisken = fiskeøkosystemet er liten og kan kollapse.\n\n\n\nViktige menneskapte påvirkninger som truer naturen:\n* Arealendringer\n* Klimaendringer\n* Overbeskatning\n* Forurrensing\n* Innføring av fremmede og invaderende arter.\n\n\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/B%C3%B8lger":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/B-celler":{"title":"","content":"\n## Viktigt om B-celler.\nB-[[Introduksjon til cellen.|cellenes]] **viktigste funksjon er å produsere antistoffer** som binder seg til antigener. B-celler utvikles i **beinmargen** gjennom heile livet.\nNye og kvilande B-celler vandrer frå beinmargen via blodet til *lymfevevet*. Vi kaller dei kvilande fordi dei ennå ikkje har møtt [[Det tilpassede immunforsvaret.#Antigen|antigenet]] sitt, så dei er ikkje blitt stimulert til å skille ut [[Det tilpassede immunforsvaret.#Antistoff|antistoffer]]. B-cellene holder til i *lymfeknutene*, *milten* og i *lymfevevet* under *[[Det medfødte immunforsvaret.#Det medfødte indre forsvaret.|slimhinnene]]* blant anna i tarmveggen. I *lymfevevet* fanges fremmede antigener opp og registreres av både B-celler og [[T-celler]]. **Når B-cellen har bundet seg til eit antigen og samtidig får godkjent signa frå ein T-celle, vil den begynne å dele seg.** Den opprinnelige B-cellen kan gi opphav til nærare tusen datterceller.\n\n## Typer B-celler.\nEtter fleire runder med [[Mitose.|celledeling]] vil B-cellene utvikle seg videre til ein av to typer B-celler: *plasmaceller* eller *B-hukommelseceller*. **Plasmacellene** har **ikkje antigenreseptorene festet i overflaten**, men skiller dei i staden ut som fritt antistoff. Dei to typene molekyler er identiske bortsett frå at antistoffet mangler den delen av molekylet som antigenreseptoren bruker for å feste seg til cellemembranen.\n\n*Plasmacellene* har som oppgåave å produsere store mengder antistoff som skilles ut til blodet og vevet. antistoffer kan binde  seg til atnigener som sitter på overflaten til ein mikroorganisme. Men antistoffer kan også binde seg til frie antigenr, for eksempel bakteriegifter eller biter av virus og bakterier, bl.a. i vaksiner. Fordi antistoffer hat to armer blir det store klumper som hemmer mikroorganismene eller bakteriegiften. Slike klumper av antigen og antistoff blir fjernet ved at [[Det medfødte immunforsvaret.#Fleire ulike typer fagocytter i det medfødte indre forsvaret.|fagocytter]] spiser dem og bryter dem ned. \n\nNokre av B-cellen blir til *B-hukommelseceller*. Både B-hukommelseceller og plasmaceller kan leve i kroppen i lang tid. **Plasmacellene sørger** for at det **stadig produseres litt antistoff** som passer godt med mikroorganismene vi  tidligere har reagert på etter infeksjon eller vaksine. Det gjer at neste gong mikroorganismen kjem inn i kroppen finnes det allereie antistoffer der, klare til å reagere. Siden dei ferdig utviklede plasmacellene ikkje har [[Det tilpassede immunforsvaret.#Antigen|antigener ]] i overflaten vil dei ikkje bli stimulert på nytt til å dele seg. Mange av dei vil etter kvart dø. *B-hukommelsecellene* derimot derimot har antigenreseptor i overflaten og står klare til aksjon neste gong det samme antigenet kjem inn i kroppen. Dei begynner då raskt å dele seg og utvikle seg til nye plasmaceller. Dette fører til rask respons med stor produksjon av antistoffer allereie etter nokre få timer. Antistoffer og hukommelseceler er dermed viktige for *immunitet*, det vil si at vi ikkje får symptomer på infeksjon. Det er også grunnen til at vaksiner kan beskytte mot infeksjon av mikroorganismer vi aldri tidlegere har møtt.\n\n\n\u003e[!INFO] Oppsummering\n\u003eKvilande nye B-celler som stimuleres av antigenet som passer til antigenreseptoren deira kan dele seg og utvikle seg vidare til enten *plasmaceller* eller *B-hukommelseceller*. Plsamaceller skiller ut store mengder antistoffer, men kan ikkje stimulerest på nytt. Hukomellsescellene har antigenreseptorene festet i overflaten og kan stimulers til å dele seg og utvikle seg på nytt. Begge celletypene er viktige for immuniteten.\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Bakteriar":{"title":"","content":"# Bakteriar\n\n## Kva er bakteriar\nBakteriar (_Bacteria_) er små eincella [[Prokaryote celler.|prokaryot]] mikro-organismar som lever i nesten alle moglege miljø, og er nødvendige for planetens [[Økologi.|økosystem]]. Kort etter det første [[Kva er liv?|liv]] oppstod på jordkloden oppstod dei første bakteriane 3,5 milliardar år sidan. Oftast lever bakteriar i milde forhald, men nokre arter av bakteriar kan leve under ekstreme temperaturar og ekstrem trykk. Størrelsen på ein generell bakterie varierer mellom 0,5 og 5 mikrometer, men det er nokre som kan bli opp til 500 mikrometer (0,5mm). Når ein stor populasjon av bakteriar er til staden former dette ein bakteriekoloni. Bakteriar har som regel ganske korte livstider, noko som indikerer at bakteriekoloniar kan ofte raskt tilpasse seg til endringar i miljøet. Dette er den leiande grunnen til at bakteriar har klart å overleve i så lang tid, gjennom bla. masseutrydding hendingar og istidsperioder. \n\n\n## Kategorisering\nFor å kategorisere bakteriar finnes det fleire ulike metodar, ein av dei mest brukte er basert på dei mest normale formene og fasongane til bakteriar. Her blir det kategorisert inn i tre ulike kategoriar; dei spire forma _spirillene_, dei stav forma _stavane_, og dei ballforma _kokkene_. Bakteriar er òg kategorisert på andre metodar som inntak av næring basert kategorisering. Når ein kategoriserer bakteriar inn basert på korleis dei får tak i næring så delast dette inn i to hovudkategoriar; *autotrofe* og *heterotrofe*.\n\nAutotrofe bakteriar er produsentar som tyder at den skaper organiske forbindelsar av uorganiske forbindelsar (primært CO2), og det er slik cella får tak i næring.  Nokre autotrofe bakteriar driver med fotosyntese og kallast for fotoautotrofe bakteriar, og er blågrønnbakteriar (cyanobakteriar). Ein anna autotrofe gruppe er kjemoautotrofebakteriar, her bruker bakterien uorganiske stoffar som ligger i naturen og bruker dette direkte som energikjelde. Dette er i motsetning til fotoautotrofe bakteriar og blågrønnbakteriar som får energien frå fotosyntesen. \n\nHeterotrofe bakteriar er konsumentar og nedbrytarar, som tyder til at dei får energien sin i frå daudt organisk materiale, i staden for uorganisk som autotrofe bakteriar bruker. . Eit godt døme på ein anerkjente heterotrofe bakterie er «_E. Coli»,_ E. Coli er ein bakterie som ligger naturleg i magen der den får energi i frå maten som menneske spis.  Heterotrofe bakteriar er òg den einaste kategorien av bakteriar som kan vere protogene; sjukdomsframkallande. Bakteriar er ofte assosiert med sjukdomar og daud, men bakteriar er både nødvendig og godt for naturen og helsa. Fleire bakteriar er nødvendige for at menneske skal kunne overleve og funksjonere. Det er bakteriar i magesekken, som E. Coli, som hjelper med nedbryting av mat, og bakteriar på huda som hjelper med å fjerne fukt. \n\n\n## Miljø tilpassing\n\nBakteriar er særdeles godt tilpassa til miljøa og dermed må dette tyde til at det oppstår variasjon i genomet under reproduksjon prosessen eller i andre deler av livssyklusen, slik at den kan tilpasse seg. Fordi bakteriar er prokaryot skjer det ikkje ein seksuell reproduksjonsprosess ([[Ulike typer reproduksjon.#Binær fisjon|Aseksuell reproduksjons]]), noko som tyder til at det sjeldan oppstår variasjon i genomet til ein bakterie frå ein generasjon til ein anna. Under binær-fisjon, reproduksjons prosessen for dei fleste prokaryotar, kan det oppstå mutasjonar i [[DNA]]-et, variasjonar i genetisk informasjon grunna feil. Dette skaper variasjon frå ein generasjon av prokaryot til ein anna. Bakteriar har likevel klart å funne fleire vegar til å skape enda meir genetisk variasjon under livssyklusen, noko som hjelpar til med tilpassing. Ein anna metode genetisk variasjon blir innført er gjennom at bakterien har transposoner. Transposoner er strukturer som tillét cella å direkte dele plasmid genetisk informasjon til andre celler. Denne prosessen av deling av genetisk informasjon for bakteriar heiter bakterie-koagulasjon, og er ein form av horisontal genoverføring. Fordi antibiotika genar ofte ligg i plasmid gjer dette at bakteriekoloniar sin evne til å motkjempe antibiotika ofte blir raskt forsterka. Noko som gjer at vi er i ein konstant kamp i mot bakteriar. \n\n## Historie\n\nAntonie Van Leeuwenhoek (1632-1723) er anerkjent til å vere den første til å oppdage mikroorganismar og bakteriar i 1677 i eit av hans mange brev. Først var hans oppdaging tvilt på av andre forskarar pga. vanskar med å gjenskaping av forsøket. Hans oppdaging var berre mogleg pga. Robert Hooke (1635-1703) sin oppdaging av celler i 1655 og hans vidareutviklinga av mikroskop. Oppdaginga av celler ledet til Leeuwenhoeks undring om det kunne eksistere individuelle organismar på ein slik mikroskopisk skala. Mikroskopa som var før Leeuwenhoek var ikkje gode nok til å kunne oppdage mikroskopiske objekt på ein slik skala, dette ledet til at han måtte forbetre mikroskopet for å teste hans hypotese. Hypotesen til Leeuwenhoeks blei bevist sann under diverse forsøk han utførte, og han oppdaga bakteriar.\n\n## Dømer av bakteriar\n\n| RIKE    | BAKTERIAR           | BAKTERIAR          | BAKTERIAR           |\n| ------- | ------------------- | ------------------ | ------------------- |\n| REKKE   | Psuedomonadota      | Psuedomonadota     | Psuedomonadota      |\n| KLASSE  | Gammaproteobacteria | Betaproteobacteria | Gammaproteobacteria |\n| ORDEN   | Enterobacterales    | Nitrosomonadales   | Vibrionales         |\n| FAMILIE | Enterobacteriaceae  | Spirilliceae       | Vibrionaceae        |\n| SLEKT   | Enterobacteriaceae  | Spirllum           | Vibrio              |\n| ART        |      Escherichia Coli               |     Spirllum Minus               |          Vibro Vulnificus           |\n### Escherichia Coli\n\nE. Coli er ein stavforma bakterie som er normalt funnet i den nedre tarmen av varm-blodet organismar. Dei aller fleste formene av E. Coli er fullt skadelause og ofte er til nytte for verten, men nokre stammer av bakterien kan skape seriøs matforgifting. Alle formar av E. Coli bakteriar døyr når den når temperaturar over 70 Celsius. Den største kjelda til E. Coli matforgifting er gjennom rått kjøtt, og dermed er det ikkje lurt å ete rått kjøtt med tanke på helsa. \n\n\n### Spirillum Minus\nS. Minus er ein stavforma bakterie ofte assosiert med «rottebit feber». Rottebitt feber kjem i to ulike formar, den eine er forårsaka av S. Minus. Denne forma er kjent som _sodoku_ og kjem i frå japansk betyande; «rottegift». S. Minus er særleg funnet i Asia. Dei største teikna til at ein har blitt smitta med sodoku av S. Minus er feber og utslett. Det er ein viss usikkerheit om S. Minus faktisk er ein bakterie eller ikkje, dette er fordi morfologisk ser den ut som ein bakterie, men den har nokre oppførsel punkter som ikkje liknar på andre bakteriar. Fylogenetisk analyse av bakterien skal kunne svare på dette spørsmålet. \n\n\n## Vibro Vulnificus\nV. Vulnificus er ein buet stavforma sjukdomsframkallande art av bakterie. Infeksjonstypane den kan framkalle er _cellulitis_ og _sepsis_. Bakterien er ikkje ein særleg kjent bakterie, men den er den leiande årsaka til sjømat forårsaka daud i mange land. I USA er den ansvarleg for omtrent 95% av all sjømat ansvarleg daud. I dag er dei optimale kurane til sjukdomane påført ikkje kjent. Måten infeksjonane fungerer på er gjennom å bryte ned muskelvevene til den levende vert organismen. Ein av dei tre typane av infeksjon den påfører får cellene til å svulme opp til dei eksplodere gjennom [[Diffusjon|diffusjonsprosessen]], denne prosessen heiter _nekrose_. ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Befruktning-og-utvikling-Seksuell-reproduksjon.":{"title":"","content":"# Befruktning og utvikling. [[Ulike typer reproduksjon.#Seksuell reproduksjon|seksuell reproduksjon]].\n\n\n\n\u003e[!INFO] Her er det eit fokus på mennesker.\n\u003eMen det er mykje informasjon som ein kan settje til generell informasjon som gjelder dei aller fleste seksuelle reproduksjons prosesser. Slik som dette med at ein **sædcelle**, (eller equivalent som pollen), må **befrukte** ein **eggcelle** (eller ein equivalent). (Ja, planter kan pule 😈)\n\n\n## Introduksjon, døme: mennesker.\n\nLes dette først: det er ein tbh litt shit introduksjon but deal with it fam.\n\nNår sædcellen kjemer i kontakt med eggcellen så vil det vere 46 [[Kromosomer, Kromatider, Kromatiner.#Kromosomer|kromosomer]] igjen. (Originalt var det 23 kromosomer i kvar gamet ,[[Meiose.]]) \n\nKjernene til [[Introduksjon til cellen.|cellene]] smeltes sammen, heile cellene smeltes sammen.\n\nFleire millioner sædceller ([[Grunnleggende celleteori.#Litt historie|fun fact, antonie]]) er i ein slags krig om å vere den første til å  smelte seg sammen med eggcellen. \n\n\u003e[!INFO] Ein ny studie.\n\u003eEg meiner på at eg huske å lese ein studie som indikerer til at eggcellen faktisk kan ta i mot fleire ulike sædceller, og vere selektiv på kva for ein den ønsker å smelte seg sammen med, og deretter berre get rid of dei andre. Men dette er ikkje det som skal bli lært, og dette er ein ganske urelevant studie tbh. Ignorer detta, men eg syns det er litt kult.\n\nKjernene før dei smeltes sammen heiter *prokjerner*.\n\nEit befruktet egg før divisjon blir kalt for ein *zygote*. Det er altså stadiet eit organisme er i rett etter at den har fått sitt full [[DNA|genetisk informasjon]] sett.\n\nEin befruktet eggcelle/organisme som har komt eit stykkes kalles for ein *blastocyst* og den er hull og består av nokre hundre celler, den har altså dividert seg. Har altså komt i andre ord litt lengre enn ein zygote i livet.\n\nDeretter når den liknar ein ganske fucked up baby alien ting blir det kalt *embryo*. (Trur eg lmao)\n\n\nSeiner blir det eit *foster*. \n\n\n## Basic in depth, døme:mennesker.\n\n\n### Diffensiering og apoptose.\nI løpet av utviklingen øker antaller celler gjennom divisjonen, dette er nødvendig slik at kroppens vakser, vev, organer, og strukturer kan formest.\n\nNår slike strukturer blir dannet, og celler spesialiserer seg blir denne prosessen kalt for \"*diffensiering*\". Utan diffensiering hadde du vore ein blob av celler, og du hadde ikkje tenkt å bry deg om skule 🥳.\n\nUnødvendige celler må òg bli fjernet til å skape plass for viktige strukturer. (Tenk at det starter som ein stein, og vi må hakke vekk slik at vi får ein skulptur. ) Dette skjer gjennom [[Apoptose]]. Til dømes: ein hand kan starte som ein blob og ende opp med 5 fingre.\n\n### Menneske utvikling:\n1. *Zygotisk* stadiet.\n\t1. Zygoten er formet når hankjønn gameten og hokjønn gameten smeltes samen.\n2. *Blastocyst* stadiet:\n\t1. Den eincellede zygoten begynner å dividere seg inn i ein solid ball av celler. Den da er ein hull ball kalt ein *blastocyst*, denne fester seg til morens livmor.\n3. *Embryonal* stadiet.\n\t1. Dei største indre organene og utsidige egenskapene (\"features\" på engelsk) begynner å bli skapt, skape ein *embryo*. I dette stadiet blir hjertet, hjernen, og ryggraden bla. synleg.\n4. *Foster* stadiet.\n\t1. Når formet egenskaper av emryoet begynner å vakse og utvikle er organsime annerkjent som eit forster. Diffensieringen og spesialisering av strukturer.\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Beskrive-grafer.":{"title":"","content":"# Beskrive grafer.\nNår vi skal bruke grafer i problemer, kanskje vi skal finne den shorteste pathen mellom to ulike person i eit sosialt nettverk. Eller kanskje vi vil berre representere dette nettverket. \n\nHer er ein måte å representere dette sosiale nettverket vi har drøftet oss på.\n![](https://cdn.kastatic.org/ka-perseus-images/faa1c44e1ab848623096b85b9aa32626b8d8d040.png)\nHer betyr ein linje at dei kjenner kvarandre. Viss det er ingen linje kjenner dei ikkje kvarandre. \n\nDette sosiale netverket er ein graf. Navnene er det som blir kalt \"vertices\" av grafen. (Eintall: \"vertex\"). Kvar linje er det som er kjent som ein \"edge\", dei. tilkolber to ulike vertices. Vi noterer ein edge ved å lage eit par av $u$ og $v$ som er to ulike vertices i ein graf. I dette dømer fordi dei kjenner kvarandre går disse edgsene begge veger, dette betyr at grafen er \"undirected\" og dermed gjer at vi kan gå begge veger på denne edgen. Det er ikkje alltid slik: nokre grafer er \"directed\" som tyder til at e dger ikkje alltid går begge veger, men går berre ein veg, til dømes: bob veit at bill eksiterer, men bill har aldri hørt namnet bob.  I ein udirected graph  ein edge mellom to vertices er incident på dei to verticesene og vis sier at verticsene er conncted med ein edge som er adjcent eller neighbours. Mengden av edges incident på ein vertex er degree av ein vertex.\n\nI vårt graf Audrey og Frank kjenner ikkje kvarandre. Viss Frank ville blitt introdusert til Audrey, måtte dei bli kjent gjennom nokre venner. Frank kjenner Emily som kjenner Bill som kjenner Audrey. Det er dermed ein path av tre edges mellom Frank og Audrey. Faktisk er det den mest direkte veien for Frank å møte Audrey, det er ingen path mellom dei med mindre enn tre edges. Vi kaller ein path mellom to vertices med den minste moglege edges ein shortest path.\n\n![](https://cdn.kastatic.org/ka-perseus-images/d8992fc9232fa32547d362c79fc3319a3b1b6b95.png)\n\n\nNår ein path som går fra ein viss vertex leder tilbake til seg sjølv så er det ein cycle. Dette sosiale nettverket inneholder mange cycles, ein av dei går frå Audrey til Bill til Emily til Jeff til Harry til Ilana og tilbake til Audrey. Det er mangen cycles her! Det er òg ein kortere cycle om inneholder Audrey.\n![](https://cdn.kastatic.org/ka-perseus-images/2b4922a8372b82d83bfb5eb416f338fc38b57d96.png)\n\nNokre gonger plasserer vi numerisk verdier på edgesene. Til dømes i eit sosialnettverk, kan vi bruke numeriske verdier til å indikere kor godt to individer kjenner kvarandre. Eller vi kan bruke eit vegkart over byet og si at vegene sine distanser er dei numeriske verdiene på edgesene. Da er verticesene byene og edgesene vegene, og dei verdiene på edgesene er veglengden/distansen. Her er eit døme frå Amerika.\n\n![](https://cdn.kastatic.org/ka-perseus-images/8aa21944eef2879cea9080a2ae2fbcb98cec0ddf.png)\n\n\nDet generelle begrepet vi bruker for eit nummer som er på ein edge er kalt dens weight, og ein graf der edgsene har weights blir kalt ein weighted graf. Til dømes i eit vegkart, viss du vil finne den korteste ruten mellom to lokalisjoner, leter du egentelig for den  pathen med minimum edge weights  totalt mellom dei to ulike verticsene(lokalisjonene). Dette blir kalt [[Rekurisve algoritmer.|shortest path finding algoritmer og dette er ein rekurisv algoritme.]]  Disse edgsene som nemnt i starten går ikkje alltid begge vegene, av og til går dei berre ein veg. Når det berre går ein veg er det kalt ein directed graf, fordi edsgene går i ein retning, dei er nemleg directed.  \n\nGrafer som garantert uansett kva har ingen cycles blir kalt ein directed acyclic graph eller kort DAG. Disse kan sjølvsagt vere weighted. Ein DAG kan aldri vere undirected da har vi mange mange mange cycles, uansett om vi bare hadde hatt 2 vertices hadde det vore ein cycle.\n\nMed directed edges har vi litt anna begrepre. Vi sier at ein edge leave ein vertex og entere ein anna. Viss ein directed edge leave vertex $u$ og entere $v$ så noterer vi dette gjennom $(u,v)$ . Orderen av vertices i pair er ganske viktigt, fordi det noterer ka for ein directed retning den viser går i. \n\n## Graf størrelse.\nNår vi jobber med grafer, er det hjelpfullt å kunne snakke om mengden vertices og edges. VI pleier å notere vertex mengden med notasjonen $V$, og edgsene med $E$. Når vi representerer ein graf eller kjører ein algoritme på ein rgaf, bruker vi ofte ulike størrelse av vertecies og edgeses i vår [[Asymptotic notation.]]. Til dømes viss vi snakker om ein kjøre tid som er linear med mengden vertices. Strengt sagt ville vi sagt at det er $\\theta(|V|)$  , og vi bruker notasjonen $|.|$ til å notere størrelse av settet med vertices. Men det blir ganske tungvint. å bruke $|.|$ til kvar einaste gang vi skriver det i asymptotic notasjon, i asymptotic notasjon (og **berre** i asymptotic notasjon) skriver vi heller da utan å bruke $|.|$ vi sier dermed i staden for $\\theta(|V|)$ over til $\\theta(V)$. ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Big-O":{"title":"","content":"# Big O notation.\n\n[[Big theta]] brukes når ein vil bounde running timen mellom to uike konstanter, men av og til vil vi berre ha den bounden mellom ein $konstant\\times n$ og $0$.\nTil dømes er det feil å si at binary search har ein running time av $\\theta(\\log_2(n))$ fordi i beste tilfelle er det $\\theta(1)$. Da passer Big O notation aller best. \nFor store verdier av $n$ er Big O på det meste $K\\times n$ for ein eller anna verdi av $K$.\n\nBig O er  asymptotically upper bound som betyr at  for store verdier av $n$ er alltid runnning timen under $K\\times n$. \nDette kan vi da bruke til å seie at running timen til binary search er det samme som $O(\\log_2(n))$.  I tillegg kan vi seie at alle algoritmer som har ein running time i Big $\\theta$ har den samme running timen i Big O. Men dette funker ikkje omvendt!\n\nVisuelt bilete:\n\n![](https://cdn.kastatic.org/ka-perseus-images/501211c02f4c6765f60f23842450e1151cfd9c89.png)\n\n\nBinary search kjører alltid i $O(\\log_2(n))$, men ikkje alltid i $\\theta(\\log_2(n))$.\n\n\u003e[!Mistolkinger!]\n\u003eOfte så mistolker ein at Big O er det alltid nærme den aktuelle verste sceneario av ein algoritme. Men dette er feil!\n\u003eVi kan til dømes si at binary search òg kjører i $O(n)$ fordi vi veit at binary search kjører alltid  lavere enn denne verdien,  men denne verdien er ikkje nærme den worst case scenario-et som er faktisk på $O(\\log_2(n))$.  Likevel er begge like gyldig å si!\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Big-omega":{"title":"","content":"# $\\text{Big } \\Omega$ / Big Omega notation.\n\n\nAv og til vil vi si at ein algoritme har tar minimum ein mengde tid utan å si noko om maksimumen. For Big $\\Omega$ viss vi har ein stor $n$ kan vi seie at ein algoritme vil ta minimum $K\\times n$, for ein eller anna verdi av $K$. Vi sier at Big $\\Omega$ er asymptotically lower bound fordi den bounde veksten av running timen frå botn når det er store verdier av $n$.\nVisualisering:\n\n![](https://cdn.kastatic.org/ka-perseus-images/c02e6916d15bacae7a936381af8c6e5a0068f4fd.png)\n\nAkkurat som $\\theta(f(n))$ tuder til at $O(f(n))$ er sant tydet det også til at $\\Omega(f(n))$ er sann, så vi kan seie at det verste scenarioet for binary search er $\\Omega(\\log_2(n))$. \n\n\u003e[!Note]\n\u003e Vi kan også seie at binary search har ein worst case running time av $\\Omega(1)$, fordi vi veit at binary search tar i vertfal ein konstant fart. Det er heilt korrekt, men svært upresist!","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Big-theta":{"title":"","content":"# $\\text{Big } \\theta$   / Big theta - notation.\n\n## Linear search.\n\nThe worst case time complexity of a linear search is the input size \"n\". Each iteration it has to do several things, and these things has a a computation time.\nThe computation time is dependant on the computer and other factors such as programming language. \n\nIn addition other computations may be present that are not dependant on input size.\nWe cant note the compelexity as $C_1 \\times n + C_2$. Where $C_1$ is the comptutation time dependant on the input size and $C_2$ is the computation time not dependant on the input size. \n\nThe running time of all these computations is called $\\theta(n)$ \"Theta of n\". \nWe say that at the best the running time is $K_1\\times n$, and at worst $K_2 \\times n$.\nFor some values of $K$.\n\nOnce n gets very large we say that the running time has to be inbetween $K_1\\times n$ and $K_2 \\times n$\n\n\u003e[!Note]\n\u003e$\\theta(n)$ is not restricted to just input of n, it can be any function of n.\n\u003eFor example: $\\theta(n\\times \\log(n))$. \n\n## Some more general knowledge.\nWhen using Big $\\theta$ we say we have an asymptotically tight bound on the running time. \n\"Asymptotically\" as it only matters for big values of $n$. And \"tight bound\" as it lies between the best scenario and worst.\n\nA visual guide to Big $\\theta$:\n![](https://qph.fs.quoracdn.net/main-qimg-fbe65e88a496258c5de9ab25555f0508)\n\n\n\n Functions in asymptotic notation when the best case scenario is at the first position of n, we say that the algorithm has a complexity of $\\theta(n^0)$ aka. $\\theta(1)$.\n\n\nNow say that for example it takes $\\theta(\\log_{10}(n))$ you could also say that is takes $\\theta(\\log_{2}(n))$ whenever the base of the $\\log$ is a constant, we can have it whatever we please. As we have a mathematical proof that is as follows:\n$\\log_a(n)=\\frac{\\log_b(n)}{\\log_b(a)}$ . And as we discussed earlier in [[Asymptotic notation.]] we do not care for coefficients, we can indeed set the base to whatever we want. For all positive values of $a,b,n$. If $a\\space \\\u0026 \\space b$ are  constants they differ only by a value of $\\log_b(a)$, which is a factor so we ignore it.  For example the worst running time of binary search is $\\log_a(n).$ Because at most it would be $\\log_b(n)+1$. Because they are constants we can also say that it is just $\\log_a(n)$. \n\n\u003e[!Funny note]\n\u003eNormally computer scientists like to use $\\log_2(n)$, because we like to think in base 2. 😂\n\n\nThere is often an order to the functions we say when analyzing using asymptotic notation. If $a\\lt b$, then $\\theta(n^a)$ grows slower than $\\theta(n^b)$.\n\nExample:\n$n^1$ grows slower than $n^2$. \n\nThe exponents do not have to be integers either.\nLogarithms grow slower than polynomials, $\\theta(\\log_2(n))$ grows slower than $\\theta(n)$, but $\\theta(1)$ is the fastest!\n\nOften encountered speeds:\n1. $\\theta(1)$\n2. $\\theta(\\log_2(n))$\n3. $\\theta(n)$\n4. $\\theta(n\\times \\log_2(n))$\n5. $\\theta(n^2)$\n6. $\\theta(n^2 \\times \\log_2(n))$\n7. $\\theta(n^3)$\n8. $\\theta(2^n)$\n9. $\\theta(n!)$\n\n\u003e[!Note.]\n\u003e$a^n$ always grows faster than $n^b$ when b is constant and $a\\lt1$.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Bits-og-Bytes.":{"title":"","content":"1 bit er 0 / 1.\n1 byte er 2^3 bits, /  8 bits.\n1KibiByte er 2^10 bytes / 1024 bytes.\n\n\n## Charles Babbage\n\nCharles Babbage skapte den første programmbare datakmaskinen, som var mekanisk og ikkje basert på bits og bytes som Alan TUring gjorde.\n\nHan lagte planene men han aldri skapte den fordi teknologie var ikkje der.\n\n![](https://www.thoughtco.com/thmb/t7zjM9gGElZO4suhnC384cCShdM=/2500x1905/filters:no_upscale():max_bytes(150000):strip_icc()/Babbage_Analytical_Engine_1837-5b7ea419c9e77c005731751e.jpg)\n\n## Ada Lovelace\nBlei undervist av Charles Babbage.\nEin av dei første kvinnlige matematikerene i Storbritannia\nDatter av poeten Lord Byron\nUtviklet algorithmer for Charles Babbage sin Analtyic Engine\nReknast som ein av verdas første programmere\n\nBoring lady git gud fam 🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓\n🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓\n🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓\n🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓\n🤓🤓🤓🤓🤓🤓🤓🤓🤓🤓\n\n## Alan Turning my beloved \u003c3 \u003c3 🍆💦👌🥺\n\n![](https://openlysecular.org/wp-content/uploads/2014/09/alanturing2pic.jpg)\n\nTop ten gangsters.\nKnekket enigma koden, basically. Lagte ein maskin som tok nytte av menneskefeil som var ganske lette å unngå men som tyskerene var dumme, lagte ein maskin for å automatisere leiten etter koden basert på kjente ord og uttrykk. Som \"HEIL HITLER\" i slutten av kvar brev.\n\nSkapte bit og byte systemet, reddet omtrent 14 million liv.\nBlei arrestert for å vere homofil og drepte seg sjølv fordi han var det. Sendte ut ein challenge om folk klarte å løse ein kryssord i nyhetsavisen for å finne folk som ikkje var dumme.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Breadth-first-search-BFS":{"title":"","content":"# Breadth first search.\nBreadth first search er ein simpel algoritme som finner distansen frå ein  [[Beskrive grafer.|vertex]] til andre alle vertices på grafen, og den finner den shorteste path-en som gjer at vi kaller det ein shortest path algoritme. Vi bruker dei ulike metodene til å store [[Representere grafer.|grafer]] på til å searche gjennom disse. Av og til er ein betre enn ein anna. Den fungerer ved å starte ved ein source vertex og for så sjekker den alle nære vertexer om det er vår ønsket vertex, og gjer slik lag på lag videre, til den har fylt ut heile området. Måten den finner vårt slutt vertex gjer at den finner den korteste vegen, fordi når den først når vertexen har den allereie funnet den korteste vegen gjennom dens naturlege søkemåte. Vi pleier å representere distanse verdi frå slutten for å vite kor langt unna vi er, og så går vi berre nedover frå starten ned gjennom den laveste og sine nærmeste vertexes, og til slutt ender ein med målet. Slik:\n![](https://cdn.kastatic.org/ka-perseus-images/1448249c9f4972b72248d899406a7f0c92fc5f3b.jpg).\nDenne her grafen er ein undirected graf. Kvar vetex går til ein kube som ikkje er ein del av ein vegg, og kvar edge er mellom to tilkoblet kuber. \n\nAlgoritmen breadth first search er som den er i namnet den går etter bredden først, i andre ord den sjekker gjennom alle adjacent vertecises før den går til kvar av disse verticesene sine tilkoblet vertices, og slik går den videre. Denne algoritmen fungerer for alle typer grafer, så lenge vi starter ved vår source vertex kan vi, viss mogleg, alltid komme til vår goal.\n\n## Algoritmen.\nBreadth first search algoritmen gir to ulike verdier for kvar vertex $v$:\n1. Ein distanse\n\t1. Som viser minimum nummer av edges i ein path frå source vertex-en til vertex $v$.\n2. Predecessor vertex av vertex $v$.\n\t1. Viser kva vertexer som leder inn i vertex $v$, startvertex har ein spesiell verdi som $null$. (Ikkje $0$ men $null$).\n\nDersom det er ingen path frå source vertexen til vertex $v$ så er $v$ sin distanse uendelig, og dens predecessor vertex har ein lik spesiell verdi som startvertexen.\n\nTil dømes: her er ein undirected graf med åtte vertices, nummerert 0 til 7, med vertex nummerer som er over eller under (Indices). Inni kvar vertex er de to nummere, dens distanse frå source vertexen som i dette tilfellet er $3$, følgt av dens predecessor på den shorteste pathen frå vertex $3$. Ein $-$ indikerer $null$.\n![](https://cdn.kastatic.org/ka-perseus-images/3545933c2fca71e45a03f1bb1bf2933b75c60e02.png)\n\nI bfs setter vi origintalt distansen og predecessoren av kvar vertex til den spesielle verdien (null). Vi starter searchen på source vertexen og gir den ein distanse av $0$ til seg sjølv. Deretter går vi til alle dens naboer av sourcen og gir kvar nabo ein distanse av 1, og dens predecessor til å vere source vertexen. Deretter går vi til kvar av disse naboene, og sjekker alle dens naboer som ikkje allereie har blitt sjekket, og vi gir disse verticesene ein distanse av 2, og dens predecessor til å vere den naboen vi nettopp sjekket. Vi fortsetter slik til alle vertices som er moglege å nå i frå source vertexen har blitt sjekket, alltid sjekker vi alle vertices på distanse $k$ frå sourcen før vi sjekker nokon vertex på distanse $k+1$. Dei verticesene som ikkje er moglege å nå vil aldri bli sjekket.\n\nBasically vi sjekker alle naboer, vi sjekker alle naboene sine naboer som ikkje har blitt sjekket endå, lagre verdi av distanse, repiter.\n\nVi veit at alle vertices som har ein verdi av $null$ er ikkje nåbare av source vertexen når vi er ferdig med å sjekke alle. Og at dei som ikkje har blitt nådd endå har òg verdi av $null$ fordi dei har ikkje blitt angitt verdier endå.\n\nDet meir viktige spørsmålet er korleis vi kan holde følge med på verticesene som har blitt sjekket, men har ikkje vert starten av ein sjekk. For dette bruker vi ofte ein $queue$, som er ein data struktur som tillater oss å inserte og remove elementer, der den elementen vi fjerner er alltid den som vært lengst i queuen. Denne oppførselen kaller vi for *\"first in, first out\"*. Ein queue har tre operasjoner:\n* enqueue(obj): inserter eit objekt inn i queue-en, og returnerer objektet.\n* dequeue(): fjerner objektet som har vært lengst i queue-en.\n* isEmpty(): returnerer true dersom queue-en inneholder ingen objekter i momentet det blir sjekket, og returnerer false dersom queue-en inneholder minst eit objekt.\n\nNår vi først besøker ein vertex så enqueue me den. Ved starten enqueue med source vertexen fordi det alltid den første vertexen vi besøker. For å bestemme kvar for ein vertex vi besøker neste, så velger vi den vertexen som har vært i queuen lengst og fjerner den frå queuen, i andre ord så bruker vi vertexen som er returnert frå dequeue().\n\nMerk at for kvart moment så innheolder queue-en entens aller vertices med samme distanse, eller den inneholder vertices med distanse $k$ følgt av vertices med distanse $k+1$. Dette sikrer at vi får besøkt alle vertices på distanse $k$ før vi besøker nokon vertices med distanse $k+1$.\n\n\n```javascript\nvar doBFS = function(graph, source) {\n    var bfsInfo = [];\n\n    for (var i = 0; i \u003c graph.length; i++) {\n\t    bfsInfo[i] = {\n\t        distance: null,\n\t        predecessor: null };\n    }\n\n    bfsInfo[source].distance = 0;\n\n    var queue = new Queue();\n    queue.enqueue(source);\n\n    // Traverse the graph\n    \n    while(!queue.isEmpty()){\n        var longestVertex = queue.dequeue();\n        for(var i = 0; i \u003c graph[longestVertex].length; i++){\n            var search = graph[longestVertex][i];\n            if(bfsInfo[search].distance===null){\n                bfsInfo[search].distance=bfsInfo[longestVertex].distance+1;//W=1\n                bfsInfo[search].predecessor=longestVertex;\n                queue.enqueue(search);\n            }\n        }\n    }\n    \n    \n    \n    // As long as the queue is not empty:\n    //  Repeatedly dequeue a vertex u from the queue.\n    //  \n    //  For each neighbor v of u that has not been visited:\n    //     Set distance to 1 greater than u's distance\n    //     Set predecessor to u\n    //     Enqueue v\n    //\n    //  Hint:\n    //  use graph to get the neighbors,\n    //  use bfsInfo for distances and predecessors \n    \n    return bfsInfo;\n};\n```\n\n\n\n## Analyse av breadth first search.\nVi kan vi at breadth first search openbart ein runningtime av $O(V+E)$, fordi vi går berre gjennom alle verticesene ein gang, og vi sjekker alle edgesene berre ein gang totalt. \n\nMen vi kan ta ein liten nærmere titt på matematikken bak dette, fordi vi elsker å analysere!\nLa oss anta for eit moment at $|E|\\ge|V|$, da dette er casen for dei aller fleste grafer, spesielt dei med BFS. Da er $|V|+|E|\\le|E|+|E| \\rightarrow |V|+|E|\\le 2\\times |E|$, Da kan vi ignorere den nokre verdier fordi vi driver med [[Asymptotic notation.]]. Spesifikk [[Big O]].\nSå ser vi at $O(V+E)$ egentelig betyr $O(E)$, fordi $E$ bestemmer nesten alt.\n\nDerimot viss $|E|\\lt |V|$ då er $|V|+|E|\\le 2\\times |V|$ og da vil $O(V+E)$ bety  nærmast det samme som $O(V)$. Vi kan settje disse to situasjonene sammen til ein ny asymptotisk notasjon av $O(max(V,E))$. Generelt viss $O(x+y)$ oppstår kan vi ofte korte det ned til $O(max(x,y))$, fordi den eine teller mykje meir enn den andre.\n\n\u003e[!INFO] Post scriptum.\n\u003eNoter ein graf er connected dersom det er ein path frå kvar vertex til alle andre vertices. Minimum numer av edges som den grafer kan ha er dermed $|V|-1$. Ein graf der $|E|=|V|-1$ blir kalt for eit **free tree**.\n\nGrunnen til at BFS kjører i $O(V+E)$ tid er fordi det tar $O(V)$ tid å intialisere alle distanse og predecessore-ene for kvar vertex ($\\theta(V)$). Kvar vertex blir besøkt maks ein gang ($O(V)$), fordi den einaste gange den blir nådd er når distansen er $null$, så kvar vertex er $enqueued$ på det maksimume ein gang. Siden vi eksaminerer kvar edge som er connected på ein vertex vil det på det maksimale ta $|E|$ vertices å søke gjennom alle dei. Derfor er det $O(V+E)$. ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Brytning":{"title":"","content":"# Brytning","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Cartesian-Plane":{"title":"","content":"# Cartesian Plane.\n## Kva det er.\nDet kartesiske planet er den simple kordinatsystem som innhalder ein y akse og ein x akse det er den som vi blir lært på skulen.\nDen er som følgende:\n![](https://thumbs.dreamstime.com/b/blank-y-axis-cartesian-coordinate-plane-numbers-dotted-line-white-background-vector-blank-y-axis-99974293.jpg)\n\n\nDet er her vi finner nesten [[_Index_of_Matte|alt]], dersom vi ikkje tenker på [[Imaginære tall]]. ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Ceaser-cipher":{"title":"","content":"# Ceaser cipher.\n\nCeaser Cipher er ein ganske gammel metode for å enkryptere og dekrypte beskjeder i [[Kryptografi.]]. Og som namnet hintar til blei det brukt av Julius Ceaser og hans romer menn til å sende hemmelige beskjeder til kvarandre utan at nokon skal kunne forstå beskjedene.\n\n\nEin ceaser cipher enkrypsjon fungerer ved å flytte alle bokstavene i beskjeden til høgre med ein bestemt *shift key* i alfabetet. Slik at den som veit kva shift keyen er kan dekryptere ved å flytte til venstre kvar bokstav med samme shift key.\n\nStørrelsen shift keyen kan vere er mellom $0$ der det er ingen shift, og antallet bokstaver i alfabetet-1. Dette er fordi vi kan forskyve heilt opp til den går til slutten, etter da vil den gå tilbake til starten, og vår shift blir berre det samme som ein shift på overskuddet.\n\nDenne enkrypsjon metoden var i bruk fleire århundrer etter Ceaser døyde, og var ganske sikker i lang tid, fordi ingen forstod korleis den fungerte utanom Ceaser sine folk, og at det tar litt å finne shift keyen uansett om ein forstår den eller ikkje.\n\nMetoden derimot etter 800 år i bruk blei øydelagt på eit simpelt papir skrive ein matematiker som viste den letteste måten å kunne dekryptere den på kort tid.\n\n\nEin kan visualisere Ceaser Cipheret slik:\n![400](https://i.stack.imgur.com/Btyp1.png)\n\n\n### Enkel matematisk måte å finne keyen.\nKvart språk har eit generelt frekvens av bokstav tall i ein tekst, i Engelsk til dømes er bokstaven $E$ den mest brukte bokstaven til normalt. Dette kan vi lett bruke til å dekryptere ceaser cipher på kort tid.\n\nDersom vi teller antall ganger ein bokstav oppstår i ein tekst og samanligner den mest brukte med den som er mest brukt i det språket som det er skrivet i så kan vi sjekke kva keyen mest sannsynleg er. Viss vi sjekker forholdet mellom dei to mest brukte bokstavene i teksten og språket, og ser ein viss distanse mellom dei i alftabetet så er antagentligvis keyen distansen.\n\nHer er eit døme.\n\nEnkryptert beskjed:\n```\nOruhp Lsvxp lv vlpsob gxppb whaw ri wkh sulqwlqj dqg wbshvhwwlqj lqgxvwub\nOruhp Lsvxp kdv ehhq wkh lqgxvwub'v vwdqgdug gxppb whaw hyhu vlqfh wkh 1500v,\nzkhq dq xqnqrzq sulqwhu wrrn d jdoohb ri wbsh dqg vfudpeohg lw wr pdnh d wbsh\nvshflphq errn. Lw kdv vxuylyhg qrw rqob ilyh fhqwxulhv, exw dovr wkh ohds lqwr\nhohfwurqlf wbshvhwwlqj, uhpdlqlqj hvvhqwldoob xqfkdqjhg. Lw zdv srsxodulvhg lq\nwkh 1960v zlwk wkh uhohdvh ri Ohwudvhw vkhhwv frqwdlqlqj Oruhp Lsvxp sdvvdjhv,\ndqg pruh uhfhqwob zlwk ghvnwrs sxeolvklqj vriwzduh olnh Dogxv SdjhPdnhu\nlqfoxglqj yhuvlrqv ri Oruhp Lsvxp.\n```\n\nVi sjekker frekvensene:\n```\nA\t31\nB\t18\nC\t10\nD\t45\nE\t64\nF\t16\nG\t27\nH\t73\nI\t44\nJ\t11\nK\t21\nL\t60\nM\t19\nN\t45\nO\t47\nP\t38\nQ\t38\nR\t49\nS\t58\nT\t43\nU\t41\nV\t44\nW\t49\nX\t19\nY\t18\nZ\t6\n```\n\nVi ser at H er mest brukt i teksten, og vi veit at normalt i engelsk er E den mest brukte. Derfor kan vi ta eit tipp på at distansen mellom E og H er det som er keyen. Vi sjekker med ein shift av 3 som er distansen.\n\n\nVi tester shift key 3 til venstre og får:\n\n```\nLorem Ipsum is simply dummy text of the printing and typesetting industry.\nLorem Ipsum has been the industry's standard dummy text ever since the 1500s,\nwhen an unknown printer took a galley of type and scrambled it to make a type\nspecimen book. It has survived not only five centuries, but also the leap into\nelectronic typesetting, remaining essentially unchanged. It was popularised in\nthe 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\nand more recently with desktop publishing software like Aldus PageMaker\nincluding versions of Lorem Ipsum.\n```\n\nDette er akkurat Engelsk vi har vår korrekte shift key, gjennom å sjekke distanser mellom tall.\nDenne metoden for å prøve å dekryptere *keys* heiter \"*Frekvens analyse*\", (Er funnet i andre området òg).\n\n## Kvifor vi kan bruke frekvens analyse.\n\nGrunnen til at vi kan bruke frekvens analyse her er fordi Ceaser Cipheret har eit gjømt fingeravtrykk, dette tyder til at måten som språket til beskjeden er strukturert på gjer at vi kan lettere kunne dekryptere meldingen ved å analysere fellestrekk i den og samanligne det med den enkrypterte meldingen. Andre krypteringsmetoder forsøker å minske fingeravtrykket som er til staden i språket gjennom dens enkrypteringsmetode.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Cellul%C3%A6r-respirasjon.":{"title":"","content":"# Cellulær respirasjon.\n\nCellulær respirasjon er ein prosess som skjer i **[[Mitokondria]] i eukaryoter** og er simpelt sagt jævlig komplisert, og eg hatar det organismet som kom på iden. Men uansett la oss gå igjennom dette clusterfucket av ein ting. **NB. Cellulær respirasjon kan òg skje i [[Prokaryote celler.]] men skjer i andre steder enn dette mitokondria-et, der dei skjer i hovudsakelig faktisk rett i [[Introduksjon til cellen.|cytoplasmaet,]][[Strukturen til cellemembranen.|cellemembranen]]**.\n\n**Aerobisk**:\nCellulær respirasjon er eit simplet betegnelse som der simpelt sagt det omvendte av [[Fotosyntesen]], det altså bruker $C_6H_{12}O_6+6O_6$ for å danne $6CO_2 + 6H_2O$ og $ENERGI$. \n\nDette er den aerobiske prosessen, men den kan òg skje anaeroisk gjennom gjæring.\nCellulær respirasjon er meir presist prosessen om å nedbryte glukose inn i energi for cellen. Det er berre den aerobiske prosessen som er den omvendte av fotosyntesen.\n\n**Aerobisk**:\nDet bruker nemleg glukose ein [[Karbohydrater.|monosakkarid]] og oksygengass og omdanner det over til karbondioksid, vatn, og energi i den aerobiske prosessen. Det er litt meir komplisert enn dette fordi $energiet$ blir som oftast rett etterpå omdannet til [[ATP]] slik at cellen kan bruke denne energien etterpå. Idealt blir det dannet omtrent 38 ATP-er, men normalt blir det dannet ein mengde rundt 29-30 ATP-er fordi det er oftast ikkje ideale forhold. Det blir òg dannet mange andre stoffer under prosessen som NADPH, men vi oftast fokuserer berre på ATP.\n\nOversiktlig:\nCellulær respirasjon er simpelt sagt slik:\nOmdanner glukose kjemisk energi over til energi i form av ATP.\nEnergien skapt i cellulær respirasjon blir brukt til åskape ATP og varme. Ideelt 38 ATP, men ofte er det mellom 29-30 ATP.\n\n\u003e[!INFO] Small info.\n\u003eDei aerobiske prosessen kan skje både i [[Introduksjon til cellen.|cytoplasmaet]] og [[Mitokondria]]. Derimot kan dei anaerobiske berre skje i cytoplasmaet. \n\n## In depth.\nSom nemnt tidligere er cellulær respirasjon mykje meir komplisert enn som det først ser ut som. Vi ofte deler cellulær respirasjon inn i fleire ulike deler som er basert på korleis \n### Dei ulike stegene av cellulær respirasjon.\nVi har hovudsakelig tre ulike steger i den cellulær respirasjons prosessen, det er glykolyse, kreb's syklusen, og elektron transport kjeden. Dette er for den aerobiske prosessen, i den anaerobiske går det ikkje til kreb's syklus og videre fordi det er mangel på oksygen og det heller går over til gjæring.\n\n\n#### Glykolyse\nGlykolyse er det første steget i cellulær respirasjon, her blir det originale glukose [[Karbohydrater.|sakkaridet]] omdannet brytt opp i 2 mindre biter slik at den originale strukturen går i frå omtrent $C-C-C-C-C-C$ over til $C-C-C$  og  $C-C-C$. \n(Det er mange ulike oksygen og hydrogen festet til, men vi fokuserer berre på karbonene her.)\n\nDisse bitene blir kalt pyruvater. (Eintall: pyruvat.)\nEin pyruvat er ein karboksylsyre, og vi ofte referer til pyruvater som pyruvat syre. \n\nDen generelle glykolyse prosessen kan skrivast slik:\n$Glukose+2NAD^++2ADP+2P_i \\rightarrow 2Pyruvat+2NADH+2ATP (netto) + 2H_2O+2H^+$.\n\nEin pyruvatsyre har den generelle strukturen som vist her:\n![[Cellulær respirasjon. 2022-07-20 16.07.28.excalidraw]]\n\nI denne prosessen blir det brukt $2$ [[ATP]] som blir til slutt skapt over til $4ATP$ (Bruker 2 atp får 2 i ekstra, totalt får ein 4ATP tilbake). \n\n\n\n Denne prosessen er anaerobisk som tyder til at den krever ikkje oksygen får å kunne skje.\n#### Kreb's syklus\nEtter glykolysen prosessen blir dei nye pyruvatene brukt i ein anna prosess/prosess-syklus som heiter \"Kreb's syklus\". \n\nDenne syklusen bruker òg 2 ATP-er for å omdanne dei over til eit totalt av 4ATP, likt som i glykolyse. \n\nDenne syklusen er i motstening til glykolyse aerobisk, som tyder at den krever oksygen for å kunne ta sted. Dersom det ikkje er oksygen til staden kan det oppstå [[Cellulær respirasjon.#Gjæring|gjæring]].\n\n#### Elektrontransportkjede / oksidativ fosforylering.\n\nI løpet av glykolyse og kreb's syklusen blir det konstant skapt $NAD^+  +H \\rightarrow NADPH$ , og $FAD +H \\rightarrow FADH$. Dette driver elektrontransportkjeden.\n\nElektrontransportkjeden er den siste prosessen i cellulær respirasjon og er ansvarleg for å skape dei allerfleste ATP-ene i den totale cellulære respirasjons prosessen. \n\nDenne prosessen er lik som kreb's syklus i det med at den. er aerobisk og dermed krever oksygen for å kunne ta sted, her kan det òg oppstå [[Cellulær respirasjon.#Gjæring|gjæring]] dersom det er lack of oksygen.\n\nElektrontransportkjeden er ansvarleg for å skape ideelt det heile $34$ ATP-ene i den totale prosessen, simpelt sagt kan ein seie at cellulær respirasjon blir carried av elektrontransportkejden.\n\n## Gjæring.\n\nSom nemnt i Kreb's syklusen og elektronstransportkjeden dersom det er ein mangel på oksygen kan det oppstå gjæring. Gjæring er prosessen som oppstår dersom det er ein mangel på oksygen, da vil dei originale reaktantene i prosessene bli over til andre produkter fordi dei mangler oksygen som normalt er til staden.\nNokre av dei mest kjente gjæring prosessene er dette med [[Alkohol \u0026 etanol gjæring.]] og [[Melkesyregjæring.]].\n\nGjæring er simpelt sagt ein anaerobisk [[Metabolisme.#Metaboliske veger|veg]] for å bryte ned [[Karbohydrater.|glukose]].\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Computing-powers-of-a-number-recursively.":{"title":"","content":"# Computing powers of a number recursively.\n\nAlthough most programming languages have a built in power function we can make one recursively as long as the exponent is an integer.\n\nSuppose we want to compute $x^n$ if $n==0$ then the value is $1$. This is a good basecase.\n## Math.\nWhen you multiply the powers of $x$ you add the exponents for any base of $x$ and exponents $a,b$. $x^a\\times x^b=x^{a+b}$. Therefore if $n$ is positive and even $x^n=x^{\\frac{n}{2}}\\times x^{\\frac{n}{2}}$. If you want to compute $y=x^{\\frac{n}{2}}$ [[Rekurisve algoritmer.|recursion]] you could compute $x^n=y\\times y$ . If $n$ is positive and odd however then $x^n=x^{n-1}\\times x$. Therefore you could compute $x^{n-1}$ recursively, and then use this to compute $x^n=x^{n-1}\\times x$. When $n$ is negative , then $x^n=\\frac{1}{x^{-n}}$. The exponent $-n$ becomes positive and you can compute this recursively, and take its reciprocal. \n\n\n## Psuedocode.\nPutting the follow observations together we get the following recursive algorithm for computing $x^n$.\n\n1. The base case is when $n==0$ and $x^0=1$.\n2. If $n$ is positive and even recursively compute $y=x^{\\frac{n}{2}}$. And then $x^n=y\\times y$.\n\t1. Notice you only have to do one recursive call here computing $x^{\\frac{n}{2}}$ just once and then multiplying it by itself.\n3. If $n$ is positive and odd recursively compute $x^{n-1}$. So that the exponent is either positive and even or $0$. Then $x^n=x^{n-1}\\times x$.\n4. If $n$ is negative recursively compute $x^{-n}$ so that the exponent and then $x^n=\\frac{1}{x^{-n}}$.\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Computor-contentos":{"title":"","content":"\n1. CPU\n2. GPU\n3. RAM\n4. SSD\n5. MOTHERBOARD\n6. HDD\n7. PSU\n\n\n\n1. CPU\n2. Computer Processing Unit\n\t1. Driver med alle matematiske operasjoner og er bygget på mikroskopiske binære tall og logic gates.\n\t2. Ulike modeller, ARM, x86, x64, etc.\n\n2. RAM\n\t1. Random Accisble Memory\n\t2. Tilgang til ekstrem raskt kortsiktig lagring av informasjon.\n\nPSU\nOmgjer AC TIl DC slik at datamaskinen alltid har ein konstant flyt av struam også regulerer strømforbruk og sikrer at den ikkje går kaputt når det kommer ein stor mengde straum gjennom socketen.\n\n\n4.01\nTelefon\nAlle digitale systemer\nAlle staseide systemer\nDatamaskinen\nIpad\nInternettet og sånt\n\n\n4.02\nDone\n\n4.03\nEit operativsystem kontrollerer korleis dei ulike kompontene skal bli behandlet.\nNokre operativsystem er berre terminalbaserte mens andre har visuelle komponenter.\nMobilen min er ein android basert og pcen min windows 10 x86 versjonen :PPPP\n\n4.04\nEin transistor fungerer ved å lade inn strøm og sleppe ut på bestemte tidspunkter med å innføre meir strøm på eit sted bing bong. den holder verdi 1 eller 0.\nEin datamaskin rangerer mykje i tall resisterer, nokre år siden fant du noen som nokre millioner nå finner du kanskje milliard, det er så mangen mikroskopiske nå at vi når punktet der fysikken ikkje tillater fleire.\n\n4.05\nHDD fungerer ved å lagre verdiene på ein fysisk disk, ein harddisk som den skriv inn på ved å skrape.\nEin SSD derimot er ein solid state drive som tyder tilat den lagrer verdiene i transistorer og ikkje på noe som blir skrapt og den kan dermed overleve også mykje meir skader. \n\nHdd består av ein skrive ting tang ein disk, på disken skraper den inn verdier og overskriver verdiene med pinnen.\n\n4.06\n\npeter sin\ngangster, rgb, gammal 1060 ti så ganske shit tbh.\ni7 3700k bad!!!!!!!!!!\nssd 128 gb\n\npål sin\npan sin\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Cosinus":{"title":"","content":"# Cosinus\nCosinus er ein av dei tre ulike hovudtrigonometriske funksjonene, den er simpelt sagt $\\frac{hosliggendekatet}{hypotenus.}$\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Cosinus-setningen":{"title":"","content":"# Cosinus setningen\n## Kva det er.\n\nCosinus setningen er ein formel som gir den siste siden i ein trekant, når vi veit den omvendte vinklen til siden, og dei to andre sidene. \n\n## Formelen\n\n$c=\\sqrt{a^2+b^2-2ab\\times \\cos(C)}$\n\nher er dei små bokstavene dei mostående katetene til den store bokstav vinklene. \nHer finner vi den motstående kateten av C ved å følge formelen.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/DNA":{"title":"","content":"# DNA\nEin videreutvikling av [[Nukleotider og nukleinsyrer.#DNA]].\n\n\n## Kva er DNA.\nNår [[Introduksjon til cellen.|celler]] [[Ulike typer reproduksjon.|dividerer]] er ein av jobbene å sikre ein perfekt kopi av DNA, feiler kan lede til retard organismer, mutasjon, og ellers sett usunne celler. \n\nDNA er det genetiske materiale av alle levende organismer, og viser til korleis eit organisme skal bli bygd. I mennesker er det funnet i nesten alle celler. Og gir instrukser på bla. korleis den skal organismet skal vokse, sjå ut, og utføre sine oppgåver. Når ein celle deler så vil den videreføre sitt DNA i form av kopier. Dna er òg videreført på nivå av organismer i gjennom [[Ulike typer reproduksjon.|seksuell og aseksuell reproduksjon]]. I seksuell blir DNA smeltet saman gjennom befruktning av eggceller gjennom sædceller.\n\nFysisk sett er DNA ein lang strimle av kjemiske enheter [[Nukleotider og nukleinsyrer.|nukleotider]], som kommer i 4 ulike typer, forkortet $A,T,C \\textit{ og } G$. Og er organisert i informasjonskkapsulert kalt \"*gener*\". Ge er som oftast inneholder informasjon om korleis å lage [[Proteiner og aminosyrer.|proteiner]]. Som gir cellens og organismet sine funksjonelle karakterister. \n\n### DNA i [[Kva er organeller - organeller i eukaryotiske celler.|organeller]].\nI [[Introduksjon til eukaryote celler.|eukaryoter]] som planteceller, og dyreceller, er majoriteten av DNA-et lagret i cellekjernen og DNA-et blir dermed kalt kjerne-DNA. Mitokondria (bruker [[Karbohydrater.|karbohydratet]] glukose til å skape [[ATP]]), og kloroplast (skaper glukose med solenergi), har sine egne DNA (antagenteligvis pga. endosymbiose), disse egne DNA-ene i disse organellene heiter henholdvis mitokondrisk, og kloroplastisk -DNA. Mengden DNA i disse organellene inneholder mykje mindre DNA enn kjerne-DNA, og dette er fordi DNAet inneholder berre informasjon for organellen i staden for heile cellen. \n\n## DNA i [[Prokaryote celler.]].\nI prokaryote celler som i bakterier, er DNA-et ikkje lagret i ein sentral områder i ein [[Strukturen til cellemembranen.|plasmamembran]] bundet struktur, slik som i cellekjernen, dette er fordi prokaryoter har ingen slike plasmamembran bundet strukturer i cytoplasmaet. Og dermed flyter faktisk DNA-et fritt tundt i den prokaryote cellen. Men det som er spesiellt i prokaryote celler er det som oftast lagret i eit sentralt område kalt \"nukleoid\"-en. Som fungerer nesten likt som i cellekjernen , men er berre ikkje membran bundet.\n\n## Genomer.\nEin celle sitt sett av genetiske informasjon blir kalt for ein \"genom\". Og siden eit organisme har som regel lik informasjon i kvar celle (med nokre unntak) kan du seie at eit organisme har ein genom. Og fordi ein art inneholder som regel ganske like genomer kan du òg seie at ein art har ein generell genom, som identifiserer arten, som at mennesker alle er ulike i form, men alle mennesker er mennesker! Når det er prat om genomet til ein art eller ein person er det som regel prat om den genetiske informasjonen i cellekjernen, og vi pleier å si at mitokondria og klorplastet har sine egner genomer. (Fordi dei har ulik DNA enn det i cellkjernen, og fordi dei sannsynlegvis oppstod pga. endosymbiose, så dei er litt fake organeller). \n\n\n\u003e[!INFO] P.S\n\u003eSjekk ut [[Nukleotider og nukleinsyrer.#DNA]] for meir informasjon, det står litt informasjon der som ikkje er notert her! Som bla. strukturen til DNA er **mykje** meir i dybde der. \n\nBilete av DNA.\n![](https://upload.wikimedia.org/wikipedia/commons/4/4c/DNA_Structure%2BKey%2BLabelled.pn_NoBB.png)\n\n![](https://cdn.kastatic.org/ka-perseus-images/848dbb3b49d234fa934f749e85bae396b4e58a77.png)\n\n\n## DNA Strekkoding.\nDna strekkoding fungerer ved at kvar art ein unik basesekvens som gjer at dersom vi går gjennom Dna-et til eit organisme og finner igjen ein av disse genene som er unike så kan vi identifisere kva for ein art det er.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Data-til-%C3%A5-st%C3%B8tte-eksperimentale-forklaringer.":{"title":"","content":"# Data til å støtte eksperimentale forklaringer.\nNår vi driver med eksperimenter er det viktig å støtte våre konklusjoner frå [[Den vitskaplege metoden.]]. \n\n* Data som mener for/støtter hypotesen burde bli fokusert på.\n* Men motstående data burde også bli bektlagt like mykje. \n* Det er viktig.å annerkjenne at tester kan ha små margin av error.\n* Meir forsøk blir meir presist i korrektheit til hypotesen.\n\nVi må følge disse punktene for å sikkre at vår hypotese er mest mogleg konkret svart på.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Demokrati-Moderne-og-Athensk.":{"title":"","content":"Demokrati er ein styreform der folket sjølv bestemmer og oppstod rundt i [[Polis - den greske bystaten.]] i antikken, det er tenkt at den oppstod i polisen \"Athen\".  Ordet demokrati betyr *folkestyre*.\n\nNokre kjenneteikn på moderne demokrati er:\n1. *Alle skal ha likeverdi stemme*\n2. *Alle skal ha rett til å stemme*, over bestemt alder ofc.\n3. *Fleire ulike moglege val av stemme.*\n\t1. Valene kan vere politikere, eller partiar angåande kva form av demokrati det er.\n\t\t1. Alle, dersom alder, kan stille til kandidat dersom det er ein kandidat/parti bestemt demokratiform.\n\t2. Kjent som organissajonsfrihet.\n4. *Fleirtallet bestemmer*.\n5. *Ytringsfrihet*. \n\t1. Skal ikkje bli straffa for å stemme eller ytre sin mening.\n6. *Rettferdig*.\n7. *Maktfordeling*.\n\t1. Makten blir fordelt på ulike institusjoner slik at ingen institusjon kan overta makten gjennom force.\n\n\n## Demokrati i  bystaten *Athen*\n\n\nPolisen Athen var den polisen som utvikla eit styringssytem der vanlege borgarr fekk mykje meir makt og innverknad, og slik fekk det namnet *Demokrati* også kjent som *Folkestyre*.\n\nNokre av dei viktigste styringsorgana:\n1. *Folkeforsamlinga*\n\t1. Folkeforsamlinga stod i sentrum for styringssystemet. Alle mannlige athenske borgaarr over 19 år kunne møte opp og hadde talerett, dei stemte direkte på saker utan representanter. Her vart embetsmenn valte, lover vedtekne og andre viktige saker tekne. Dersom det var i dag hadde det vore som at alle nordmenn kunne møte opp på stortinget og stemme direkte, noko som er litt vanskeleg.\n\t\t1. *Direkte demokrati = ingen represenanter*.\n\t\t2. Antaller som hadde rett til å stemme var usikkert, men som regel er anslått til å vere mellom 60 000 og 150 000 av 500 000. Så 12% til 30% av befolkninga kunne stemme.\n\t\t\t1. Men det mange som ikkje deltok i politikk likevel dei kunne og disse er anerkjent som begrept *idiot*, bokstavleg talt\n2. *500-mannsrådet / Rådsforsamlinga*\n\t1. Dette 500 mannsrådet førdbudde møtene som bleit tatt i folkeforsamlinga og la dei frem. Alle mannlige borgarar over 30 år kunne settje der, medlemmene var bytta ut kvart år og dei vart valt med total tilfeldighet gjennom lodd. Ein kunne berre settje i rådet to ganger i livet, og det måtte gå  minimum ti år mellom kvar gong. Personen som leidde det tingene gjekk omgang dag for dag.\n\t2. Dette gjorde at det ikkje blei korrupsjon, maktfokus, og slikt ikkje tok staden, og dermed blei det eit slags økt demokrati.\n\t3. Berre menn over 30 kunne vere fordi dersom ein hadde mindre erfaring i livet som ein har når ein er ung, vil det gjere at mange har liten erfaring og ingen styreerfaring som \n3. *Strategene*\n\t1. Det var 10 stykker som var stateger.\n\t2. Fordi polisene var så mektige og ofte i krig, betydde dette at dei måtte ha nokre personar som determinert til å vere dei som strategiserte. \n\t3. Kvart år valte folkeforsamlinga ti strategar, som var dei millitære leiarane i Athen. Til mange andre embetsroller, som å ver i 500mannsrådet, var det brukt loddtrekking. Men for strategene var det eit demokratisk val. Strategane var dei som var anerkjent som dei aller viktigste i byen, fordi dei beskytta byen. Det var **berre** medlemmer av dei rike familiene og mektige familier som vart valde til strategar.\n5. *Folkedomsstolen*\n\t1. Folkedomsstolen vart kalla inn om lag 200 dager i året, og meldemmene vart plukka ut ved loddtrekking. Domstolen dømde både i politiske prosessar og straffesaker og bestemte om avgjerende til embetsmennene kunne godtakast eller ikkje.\n\t2. Passer på at avgjeringane faktisk er gode, beskytter folkeforsamlinga for at embetsmennene gjer det dei skal gjere.\n\t\t1. Folkeforsamlinga bestemmer\n\t\t2. Dersom embetsmennene ikkje gjer det dei skal\n\t\t3. Så bestemmer folkedomstolen, slik at ønsket til folkeformsalinga blir utført.\n1. *Embetsmenn*\n\t1. Er individer som er spesialiserte i ulike områder av samfunn som er viktige individerer inna for sakene som omgår deirast områder. \n\t2. *Strategene* var embetsmenn.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Den-faktorielle-funksjonen.":{"title":"","content":"# Den faktorielle funksjonen (n!).\n\n$\\LARGE 5!=5\\times4\\times3\\times2\\times1$.\n\nDen faktorielle funksjonen viser oss antall ulike moglege arrangementer med $n$ antall elementer.\nVi kan skrive $n!$ som $n\\times (n-1)\\times(n-2)\\times(n-3)……\\times 2 \\times 1$.\n\nEin anna bruk for den faktorielle funksjonen er å finne antall ulike måter du kan ta ting frå ein kolleksjon. Antall måter du kan ta $k$ elementer i frå $n$ elementer er som følgende: $\\LARGE \\frac{n!}{k!\\times(n-k)!}$\n\n\u003e[!INFO] Sidenote:\n\u003e$0!=1$ og $n!$ er berre definert for positive tall.\n\n\nVi har to ulike metoder for åfinne den faktoriele funksjonen:\n1. Den iterative metoden\n2. Den rekursive metoden.\n\n\n## Iterative metoden.\nVi går igjennom alle tall ifrå $n$ til $0$ og multipliserer det nåværende tallet, med den totale antallet hittil.\n\nVi kan skrive ein slik funksjon slik:\n```c++\nint factorial(int n){\n\tint value = 1;\n\tfor(int i = n; i \u003e= 2; i++){\n\t\tvalue=value*n;\n\t}\n\treturn value;\n}\n```\n\n\n## Rekursive metoden.\n\nFor alle positive verdier av $n$ kan vi skrive $n!$ som $n!=n\\times(n-1)!$, ein kan altså finne $n!$ gjennom å finne den faktorielle av lavere verdier, og multiplisere med den høgere verdien.\nHer er nokre dømer:\n$5!=5\\times4!$\n$4!=4\\times3!$\n$3!=3\\times2!$\n$2!=2\\times1!$\n$1!=1$\n\nVi kan dermed skrive ein rekursiv faktoriell funksjon slik:\n\n```js\nvar factorial = function(n){\n\n\tif(n===0||n===1){\n\t\treturn 1;\n\t}\n\treturn n*factorial(n-1);\n}\n\n```\n\n\u003e[!INFO] Sidenote\n\u003e$0!=1$ vi må huske dette når vi skriver den rekursive metoden.\n\u003eDerfor har vi òg if(n===0)\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Den-vitskaplege-metoden.":{"title":"","content":"# Den vitskaplege metoden.\nDen vitskaplege metoden er nødvendig å følge for å ha godt [[Introduksjon til eksperimentell design.|eksperiment design]].\n## Stegene.\n1. Observasjon.\n2. Kvifor trur du det skjer?\n3. Lage ein testbar hypotese.\n4. Lag ein test som skal svare hypotesen.\n\t1. Isoler ein variabler og kontroller/hald stabil alle andre variabler. Vi sjekker etter ein variabel sin effekt.\n5. Utfør testen.\n6. Er hypotesen korrekt? \n\t1. Refiner, og sjekk etter meir informasjon. Kan det vere andre grunner?\n6. Er hypotesen feil?\n\t1. Skap ein ny hypotese, og prøv på nytt.\n\n\u003e[!INFO]\n\u003eForsøket må vere reproduserbar for å sikre at vi ikkje tar feil og andre kann sjekke evt. om hypotesen er korrekt sjølv.\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Derivanter":{"title":"","content":"# Derivanter \u0026 Derivasjon.\n\n## Definisjonen av den deriverte.\n\n^a349ff\n\nDen deriverte er [[Polynom terminologi|vekstfaktorane/koeffisienta]] til den [[Momentan vekstfart|momentane/tangent veksfart]] ved $x$ gitt punkt til ein graf. \n\nDen deriverte funskjonen er ein funskjon som gir stigningstallet/vekstfaktoren til ein tangent/momentan  i eit polynom ved $x$ verdi. Det betyr at når den deriverte funksjonen gir oss ein negativ verdi betyr det at den originale funksjonen minsker i det punktet, og når det er ein positivt verdi betyr det at den originale funksjonen stiger i det punktet. Den deriverte funksjonen er alltid ein [[Polynom terminologi#Grad av polynom|grad]] lavere enn den originale funksjonen. Den deriverte grafen/funksjonen er simpelt sagt ein graf/funksjon som viser korleis den originale grafen/funksjonen utvikler seg over tid. $Y$ Verdien gir oss den momentane vekstfaktoren i den originale funksjonen ved $x$.\n\n Døme:\n $x^3$ funksjon, sin deriverte funksjon er $3x^2$ (Andre grad)\n\n$7x+2$ funksjon, sin deriverte funksjon er 7. (Stigningstallet er 7 uansett for $x$ verdi).\n\nKvart nullpunkt i ein derivert funksjon viser eit ekstremalpunkt eller eit stasjonært punkt i den originale funksjonen, då stigningstallet der er alltid $= 0$. Vi kan sjå på dei [[Polynom grafer#Positive og Negative Intervaller|positive og negative intervalla/forteikn skifte]] for å då vite om det er eit topppunkt eller botnpunkt, viss det er ein endring som går i frå negativ til positiv, er det eit botnpunkt, viss det er ein endring i frå positiv til negativ er det eit topppunkt. Viss det er ingen endring i forteikn i intervalla er det eit stasjonært punkt. Viss vi forestiller ein polynom og ser på ekstremalpunkt kan vi lett forestille dette, og vi kan bekrefte dette ved å teste $x$ verdier høgere og lavere enn eit ekstremalpunkt og sjå på dens forteikn og verdi.\nVi veit at dette er ekstremalpunkt då ved nullpunktene til den deriverte funksjonen er verdien til den dertiverte funksjonen $= 0$ dette då betyr av det originale funksjonen har ein momentan vekstfart med ein $0$ i stigningstall ved dette nullpunktet. Når vi går nærmere dette nullpunktet går den originale funksjonen meir og meir i mot $0$ i stigningstall.\n\n\n Eit globalt topppunkt/botnpunkt i ein derivert funksjon viser når stigningstallet i den originale funksjonen er på det største/laveste. Likt viser eit lokalt topppunkt/botnpunkt det høgste/laveste stigningstallene i mellom nullpunkt på den originale funksjonen.\n\nVisualisering:\n![](http://ibmathstuff.wdfiles.com/local--files/maxandmin/Derivative%20of%20Cubic.png)\nDen blåe grafen er den originale funksjonen, den røde er den deriverte.\n\n\n## Finne den deriverte ved eit punkt.\n### [[Gjennomsnittleg vekstfart]] med lav $\\Delta \\space x$. (Delta $x$).\nViss vi skal finne den deriverte trenger vi egentelig berre å finne stigningstallet til eit presist punkt slik som i [[Momentan vekstfart]], på lik metode som ved [[Gjennomsnittleg vekstfart#^40a02b|gjennomsnittleg vekstfart]] men vi bruker ein veldig lav delta $x$, istaden for intervalla som vi normalt bruker i gjennomsnittleg vekstfart.\n\nDen deriverte finner vi altså slik:\n$\\frac{f(verdi+0.0001)-f(verdi)}{0.0001}$\n\nHer er $0.0001$ den lave $\\Delta \\space x$ verdien. (Delta $x$). \n\nEksempel:\n$f(x)=2x^2$\n$f'(2)=\\frac{f(2+0.0001)-f(2)}{0.0001}$\n$\\rightarrow f'(2)=\\frac{f(2.0001)-f(2)}{0.0001}$\n$\\rightarrow f'(2)=\\frac{8.00080002-8}{0.0001}$\n$\\rightarrow f'(2)=\\frac{0.00080002}{0.0001}$\n$\\rightarrow f'(2)=8.0002$\n$\\rightarrow f'(2)\\approx 8$\nDen deriverte her er omtrent $8$.\n\n### [[Grenseverdier]] derivasjon.\nDette er den meir mattematiske fine metoden for å finne den deriverte.\nI grunn fungerer dette heilt likt som gjennomsnittleg vekstfart metoden.\nMen istaden for å ha ein lav konstant $\\Delta \\space x$ har vi faktisk ein $\\Delta \\space x$ som nærmer seg uendelig i mot tangenten. I andre ord vi har ein sekant ($f(x_{2})$)som nærmer seg uendelig nærme tangeten ($f(x_{1})$). Denne sekanten kommer til å ende opp med å ha samme vekstfart som tangenten då den går nærmere og nærmere tangenten. \nVi bruker grenseverdi og settjer $\\Delta \\space x$ lik 0 (Her representerer $h$ Delta $x$-en). Då den skal vere minst mogleg, og grenseverdier treffer aldri tallet, men går berre uendelig i mot tallet. Vi settjer inn ein verdi for $x$ og får den deriverte av dette punktet.\n\n$f(x)=\\lim_{h\\rightarrow 0}\\frac{f(x+h)-f(x)}{h}$\n\nVi ofte forkorter dette ned til:\n$\\large \\rightarrow \\frac{df}{dx}$\n\nDermed skriver vi ofte derivanter slik:\n\n$\\large \\rightarrow \\frac{d}{dx}(funksjonen \\space f)$\n\n\n$df$ for $\\Delta$ i $y$ verdier. Viser $\\Delta \\space x$ verdien sin forskjell i $y$ verdier.\nOg $dx$ for $\\Delta$ i $x$ verdier. Her i grenseverdi derivasjon er dette nærmest $0$.\n\nVisualisering av Grenseverdi derivasjon:\n![](https://web.ma.utexas.edu/users/m408n/2014/tangent1.gif)\n$Q$ er sekanten, og $P$ er tangenten.\nSekanten nærmer seg uendelig tangenten og gir oss tangenten sin momentane vekstfaktor. **I gjennomsnittleg vekstfart derivasjon, er det nesten likt men der nærmer sekanten seg ikkje uendelig, men heller er sekanten berre svært nær.**\n\n## Korleis finne den deriverte funksjonen.\n\n### Momentan vekstfart.\nDen mest tungvinte og dårlige metoden får å få den deriverte funksjonen er å finne fleire ulike mometane stigningstall ved ulike intervaller gjennom bla. [[Derivanter#Finne den deriverte ved eit punkt|gjennomsnittleg vekstfaktor]] og sjå om det er eit felles oppsett for kvar stigningstall ved gitt $x$ kordinat. Viss det er ein sammenheng mellom $x$ og stigningstallet, og dette fungerer for alle intervalla, så er dette den deriverte funksjonen. \nProblemet med denne metoden, er at for det første den er ekstremt tungvint, det er berre sikkert at den fungerer for dei spesifike intervalla. (Den deriverte funksjonen kan vere anneleis, men gi samme svar ved intervalla).\n\n### Grenseverdi derivasjon. \nHeilt lik metode som ved grenseverdi derivasjon, dette gir oss den deriverte funksjonen. I staden for å skifte $x$ ved ein verdi lar vi berre $x$ vere $x$.  \n\n[[Første derivasjonsregel.]]\n[[Andre derivasjonsregel - Rasjonale funksjoner.]]\n\n\n\n\u003e[!WARNING] Dersom det tall som ikkje er inntaksverdien.\n\u003eDersom det er tall som til dømes $x$ men $t$ er inntaksverdien, så later vi som at $x$ berre eit konstant tall fordi det er ikkje inntaksverdien.\n\u003eTil dømes: $g(x)=t^3*x-\\pi*t^2+t*x^2+4$\n\u003eblir til $g'(x)=3t^2*x-\\pi*2*t+x^2$\n\n\u003e[!INFO] Når $\\Delta x$ går mot null.\n\u003eNår $\\Delta x$ går mot null gjennom $\\lim_{\\Delta x\\rightarrow 0} \\Delta x$ pleier vi å skrive dette berre som $dx$\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Deriverbarhet":{"title":"","content":"[[Derivanter]].\n\n- Dersom ein funksjon er deriverbar må funksjonen vere [[Kontinuerleg]].\n- Deriverbar i punktet a, der a er kva enn som helst verdi.\n\t- $\\huge lim_{\\Delta x \\rightarrow o^+}\\frac{f(a+\\Delta x)-f(a)}{\\Delta x}$\n\t- $f'(a^+)=f'(a^-)$\n\nEin funksjon som ikjkje er deriverbar har vanligvis eit knekkpunkt, dersom den er kontinuerleg men ikkje derivarbar. (Den er ikkje [[Entydige funksjoner]]).\n\n\nEin god huskeregel er å sjekke om grenseverdiene mot eit punkt er like når det angår [[Fordelt forskrift.]] dersom dei ikkje er like vil den ikkje vere derivarbar i det punktet fordi det er eit *knekkpunkt*.\n\n\u003e[!WARNING] P:S\n\u003eEin kan ikkje berre sjekke om grafen har like derivanter for samme [[Fordelt forskrift.]] definsjoner. Dette er fordi vi mister $C$ konstanten når vi deriverer. Vi må altså sjekke om den er kontinuerleg i heile sin definisjonsmengde også.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Det-medf%C3%B8dte-immunforsvaret.":{"title":"","content":"## Det medfødte immunforsvaret.\n\nDet medfødte [[Immunforsvaret.]] reagerer på alle mikroorganismer eller molekyler somdet oppfatter som fremmede eller farlige. Oppgåven er å hindre mikroorganismene i å trenge inn i vevet og eventuelt cellen i kroppen. Vi kan dele det medfødte immunforsvaret i ein ytre og ein indre del. Det medfødte angriper alt som er fremmed/farlig på nøyaktig samme metode, uansett kva for ein infeksjon det er så blir det angript likt.\nDette er fordi den husker ikkje tidlegere møter med infeksjoner. Alt dette liggjer i vårt [[DNA]] frå dei tidlegaste primitive organismene, og vi finner dei framleis i dei mest primitive organismene.\n \n## Det medfødte ytre forsvaret.\nForsvaret begynner allereie ved kroppens ytterste grenser, ved *huden* og *slimhinnene*. Her møter kroppen mikroorganismene først. Vi kaller dette for det *ytre forsvaret*. Yttergrensene hindrer mikroorganismene i å trenge inn i kroppsvevet. Menneskekroppen er dekket av tør, tett hud. Når den uten rifter, sår eller skader, gir den god beskyttelse. I huden har vi kjertler som skillet ut talg som hindrer mange mikroorganismer i å vokse og trives på huden. Huden er kolonisert med våre eigne mikroorganismer som også hindrer fremmede mikroorganismer i å slå seg ned der.\n\nAlle hulrom i kroppen som har åpning mot omverdenen er dekket av *slimhinner*, dette gjelder luftveiene, fordøyelsekanalen, dei indre kjønnsorganene og urinveiene. Slimhinnene er dekket av slim som fanger opp mikroorganismer og hindrer dei i å trenge inn i vevet. Slimet innehalder stoff som kan øydelegge cellemembranen hos mange mikroorganismer.\n\nI magesekken skiller slimhinnen ut både slim og magesyre. MAgesyre er vanlig saltsyre, $HC1$. Den har ein $pH$ på omtrent $1.5$, noe som gjer at dei fleste mikroorganismene blir drepne. Miljøet i vagina 😋 er også tilstrekkelig surt til å begrense vekst av mikroorganismer. Av og til svikter slimhinnenes forsvaremekanismer. For eksempel kan bakterier feste seg på overflatecellene i luftveiene og på den måten trenge inn i vevet og gi infeksjon. Det kan føre til lungebtennelse. Viss ikkje alle bakteriene blir drepne av magesyren, kommer dei vidare til tynntarmen. Då kan vi få tarminfeksjon og diaré.\n\n\u003e[!INFO] Oppsummering\n\u003eDet medfødte ytre forsvaret består av tett tørr hud som skiller ut talg,  slimhinner som skiller ut slim, magesyre og andre stoffer som virker på mikroorganismene.\n\n## Det medfødte indre forsvaret.\n\nDet indre forsvaret slår til viss mikroorganismene kjem inn i kroppen, for eksempel gjennom rifter og sår i huden, gjennom luftveiene eller via andre slimhinner. Det indre forsvaret omfatter både **bestemte typer kvite blodceller** og **proteiner som angriper inntrengere**. \n\nDen medfødte delen av det indre forsvaret reagerer raskt samanlikna med [[Det tilpassede immunforsvaret.]]. I boldet og i alle typer cellevev finnes *fagocyttene*, som er på ein måte som spiseceller. Dei er kvite blodceller som går til angrep på mange ulike mikroorganismer. Ved behov kan fagocyttene flytte seg frå **kapillærårene** til **vevet** rundt.\n\nFagocyttene skiller mikroorganismer frå kroppens egne celler gjennom å binde seg til **bestemte molekyler** på overflaten av mikroorganismen. Slike molekyler er felles for ein rekke mikroorganismer, men finnes **ikkje** på menneskeceller. Hos [[Bakteriar]] består molekylene gjerne av [[Strukturen til cellemembranen.#Komponenter.|glykoproteiner og glykolipider]] som finnes i bakteriens cellevegg som er utanpå cellemembranen. \n\nNår fagocyttene oppdager fremmede mikroorganismer forsøker dei  å uskadeliggjere dei ved å la cellemembranen omslutte bakterien. Dette kalles *fagocytose*, som er ein anna form for endocytose, den nemlig spiser mikroorganismen. Ein fagocytt kan spise opptil tjue bakteiar om gangen. Fagocyttene spiser også daude kroppsceller, gamle raudeblodceller, [[Virus]]infiserte celler og nokre [[Kreft.|kreft]]celler.  Disse cellene har endra overflaten sin og blir derfor oppfattet som fremmede.\n\n[[Kva er organeller - organeller i eukaryotiske celler.|Lysosomer]] er sentrale i nedbryttnings prossesen av bakteriar, det er nemlig disse som bryter dei faktisk ned etter at bakterien har blitt dratt inn i cellen.\n\n![[fagocytose.png]]\n\n### Fleire ulike typer fagocytter i det medfødte indre forsvaret.\nFagocyttene består av fleire ulike celletyper. *Makrofagene* er store celler som finnes i de fleste typer vev i kroppen. Her ligger dei i åresvis klare til å bekjempe infeksjoner. Ein anna viktig type fagocytt er *dendrittiske celler*. Dei er celer med utløpere. Dei finnest særlig i vevet under alle kroppnes overflater. Dei registrerer fremmede mikoroorganismer og er heilt avgjerende for å settje i gang ein *immunrespons.*, det vil si einr eaksjon frå [[Det tilpassede immunforsvaret.]] på den fremmde mikroorganismen. Dette er også grunnen til at dei liggjer nær overflaten $\\rightarrow$ raskere respons. Både makrofager og dendrittiske celler er viktige for  å stimulere [[Det tilpassede immunforsvaret.]]. \n\n### Spesielle proteiner i det medfødte indre forsvaret.\nDet medfødte immunforsvaret omfatter også spesielle [[Proteiner og aminosyrer.|proteiner]] som enten skader eller merker mikroorganismene direkte. Disse proteinene finnes i blodet og binder seg til molekyler på overflaten av mikroorganismen som har kommet inn i kroppen. Det setter i gang ein serie reaksjoner som kan ende med at [[Introduksjon til cellemembranen|cellemembranen]] til inntrengeren blir øydelagt. Mikroorganismer som har slike proteiner festet til seg, øker fagocytosen fordi dei vil tiltrekke seg fagocytter som spiser inntrengere. \n\nAlle celler i kroppen har evnen til å reagere på ein [[Virus]]infeksjon og bidrar dermed til immunforsvaret. Når ein celle blir virusinfisert kan den skille ut proteiner *interferoner*, som varsler nabocellene oma t det erein virusinfeksjon på gang. Interferoenene påvirke dei friske nabocellene og får dem til åendre seg slik at viruset blir hindret i å forme seg. Denne reaksjonsmåten er ikkje knyttet til eit bestemt virus, og derfor bidrar den til å bekjempe mange ulike virusinfeksjoner, for eksempel forkjølelse eller influensa. \n\n\u003e[!INFO] Oppsummering.\n\u003eDet medfødte forsvaret virker raskt og angriper mikroorganismene som kjem inn i kroppen. Dette forsvaret omfatter både bestemte kvite blodceller (*fagocytter*) og proteiner. Fagocyttene fjerner mikroorganismer ved fagocytose, altså cellespising.\n\n## Betennelse - ein viktig del av det medfødte  forsvaret. \n\nNår eit område i kroppen blir skadet, vil celler i vevet slippe ut stoffer som gjer at blodårene utvider seg. Då strømmer meir blod til skadesteder, og i tillegg vil porer i *kapillærårene* **åpne seg**. Då lekker noe blodplasma ut i vevet rundt blodårene. Vi kan sjå og kjenne det som rødme, hevelse smerte og varme. Dette er *betennelse*.\n\nBetennelse er kroppens reaksjon på skade. Målet er å reparere skaden best mogleg. **Signalstoffer** frå skadesteder får **fagocytter** til å **vandre ut frå blodårene og inn i vevet**, dette blir tillét gjennom porene som åpnes. Viss skadesteder er blitt infisert med mikroorganismer, **vil fagocyttene spise mikroorganismene med fagocytose**.\n\n\n### Dendrittiske celler.\nViss mange mikroorganismer har kommet seg inn i vevet klarer ikkje alltid fagocyttene å fjerne alle. Då må [[Det tilpassede immunforsvaret.]] overta. Det er fagocyttene som sjølv aktiverer dette forsvaret. *Dendrittiske celler* er særleg viktige her. Dei frakter med seg biter av mikroorganismene til nærast *lymfeknute*. Der gir dei beskjed til [[Immunforsvaret.#Immunceller skapes i beinmargen.|immunceller]] i [[Det tilpassede immunforsvaret.]]. Dei dendrittske cellene er spesialiserte til å være budbringer mellom det medfødte og det tilpassede immunforsvaret.\n\n\u003e[!INFO] Oppsummering\n\u003eBetennelse er kroppens reaksjon på skade og ein viktig del av det medfødte indre forsvaret. Når eit område i kroppen blir skadet eller infisert av mikroorganismer, vil stoffer frå cellene i det skadede vevet settje i gang ein betenellsereaksjon, som bla. **inkluderer at fagocytter strømmer til skadestedet**. Det begrenser skaden og hindrer mikroorganismer i å sprei seg.\n\n![[betennelsereaksjon.png]]\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Det-tilpassede-immunforsvaret.":{"title":"","content":"## Kva er det tilpassede immunforsvaret? \nHar du sysken eller kanskje ein ein egga tviling? Biologiske sysken har arvet ein del av dei samme genene frå foreldrene sine. Gjennomsnittleg delet eit syskenpar halvparten av genene dei har arvet frå foreldrene sine. Det gjelder også toeggede tvillinger. Sysken har derfor heller ikkje identiske [[Immunforsvaret.]]. Eineggede tvillinger har arvet nøyaktig dei samme genene frå foreldrene siden dei kommer frå samme befruktedede eggcelle ([[Befruktning og utvikling - Seksuell reproduksjon.]]). Likevel endrer også eineggede tvillingers immunforsvar seg etter kvart som dei blir eldre. Det skyldes det tilpassede immunforsvaret og korleis det uvikler seg frå fødsel og gjennom reten av livet.\n\n## Lymfocytter.\nViss ein mikroorganisme kjem inn i vevet og starter å dele seg der kan livet være truet. Dersom mikroorganismen ikkje fjernes av [[Det medfødte immunforsvaret.]]. er vi avhengig av at det tilpassede immunforsvaret stanser inntrengeneren. Då trenger vi dei kvite blodcellen som kalles *lymfocytter*. Dei heter *lymfocytter* fordi det finnes svært mangen av dei i *lymfeårene*, det vil årene som frakter overskuddsvæske (*lymfe*) frå vevet tilbake til blodet.\n\nDet er to ulike hovudtyper av lymfocytter: *B-celler* og *T-celler*. ([[B-celler]], [[T-celler]]). Dei har ullike virkemåte og forskjellige oppgåver. Når ein bestemt mikroorganisme kjem inn i kroppen første gang vil det ta fleire døgn førd et tilpassede immunforsvaret rekker å reagere og virke for full kraft. Viss dei medfødste immunforsvaret ikkje klarer å begrense infeksjonen, tar det som regel minst ein uke før mikroorganismen er fjernet frå kroppen.\n\n\nDet er også hukommelse lymfocytter og det er dei som er kanskje det viktigaste for det tilpassede immunforsvaret. Normalt vil det tilpassede immunforsvaret berre bli aktivert dersom det er ein immunrespons som blir aktivert av fagocytter eller anna celler i det betennte området. Hukomellse celler derimot krever ingen respons for å bli aktivert dette er fordi dei allereie husker sitt forrige angrep og veit at kroppen må vere klar for eventuelle nye slike angrep. Fordi B-celler og T-celler som er hukomellse celler kan direkte reagere gjer dette at vi unngår heile immunresponsen og berre direkte kan begynne å dividere seg og angrepe.\n\n## Infeksjoner.\n\nVed alvorlige infeksjoner kan tiden det tar før det tilpassede forsvaret er maksimalt vikrsomt, være kritisk for den sjuke. I slike tileffeller vil medisiner som stanser mikroorganismene som for eksempel [[Sopper|anti biotika]] mot ein bakterieinfeksjon være avgjerende for å bekjempe mikroorganismen i tide.\n\nViss ein allereie har gjennomgått ein infeksjon med ein bestemte mikroorganisme, eller viss ein er blitt vaksinert mot ein bestemt mikroorganisme vil det tilpassede immunforsvare **allereie være forberet** og klart til aksjon. Dette er den *immunologiske hukommelsen*. Ved ein ny infeksjon med den samme typen mikroorganisme vil den raskt bli oppdaga og fjerna som oftast skjer utan at ein direkte merker det sjølv fordi det skjer så raskt.\n\n## Virveldyr\nBare virveldyr har eit tilpasset immunforsvar. Virveldyrene spisert variert og beveger seg ofte over store områder. Dette gjer at det er eit krav for eit betre meir solid immunforsvar som kan takle mange meir ulike infeksjoner. Dermed trenger vi eit betre immunforsvar enn  [[Det medfødte immunforsvaret.]], og derfor har vi også det tilpasset. Forutsetningen for at virveldyrene kunne oppstå var derfor at dei utvikla eit effektivt  immunforsvar som blei påverka av omgivelsene. Resultatet blei det tilpasset immunforsvaret.\n\n\u003e[!INFO] Oppsummering\n\u003eDet tilpassede immunforsvaret består av *B-celler* og *T-celler*. ([[B-celler]], [[T-celler]]). Dei kan reagere på mikroorganismer og [[Virus]]infiserte [[Introduksjon til cellen.| celler. ]] Viss mikroorganismen er ny for kroppen, vil det ta fleire døgn før det tilpassede forsvaret virker for fullt. Viss vi har vært infisert av mikroorganismen tidlegere eller viss vi er vaksinerte mot mikroorganismen, vil det tilpassede immunforsvaret være forberedet og fjerne mikroorganismen raskt oftast utan at vi merker det.\n\n\n## Antistoff\n*Lymfocyttenes* er å oppgåve og gjenkjenne mikroorganismar, fremmede stoffer og [[Virus]]infiserte celler og setttje i gang ein **immunrespons**. Før vi forsetter må vi ser nærare på tre viktige begreper knytta til det tilpassede immunforsvaret. Nemlig : *Antistoff*, *Antigen*, *Antigenreseptor*.\n\n*Antistoffer* er $Y$-formede [[Proteiner og aminosyrer.|proteiner]] som lages av [[B-celler]]. Antistoffene skilles ut av [[B-celler]] og flyter fritt rundt i vevet og blodet. De er det tilpasset immunforsvarets viktigste våpen. På samme måte som du har to like armer festet til kroppen har eit antistoff to like bindingsteder festet til ein felles stamme. Bindingsstedene kan feste seg til molekylene ([[Det tilpassede immunforsvaret.#Antigen|antigene]]) som mikroorganismene har på overflaten. **Eit antistoff kan utnytte dei to bindingsstedene** sine på to måter. Den kan entens binde seg **eit eller to steder** på overflaten av det samme mikroorganismet, **eller feste seg til ulike mikroorganismer**. Dersom den er festet til ein fungerer antistoffet som ein merkelapp som gir  [[Det medfødte immunforsvaret.]] beskjed om å **øydellege mikroorganismen**. Når antistoff binder seg til fleire mikroorganismer på ein gong dannes det k**lumper som uskadeliggjer mikroorganismene**. (Dei leggjer seg meir eller mindre rundt).\n\n\n![[antigenantistoffbinding.jpg|300]]\n\nEin mikroorganisme kan ha mange ulike antigener på overflaten, men berre antistoffet med bindingsstad som passer til antigenet vil binde seg til antigenet. \n\n### Antistoff modning.\n*Antistoffmodning* gjer at immunforsvaret lager *antistoffer* som paser perfekt til *antigenet*. Når dei **umodne [[B-celler|B-cellene]]** begynner **å dele seg**, skjer det **samtidig endringer i genene** for antigenreseptoren. Dei to nye B-cellene vil derfor ha antigenreseptorer som er litt forskjellige frå morcellen og også **litt forskjellige frå kvarandre**. Kanskje passer den eine \"nye\" antigenet betre enn den andre? I så fall vil den ene B-cellen som ahr dette betre antigenet stimuleres i større grad og dermed skape fleire like B-celler. Den vil dele seg og utvikle seg reaskere enn den andre B-cellen, som kanskje ikkje stimuleres til å dele seg videre. Dette kalles *antistoffmodning*. I løpet av ein *immunrespons* il vi dermed få antistoffer som passer betre og betre til mikroorganismen (eller vaksninen) som starter immunsresponsen. \n\nPå grunn av antistoffmodning av det første \"dattecellene\" til ein B-celle som har bundet seg til ein mikroorganimse og som har begynt åd ele seg ha antigenreseptorer som er litt forskjellige både frå den første B-ellen og frå kvarandre. Slik vil ein enkelt B-celle som reagere med eit enkelt antistoff kunne gi fleire hundre ulike men nært beslektede antistoff molekyler som kan binde seg til antigenet.\n\nMikroorganismer endrer seg også ganske ofte på grunn av ein tildelfig mutasjon, dersom dette skjer vil kanskje den første oppdaget antistoffet ikkje binde seg til antigenreseptoren heilt perfekt lengre og dermed krevst ein av disse litt forskjellige men nært beslektede antistoffene til å passe betre.  Antistoffmodning som gir litt ulike varianter av det samme antistoffer er ein av dei gode eigenskapene ved det tilpassede immunforsvaret. Når vi først har dannet antistoffer mot ein mikroorganisme gjennom ein immunrespons er det ikkje  så lett for ein mikroorganisme å slippe unna immunforsvaret bare ved hjelp av tilfeldige mutajoner. I andre ord, DONT YOU DARE CHANGE, I AM PREPARED!\n\n## Antigen\n\n*Antigener* er molekyler som får [[B-celler]] til å å danne *antistoffer*. Antigener har fått namnet sitt på grunn av at det er stoffer som får B-celler til å generere *antistoffer* men antigener omfatter også molekyler som [[T-celler]] reagerer på. ein mikroorganisme innehalder mange ulike antigener på overflaten. \n\n## Antigenreseptor\n\n*Antigenreseptor* er [[Proteiner og aminosyrer.|proteiner]] som er festet i [[Introduksjon til cellemembranen|cellemembranen]]  hos **nokre** [[B-celler]] og hos **alle** [[T-celler]]. Kvar B-celle og T-celle har sin unike antigenreseptor. Kvar celle har omkring **hundre tusen identiske kopier av antigenreseptoren** på overflaten. B-celler kan også skille ut frie antigenreseptorer til vevet og blodet. Da har dei ikkje namnet av antigenreseptor lengre, men heller antistoffer. (Det du las om ovanfor).\n\n*Lymfocyttene* bruker antigenreseptoren sin for å **binde seg til** eller **gjenkjenne** eit bestemt antigen. Vi kan samanlikne dette med eit velkjent fenomen: Antigenet passer til antigenreseptoren som ein nøkkel i ein lås eller som ein hand i ein hanske. **Når antigenreseptoren binder seg til antigenet blir cellen stimulert til å dele seg.** I motsetning til antistoffer og antigenreseptoren til B-celler har antigenreseptoren hos [[T-celler]] berre eit bindested for antigen. Dessuten har T-celler heilt spesille krav til korleis antigenet skal vises fram for at dei skal reagere på det.\n\n![[bcelleogtcelleantigenreseptor.png]]\nT-celler har antigenreseptorer ed eit bindingsstad. B-celler har antigenreseptorer og fritt antistoff med to bindingssteder. Eit antistoff kan binde seg til ein eller to mikroorganismer.\n\n\n\u003e[!INFO] Oppsummering:\n\u003e*Antigener* er molekyler som får [[B-celler]] til å skille ut *antistoffer* og som [[T-celler]] også reagerer på. *Antistoffer* skilles ut av ein bestemt type B-celle og flyter fritt i vevet og blodet. Andre B-celler har *antigenreseptorer* i overflaten. Ein B-celles antigenreseptor er identisk med det tilsvarende frie antistofffet. T-cellers antigenreseptor sitter alltid fast i cellemembranen.\n\n\n\n## Lymfocyttene må kontrollerast.\nDet er viktig at [[Immunforsvaret.]] ikkje angriper dei friske [[Introduksjon til cellen.|cellene]] i kroppen. ***Lymfocytter* som ved ein feil har dannet antigenreseptorer som gjenkjenner og dermed angriper koroppens eigne molekyler, blir derfor fjernet eller holdt under streng kontroll av andre celler.** Dette skjer gjennom heile livet og gjer at immunforsvaret normalt ikkje angriper kroppens eigne celler. T-celler modnes i *brisselen* (thymus). PRoduksjonen av modne T-celler er størst til og med puberteten. I brisselen får kvar T-celle sin unike antigenreseptor. Nokre T-celler får antigenreseptorer som vil reagere på kroppens eigne celler. SLike T-celler må fjernes, viss ikkje kan dei angripe dei friske cellene i kropen og gjere oss sjuke.\n\n**Så mykje som nittiåtte prosent av dei umodne T-cellene dør i brisselen.**. Berre T-celler som har ein antigenreseptor som **ikkje**  reagerer på kroppens eiga vev får slippe ut av brisselen til blodet. Også ute i kroppen står lymfocyttene under nøye kontroll, blant annet av [[Det medfødte immunforsvaret.#Dendrittiske celler.|dendrittiske celler]]. Slike konotrollmekanismer er utvikla for å hindre at kroppens eget vev angripes av immunforsvaret.\n\n## Få blir mangen.\n[[Det tilpassede immunforsvaret.#Antigenreseptor|Antigenreseptorene]] til alle *lymfocytter* sett under ett i eit menneske kan gjenkjenne nærmest alle mulige fremmede antigener. Kvar enkelte B- og T- celle kan imidlertid berrre lage ein bestemt antigenreseptor. \n\nVed ein infeksjon vil [[Det medfødte immunforsvaret.]] både forsøke å bekjempe mikroorganismen og gi beskjed til [[Det tilpassede immunforsvaret.]] om at det skal reagere. Mikroorganismer har gjerne mange ulike antigener. Dei T-cellene og B-cellene som har antigenreseptorer om binder seg til mikroorganismens antigener vil bli timulert til ådele seg.\n\nFørst når det er proudsert mange nok T- og B-celer vil den aktuelle mikroorganismen bli fjernet. Etter kvar det avlsuttes også immunsresponsen. **Det at nokre lymfocytter må stimuleres til å dele seg og bli mange gjer at immunresponsen blir tilpasset behovet.** Men det medfører også  at det tar lengre tid før  [[Det tilpassede immunforsvaret.]]  reagerer mot mikroorganismen. **Til gjengjeld er det tilpassede immunforsvaret svært effektivt når det først er aktivert.**\n\n\n\u003e[!INFO] Oppsummering\n\u003e*Lymfocytter*, det vil si *B- og T-celler* kan lage *antigenreseptorer* mot alle tenkelige *antigener*, inkludert dei som lages av kropens eigne celler. Lymfocytter som kan reagerer på kroppens eigne antigener blir derfor fjernet eller holdt under nøye kontroll. Lymfocytter vil bare dividere seg og blir strimulert til å bekjempe ein mikroorganisme etter at dei har bundet seg til eit antigen som passer til deira antigenreseptor.\n\n\n\n## Korleis kan [[Immunforsvaret.]] lage så mangen antigenreseptorer?\nKvar av oss produsrer utroleg mange (fleire hundre milliarder) ulike [[B-celler]] og [[T-celler]] i løpet av livet vårt. **Vi har ikkje like mange gener med informasjon for å byggje alle disse lymfcoyttene med ulike antigenreseptorer.** Korleis klarer då kroppen og immunforsvaret å danne alle disse ulike cellene med ulike antigenreseptorer? I dei fleste cellene i kroppen er den [[Strukturen til cellemembranen.|genetiske informasjonen]] den samme. **I lymfocyttene derimot blir genene som danner antigenreseptoreene omorganisert, klippet frå kvarandre og limt sammen igjen mens lymfocytten modnes**. Dermed blir sammensetningen av antigenreseptorene eforskjellig i dei forskjellige lymfocyttene.\n\nGenene for antigrenreseptorene som brukes av [[B-celler]] og [[T-celler]] inkluderer mange korte [[DNA]]-biter som liknar på kvarandre. Disse er oppskrifter på ulike [[Proteiner og aminosyrer.|proteindeler]] som settes tilfeldig sammen til ferdige antigenreseptorer, omtrent slik ein bingo- eller lottorekke settes tilfeldig sammen. Kombinasjonen av genbitene bestemmer korleis antigenreseptoren blir. Dermed er bare nokre få genbiter nok til å lage det utrolige mangfoldet vi har av lymfocytter med ulike antigenreseptorer.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Determining-if-a-word-is-a-palindrome-with-recursion.":{"title":"","content":"# Determining if a word is a palindrome with recursion.\n\nA palindrome is a word that is written the same way forwards and backwards.\nFor example: \"ROTOR\" is a palindrome, but \"MOTOR\" is not.\n\nHow can we use [[Rekurisve algoritmer.|recursion]] to determine a palindrome? We first need to understand what the base case would be. Consider the word $a$, or character sequence $a$ (it does not have to be a word). Any string containing just one letter is a palindrome, and likewise an emptry string is a palindrome. Our basecase would be: if a string is exactly $0$ or $1$ is length then the string is a palindrome.\n\nIf the string contains two or more characters we need to have our recursive case. Consider the palindrome \"ROTOR\", the first and last letters are the same. If they are not the same, such as in \"MOTOR\", the word is not a palindrome. This can be used to differentiate between if a string is a palindrome or not. \nIf the first and last characters are the same it might be a palindrome, then we have to check the second first and second last characters, ……… , until we have checked the whole string. We can just check the last and first characters then pop the letters and check the string again, until the string is length of either $1$ or $0$.\nIf we ever encounter a difference in the first and last letters then we know for certain it not a palindrome.\n\n## Psuedocode.\n1. So to check recursively if a string is a palindrome we check the first and last characters.\n1.  If they are the same, strip them from the string, and check if the new last and first characters are the same.\n\t1. Repeat until string is length $0$ or $1$.\n2. If the first characters are not the same, stop and declare that the word is not a palindrome.\n\n\nWe can implement this in javascript like this:\n```js\nvar palindrome = function(string){\n\t//basecase 1\n\tif(string.length===0||string.length===1){\n\t\treturn true;\n\t}\n\t//basecase 2\n\tif(lastcharacter(string)!==firstcharacter(string)){\n\t\treturn false;\n\t}\n\t//basecase 3\n\treturn plaindrome(middlecharacters(string));\n};\n\n```\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Diffusjon":{"title":"","content":"# Diffusjon.\nDiffusjon er ein form av [[Passiv og aktiv transport.]] som er ganske ofte brukt i biologiske systemer og ganske viktige.\n\nDiffusjon fungerer på ein ganske simpel måte, den fungerer ved at nokre til dømes: stoffer i eit rom vil gjevne seg utover tiden.\nTil dømes viss vi har ein stor mengde konsentrasjon av eit gassstoff til venstre i ein boks, og ein liten konsentrasjon av eit gassstoff til høgre i ein boks så vil dei over tid bli diffusert til ein gjevn konsentrasjon. Dei altså beveger seg utover [[konsentrasjonsgradient]] slik at dei til slutt er gjevn.\n\nHer er eit døme:\n![](https://cdn.kastatic.org/ka-perseus-images/932a09a9bbf6ac995985e9240c613abc3ab5bff9.png)\n\nDette er òg sant for stoffer som beveger seg ut og inn gjennom cellemembranen. Fordi cellemembranen er semipermabel vil små uladet molekyler lett komme seg gjennom cellemembranen ([[Passiv og aktiv transport.#Passiv transport|passiv transport]]). Men dei ladet ionene vil kreve nokon form av [[Passiv og aktiv transport.#Aktiv transport|aktiv transport]].\n\n## Fasilitert diffusjon i [[Introduksjon til cellemembranen|cellemembranen]].\n\nI cellemembranen vil ikkje ladet ioner lett kunne komme seg igjennom cellemembranen fordi dei har ladninger som gjer at den ikkje vil tillate nokon ladet ioner i gjennom. Dette er der fasilitert diffusjon oppstår, i fasilitert diffusjon er det [[Strukturen til cellemembranen.#Transmembrane proteiner|transmembrane proteiner]] som tilatter overgangen av ionene igjennom cellemembranen slik at dei kan diffusere. Her vil dei transmembranen proteinene tilatte ein overgang, dette er fordi dei er entens transmembrane kanalproteiner eller transmembrane bærerproteiner som tilatter overgangen.\nSlik ser fasilitert diffusjon i cellemembranen ut.\n![](https://cdn.kastatic.org/ka-perseus-images/3b37e2d951ecb7d68c899817e8fb57f2f15abf4d.png)\n\n\nHusk ikkje alle molekyler som ikkje er ladet kommer seg igjennom membranen heller, viss dei er for store trenger dei òg ein form for aktiv transport gjennom den.\n**Fasilitert diffusjon oppstår berre i [[Passiv og aktiv transport.#Passiv transport|passiv transport]]. Den krever ingen energi, den berre tillater den å gå gjennom membranen. NO ENERGY**.\n\n\n### Åpne porter \u0026 lukket porter.\nÅpne porter skjer i [[Proteiner og aminosyrer.|transmembranen membranproteiner]] som ikkje lukker seg eller åpner seg, dei er konstant åpnet. Nokre derimot har lukket og åpner porter som åpner seg og lukker seg . \nMange stoff kan ikkje direkte gå igjennom fordi dei er upolare, for store, eller har andre eigenskaper som gjer at dei ikkje kjem seg gjennom membranen direkte. Her skjer fortsatt diffujson langs konsentrasjonsgradienten, men gjennom disse proteinene. Nokre stoffer er endå meir regulert som proteiner, aminosyrer, og andre slikt. Her krevest det ikkje energi,men når cella krever slike stoff er det ute og det er ein konsentrasjonsgradient. Det er nemleg designet slikt.\n\n\n## Enkel diffusjon\n\nEnkle stoffer som ikkje har ein ladning kan ganske lett, dersom dei er små nok, gå direkte gjennom cellemembranen. Dette er det som er kjent som enkel diffusjon, dei er upolare, fettløslige, og det må vere ein konsentrasjonsgradient som gjer at diffusjonen vil presse stoffene den eine veien gjennom membranen. Dette skjer fordi [[Introduksjon til cellen.|cellen vil regulere forhaldet mellom det ytre og indre miljøet]]. Dei vil ha eit likt miljø, stoffene bevege seg langs konsentrasjonsgradienten.\n\nDøme:\nI lungen er det eit konsentrajsongradient mellom blodet og lungen, blodet går ut fordi det er ein lågare konsentrasjon der, og slik går det forevig. Likt blir $CO_2$ frakta ut av cellene, etter celleåndingen, det går ut fordi det er ein konsentrajsonsgradient som drar den ut. Og deretter går det inni lungene og pustet ut.\n\n\n\u003e[!WARNING] NB\n\u003eNår det er gjevnt gjennom heile volumet vil det ikkje stoppe beveging av molekyler, dei vil fortsette berre dei vil vere gjevnt fordelt nå.\n\n\n\n## OSMOSE.\nOsmose er ein passiv transport gjennom membranen som er ganske liknande til dei andre formene, men er spesiell fordi det er berre for vatn.\n\nOsmose skjer mellom konsentrajson av vatn i forhald til andre stoffer. normalt i dei andre diffusjonsprossessene vil det ikkje gå eit forhald som beveger seg langs konsentrajonsgradienten. Men her skjer det, i andre ord vatn beveger seg konsentrasjonsgradienten av vatn i forhald til andre stoffer. Ikkje i konsentrajonsgradienten av vatn.\n\nSpesialiserte [[Strukturen til cellemembranen.#Proteiner.|proteiner]] som tillét vatn å gå gjennom er kalt akvaporiner. Her er det raskt, men berre eit batn molekyl kan gå igjennom om gang. Det er litt forskjellig for kvar gang korleis dei ser ut, om dei er i vev, etc. men dei ser ganske like ut. Dette er i alle celler. \n\n\n![](https://tidsskriftet.no/sites/default/files/styles/default_scale/public/2003--L03-23-Med-091-03.jpg?itok=-3lpTePo)\n\n\nLES MEIR HER: [[Osmose.]].\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Distanse-forskyvning":{"title":"","content":"# Distanse og forskyvning.\n[[Symboler]]\nDistanse er den totale mengden den har bevegt seg.\nForskyvning er mengden beveging frå start til slutt direkte.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Divide-and-Conquer.":{"title":"","content":"# Divide and conquer algoritmer.\n\nBåde [[Selection sort.]] og [[Insertion sort.]] har den verste kjøretiden av [[Big theta]] ($n^2$). Det finnes bedre sorterings algortimer. [[Mergesort]] kjører i $\\theta(n\\times\\log(n))$, og [[Quicksort.]] kjører i $\\theta(n\\times\\log(n))$ på det beste og som oftast, men kjører i verste tid $\\theta(n^2)$. Begge er betre enn selection sort og insertion sort.\n\n\n## Divide and conquer algoritme struktur.\nBåde quick og merge-sort bruker eit algoritme paradigme basert på [[Rekurisve algoritmer.|rekursjon]]. Denne paradigme \"divide and conquer\" bryter eit problem ned inn i mindre sub-problemer som liknar på den originale, den rekursivt løyser sub-problemene og så kombinerer svarene på subproblemene for å forme sluttsvaret. Kvart problem må vere mindre enn den originiale, og ha ein base case for subproblemet.\n\n1. Divide, divider problemet inn i mindre sub-problemer. Subproblemene er mindre enn den originale.\n2. Conquer, løys sub-problemene rekursivt. Viss dei er små nok kan ein ofte berre løyse dei direkte utan å gjere det rekurstivt, da er sjølve sub-problemene base-casen.\n3. Combine, Kombiner svarene til sub-problemene til å finne den endelige løysingen. (Final soloution, lmao, sieg heil). \n\nHer er ein oversikt over strukturen til ein divide and conquer algortime.\n![](https://cdn.kastatic.org/ka-perseus-images/98c02634ee7f970a6bfb0812cc1495bacb462282.png)\n\nViss vi løyser subproblemene rekursivt:\n![](https://cdn.kastatic.org/ka-perseus-images/db9d172fc33b90e905c1213b8cce660c228bb99c.png)\n\n\n\u003e[!INFO] Sidenotat.\n\u003eFordi divide and conquer gjer minst to rekursive calls kan vi seie at divide and conquer algoritmer er [[Multiple recursion with the serpinski gasket.|multiple recursion]].\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Dopplereffekten":{"title":"","content":"# Dopplereffekten\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Dynamic-programming.":{"title":"","content":"# Dynamic prgramming.\n\n[[Improving efficiency of recursive functions.#Memoization|Memoization]] and [[Improving efficiency of recursive functions.#Bottom up|Bottom-up]] are both techniques from dynamic programming. A problem solving strategy used in Mathematics and Computer Science. (CompSci 🤤🫦). \n\nDynamic programming can be used when a problem has optimial substrucutre and overlapping subproblems. Optimal substructure means the optimal soloutions an be created from the optimal soloutions of its subproblems. In other words fib(5) can be solved by fib(4) and fib(3). Overlapping subproblems happen whenever a subproblem is solved multiple times which we saw when fib(5) made multiple calls to the typically recursive fib(3) and fib(4). \n\nDynamic programming can be used for a range of problems and involves techniques besides the ones we learned here. If you are working on a problam with optimal substructure and overlapping suproblems, consider whether a dynamic programming implementation may work.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Dyr":{"title":"","content":"# Dyr:\n## Kva er dyr?\nDyr (_Animalia_) er fleircella [[Introduksjon til eukaryote celler.|eukaryot]] organismar innanfor dyrerike.  Dyr, med nokre unntak, pleier å ete organisk materiale, puste oksygen, har evna til å bevege seg, og kan reprodusere [[Befruktning og utvikling - Seksuell reproduksjon.|seksuellt]]. Fordi dei spisar organisk materiale for å få tak i energi, gjer dette at dei er anerkjent som *heterotrofe*. I dag er det kjent til over 1,5 millionar ulike arter av dyr, der 1 million er insekt, men estimat viser til at det kan vere totalt opp til 7 millionar arter dyr. Dyr som regel har ganske komplekse interaksjonar med kvarandre og [[Økologi.|miljøet]] dei finner seg i, dyr kan òg danne næringskjeder med kvarandre, der ulike dyr er avhengig av kvarandre for å leve. Menneske, dyrearten vi er, kan ta nytte av andre dyr på fleire måtar. Vi kan få næring av dyr, bruke dei for materiale, som kjæledyr og som arbeidsuførare.\n\n\n## Kategorisering\nDyreriket er svært mangfaldig og variert, for å kategorisere og skape systematikk for dette riket kan vi dele riket inn i to hovud-grupper; *virveldyr* og *virvellause* dyr. Virveldyr er dyr som har både ein hovudskalle og ein ryggrad, dømer på dette er _hund_, _katt_ og _menneske_. Virvellause dyr er dyr som ikkje har hovudskalle eller ryggrad, eit døme på dette er _meitemark_.  Dei fleste dyr pleier å bli kategorisert inn i nokre få men store rekker. Alle dyr innanfor ein rekke er meir eller mindre lik i bygningsplan, men er forskjellig på detaljer. I dyreriket er det 33 riker, der det er totalt 103 formelle klasser. I klassene finner vi nokre av dei mest kjente nemningane for dyr; _amfibia_, _krypdyr_, _pattedyr_ og _fuglar_.\n\nNokre av dei største rekkene i dyreriket er; _ryggstrengdyr, pigghuder, leddyr, ledd-mark, blautdyr, rund-mark, flat-mark, huldyr_ og _svampar_.\n\n _Ryggstrengdyr_ er ein rekke av virveldyr, som namnet tipsar til har ryggstrengdyr ryggstrenger i eit eller fleire stegar i livssyklusen sin. Eit døme på eit ryggstrengdyr er arten vi menneske er, nemleg _Homo Sapiens_.\n\n_Pigghuder_ er ein stor rekke av marine virvellause dyr. Det som kjenneteiknar pigghuder er at dei ofte er langsame bevegelege, og gjerne har symmetri i form og fasong. Ein kjent underklasse av pigghuder er *sjøstjerner*. Dei aller fleste pigghuder har ein form som er symmetrisk i fem deler, noko som vi ofte observerer i sjøstjerner. Eit døme på ein pigghud er slangestjerna _Ophionereis Reticulata,_ som har fem ulike tentakel-liknande armar som den bruker til å kjenne etter mat.\n\n _Leddyr_ er ein særdeles stor rekke av virvellause dyr, her er dei største undergruppene _insekt_, _edderkoppdyr_ og _krepsdyr_. Dei aller fleste dyr på jordkloden er i denne rekka då omtrent 80% av alle oppdaga dyr er insekt.  Eit døme på eit leddyr er grashopper arten _Corthippus Parallellus_, også kjent som «enggrashopparen». Grashopparen er funnet rundt i Europa og delvis i Aust-Asia. Grashopparen finner ein ofte i enger, og det er der kallenamnet kjem ifrå.\n\n_Ledd-mark_, også kjent som *leddormar*, er ein mangfaldig virvellaus rekke. Ledd-mark er tilpassa til svært mange ulike miljø som i havet, ferskvatn og jordbunden. Eit døme på ledd-mark er meitemarken _Aporrectodea caliginosa_, også kjent som «den gråmeitemarken». Meitemarken er ofte funnet i Storbritannia, og som dei fleste meitemarkar har den ein diett som består for det meste av jord.\n\n_Blautdyr_, også kjent som _molluskar_, er ein virvellaus rekke i dyreriket. Mange blautdyr har eit skall til beskyttelse som er bygget opp av kalk og [[Proteiner og aminosyrer.#Proteiner|proteiner]]. Blautdyr utgje den største rekka av marine organismar, då omtrent 23% av alle namngitt marinedyr ligg i denne rekka. Eit døme på ein blautdyr art er snigle-arten _Helix Pomatia_, også kjent som «den romerske snigle». Snigla lever på land, pustar luft, og er fullt spiseleg. \n\n_Rund-mark_, også kjent som _rund-ormar_ eller _nematoder_, er ein stor rekke virvellause dyr. I globalt biomasse er rund-mark kanskje den mest normale typen dyr på planeten. Rund-mark ofte kjenneteiknast gjennom ein glatt tynn langstrakt kroppsfasong, og ofte bur i jorda. Eit døme på ein rund-mark art er ormen _Ostertagia Ostertagi_, også kjent som «middels mageorm». Denne rund-marken er ein parasitt som ofte blir funnet i kyr, men av og til blir òg funnet i andre dyr som sau, hest og geiter.\n\n_Flat-mark_, også kjent som _flatorm_, er ein rekke av relativt simple flate symmetriske virvellause marine dyr. Flatormar har ikkje indre sirkulasjons- og respirasjonssystem som gjer at organismane er tvinge til ein flat form slik at oksygen og næring kan bli tatt inn gjennom [[Diffusjon|diffusjonsprosessen]]. Eit døme på flat-mark er den parasittiske arten _Leucochloridium Paradoxum_. Denne arten av flat-mark lever først i land sniglar, og deretter pleier å injisere stoff inn i auga til sniglane, slik at dei liknar på larvar. Larvar er naturlege bytte for fuglar, og dermed vil parasitten leve i ein fugl til slutt. Når parasitten lever i ein fugl vil den leggje egg i avføringa til fuglen. \n\n _Huldyr_, også kjent som _nesledyr_ eller _polyppdyr_, er ein stor dyre rekke med velkjente dyr som _korallar_ og _maneter_. Huldyr er akvatiske dyr som lever i både fersk vatn og marine miljø, men lever oftast i marine miljø. Huldyr som regel har ganske enkle oppbygning, der det består av eit indre [[Introduksjon til cellemembranen|cellelag]] og eit ytre [[Introduksjon til cellemembranen|cellelag]]. Eit døme på ein huldyr art er _Actinia Equina_. Actinia Equina er ein art av sjøanemone som lever i havet heilt frå Vest Europa ned til Sør-Afrika. Arten er høgt spesialisert til forstranda, da den kan tåla høge temperaturar og uttørking. \n\n_Svampar_ er dei mest primitive fleircella dyra, og dei fleste lever naturleg i marine miljø. Fossile funn har vist teikn til at svampar var dei første dyra som oppstod på jordkloden, noko som støttast av faktumet at svampar ikkje har komplekse indre system som ekte vev eller organ. Eit døme på ein svamp art er _Aplysina Archeri_, også kjent som «komfyr-pipe svampen». Kallenamnet kjem i frå forma som svampen har, den har store sylindriske tubar som liknar til ein komfyr-pipe. Svampen bruker filtermating for å få tak i næring, som tyder til at den tar opp passerande plankton og andre mikroorganismar gjennom filtrer for å få tak i næring.\n\n## Reproduksjon\nNesten alle dyr reprodusere gjennom ein form av [[Ulike typer reproduksjon.#Seksuell reproduksjon|seksuell reproduksjon]]. Der dei produsere haploide gametar (sex celler) som smeltast samen under paring slik at det skapest ny avkom. Dei små bevegelege gametane har namnet av _spermatozoa_ (sæd), og dei store ikkje bevegelege gametane har namnet av _ova_ (egg-celler). Oftast vil dyr reprodusere med andre av same art og med det andre kjønnet, men nokre kan reprodusere på kryss med andre arter, og nokre kan reprodusere med seg sjølv (sjølv-befruktning, same organisme). Nokre dyr har òg evna til å reprodusere [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuellt]], der det ikkje er brukt gametar. Dette skaper ein genetisk kopi av foreldre organismen, og dette skjer ofte gjennom fragmentering eller spiring.\n\n## Historie\nAristoteles (382-322 f.Kr) var den første som prøvde å definere kva dyr var. Han definerte dyr som alle organismar som innehalde blod i seg. Fleire tusenår seinare, i 1758, bestemte Carl Von Linné (1707-1778) å prøve å skape eit betre biologisk hierarki av dyreriket med publikasjonen av teksten _Systema Naturae._ Denne teksten blei vidarebygd på av Jean-Baptiste Lamarck i 1809 som definerte 14 ulike rekker av dyrearter innanfor riket. I 1874 dividerte Ernst Haeckel dyreriket i to ulike kategoriar, den fleircella kategorien _Metazoa_, og den eincella kategorien _Protozoa_. _Protozoa_ er små eincella organismar som ikkje lengre blir definert som dyr, og er i dag kjent som _protister_. I den moderne tiden er ikkje dyr konkret definerte lengre gjennom slike simple definisjonar, men heller gjennom [[Kva er ein art.#Ulike artsdefinisjoner|fylogenetisk]] analyse av [[DNA]]-et for å sjekke gjennom genar som alle dyr er kjent til å ha.\n\n## Dømer på dyr\n### Eublepharis Macularius\nEublepharis Macularius, også kjent som Leopard Gekko, er ein art av virveldyr som tilhøyrar rekka ryggstrengdyr. Leopard Gekko er ein art av Gekko som er heimehøyrande til dei tørre ørkenane av India, Nepal, Afghanistan, Iran og Pakistan.\n\nLeopard Gekko var først beskriven som ein eiga art i 1854 av Edward Blyth. Det stammande namnet _Eublepharis_ kjem i frå Gresk og betyr «gode augelokk». Dette er fordi leopard gekko har augelokk, noko som mange andre arter av gekko ikkje har.\n\n### Glaucidium Brasilianum\nGlaucidium Brasilianum, også kjent som «Jernholdig pygméugle», er ein art av ugle som er heimehøyrande til store deler av Amerika, frå sentral- til sør Amerika. I Sør-Amerika er det ugla som er mest funnet i tal. Ugla jakter på mange ulike andre dyr, bla. fuglar, øgler, andre krypdyr, amfibium, pattedyr og insekt. Namnet _Brasilianum_ kjem i frå at der ein svært stor mengde av denne arten ugle i landet Brasil, spesielt i Amasonas regnskogen.\n\n### Rhincodos Typus\nRhincodon Typus, også kjent som kvalhai, er den største haien som ein finner på denne planeten, den største har hatt ein lengde på 18,8 meter. Haien liknar ikkje på andre haiar direkte, men minner om kval og det er der namnet kvalhai stammer i frå. Hai-arten haldar fleire rekordar for sin størrelse innafor dyreriket. Haien er den einaste arten innanfor slekta _Rhincodon_, og er den einaste arten innanfor familien Rhincodontidae som framleis eksisterer.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Dyreceller-og-planteceller.":{"title":"","content":"# Dyreceller og planteceller.\n\nLikevel både dyreceller og planteceller er [[Introduksjon til eukaryote celler.|eukaryoter]] har dei ulike mengder og nokre ulike [[Kva er organeller - organeller i eukaryotiske celler.|organeller]] som utfører ulike oppgåver som er egnet for typen celle.\n\nHer er nokre av nøkkel differansene og fellestrekkene:\n* Både dyre og planteceller har mitokondier,a men berre planteceller har kloroplast.\n\t* Dette er fordi planter kan ikkje spise andre dyr og få i seg [[Karbohydrater.]] på den måten, dermed bruker dei [[Fotosyntesen]] til å skape karbohydratene sine.\n* Både dyre og planteceller har vakuoler.\n\t* Men planteceller har ofte ein stor vakuole, i mens dyreceller har ofte mange små vakuoler.\n* Planteceller har ein cellevegg i tilleg til [[Introduksjon til cellemembranen|cellemembranen]].\n\t* Dette gir den kubete formen til plantecellen.\n* Berre dyreceller har lysosomer.\n\n\nKvar av dei to ulike typene har ulike organeller dei tar i bruk og ulike mengder dei tar dei i bruk, dette er fordi dei ulike celletypene har ulike ting dei må utføre for å leve eit optimalt liv. Dette tyder at til dømes ein dyrecelle finner det optimalt å ha mange ulike vakuoler, i mens ein plantecelle finner det optimalt å ha ein stor vakuole i staden.\n\nEin typisk plantecelle kan sjå slik ut:\n![](https://cdn.kastatic.org/ka-perseus-images/efdeccc83cd2b30849b89fedd8993d783a1f635a.png)\n\n\nEin typisk dyrecelle ser slik ut:\n![](https://cdn.kastatic.org/ka-perseus-images/ea78a32e9099684f2eb9ed737afc97ff8db9cbda.png)\n\nSom ein kan sjå på dei ulike biletene blir det brukt ulike organeller og i ulike grader. Dette er fordi dei er egnet til sitt miljø og livsstilen. Dyr meir aktiv, planter meir avslappet.\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/EM-b%C3%B8lger":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Effekt":{"title":"","content":"[[Newtons andre lov, vekt]]\n[[Symboler]]\n\nEffekt $P$ er [[Arbeid]] over tid.\n$Effekt=\\frac{Arbeid}{Tid}$\n\n$\\LARGE P=\\frac{W}{\\Delta t}$\n\neller\n$\\LARGE P = F \\times \\overline{V}$\n\nDer $\\overline{V}$ er gjennomsnittsfart.\n\nEnhet til $P$ er $1Watt=W=\\frac{Joule}{s}=\\frac{kg*\\frac{m^2}{s^2}}{s}=\\frac{kg\\times m^2}{s^3}$\n\n\nEin hestekrefter er 735W.\n1hk = 0.735kW\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Eit-konged%C3%B8mme-blir-til.":{"title":"","content":"\nEin rikssamling prosess tok stad over 2 år cirka 800- 1000\n\nDet er ein drivkraft og ein forutsetning for at vårt område også blir eit kongedømme.\n\n## Harald Hårfagre ca 850-931/32\nI den norske bevisstheten er det Harlad Hårfagre vi sier er han som samla Noreg, og han levde på Vestlandet og det er tenkt at han blei begravd her i Haugesund 🤓. \nHan var ikkje åleine han som samlet Noreg åleine men var ein av dei første som begynnte.\n\n### Sagaen om Harald Hårfagre.\nSnorre sturlason er spesielt kjend for *Heimskringla*, ei samling på 17 sagaer om Norske kongar, og den første var Harald Hårfagre.\n\nDen viktigaste delen er av sagaen om Harald er:\n*Kong Harald sende nokre av mennane sine etter ei gjente, som heitte Gyda, dotter til kong Eirik fraa Hordaland; ho vart fostra i Valdres hjaa ein storbonde. Kongen vilde hava ho til frille, for di ho var ei ovende væn gjente og heller storlynd. Daa sendemennane kom dit, so sagde dei ærendi si til gjenta. Ho svara soleis, at ho vilde ikkje spilla møydomen sin til aa faa ein konge til mann, som ikkje hadde større rike enn berre nokre fylke aa raada for. «Men de tykkjer eg er underlegt,» segjer ho, «at de ikkje finst ein konge som vil taka heile Norig og vera einvaldskonge yvi, sameleis som kong Gorm i Danmark og kong Eirik i Uppsalir.» Sendemennane totte at ho svara fælt so kaut, og spurde kva ho meinte med dette svare; dei sagde at Harald var so megtug konge, at ho fulla kunde berga seg med honom. Men endaa ho svara annarleis paa ærendi deira enn dei lika, so saag dei seg ikkje syn til aa faa ho burt denne gongen, naar ho ikkje vilde sjølv, og dei laga seg daa til aa fara. Men daa dei var ferdige, vart dei fylgde ut. Daa sagde Gyda til sendemennane og bad deim bera desse ordi hennar fram til kong Harald, at ho vilde ikkje samtykkja aa verta kona hans paa annan maate, enn at han for hennar skuld fyrst lagde under seg heile Norig og raadde likso fritt for de rike, som kong Eirik for Sviavelde eller kong Gorm for Danmark, «for di at daa fyrste, tykkjer eg, kan han heita tjod-konge,» segjer ho.*\n\n#### Er sagaen presis.\nAntagenteligvis ikkje heilt, den kan vere basert delvis på ein sannhet som var, men kan også vere dramatisert mykje og Gyda kan vere eit litterært verkemiddel brukt for å skape meir ære og status til Harald. Å tenke at Harald gjorde dette for kjærleik og ikkje berre grådighet skaper meir status til han enn dersom alt var for grådighet.\n\n\n### Slaget ved hafrsfjord (872)\nDet er rett utanfor stavanger.\n* Harald Hårfagre sitt rikesvarer ikkje tild det som vi tenkjer på som Noreg i dag.\n\t* Kart på s.107.\n\t* Var egentelig berre eit vestlands rike med hovudpunkt på Avaldsnes.\n* Harald hadde ikkje noka sentralisert styre, med hovudstad, adminitrasjon, politi- og rettsmakt.\n\t* Hadde ikkje direkte kontroll over heile reiket sitt.\n* Då harald Hårfagre døydde blei riket hans snart stykka opp i fleire mindre kongedøme.\n\t* Dei første etterkommarane klarte å halde kontrollen over det vestnorske kjerneområdet.\n\n\n ### Særtrekk med riket til Harald Hårfagre:\n\n1. Ingen sentralisert styre, det var ingen hovudstad, adminsitrasjonsapparat, eller politi- rettsmakt. Maktgrunnlaget var hirda- den profesjonnele hærstykren som følgde kongen når han markerte makta si ved å reise rundt mellom kongsgardane.\n2. Harald Hårfagre holdt seg met til kjerneområdet på Sær-Vestlandet, her hadde han eit overherredøme over der andre område i nærområdet. Den direkte makta låg da hos ein lokal høvding  som Harald var i allianse med.\n3. Fordi overherredøme var ei ustabil og personavhengig styringform var riket til Harald Hårfagre på skjøre bein. Haralds personlege makt og kontaktnett heldt riket hans saman.\n4. Inntektene var tok gjennom handel og overbeisering av andre riker.\n\n\n\n## Grunnen til eit rike\nRundt omkring 800 til 1000 var vikingene i effekt gjennom å skape større herredømer gjennom allianser kunne dei skape større riker, dette observerte dei gjennom å sjå overherredømer i ulike andre deler av Europa, som gidde inspirasjon.\n\n* Den rikdommen og makta høvdingane skaffa seg gjennom plyndingr og handel la grunnlaget for småkongerika - og etter kvart rikssamlinga.\n* Nye allianser pga. handelsinteressar og behov for å kotnrollere skipsleia.\n* Verktøyer som gjorde dette mogleg var\n\t* Vikingsskipet var det verktørey ein trengte.\n\nDen økonomiske inntekten dei fikk gjennom plyndring og handel var nødvendig for å kunne skape eit stort herredøme, kanskje Noreg hadde tatt fleire hundre år lengre å bli eit forrent land dersom det ikkje var eit vikingsskip?\n\nFørste delen i rikssamlinga var dermed om handel og kontroll med Nordvegen (vegen nord, vestkysten av noreg ).\nFørste delen i rikssamlinga henger saman med vikingferdene.\nResultatet var Harald Hårfagres kongerike.\n\n\n\n### Kva vikingferdene fekk å seie for rikssamlinga\n\nVikingsferdenen var avgjørende for at rikssamlinga var mogleg, fordi den økonomiske inntekten som vikingsferdene skapte gjorde det meir mogleg for handel, nærkontakt, og allianser med andre nær liggjende kongerike. Rikdommane var fordelt ujamt gjennom landet og nokre høvdingar og slektar hadde meir makt og rikdom enn andre, men framleis gidde jøreisene større samhøyrlse og la grunnlaget ofr nye allianser og meir kontakt over større område. Alt dette la forholda til rette for at høvdingane og småkongar hadde moglegheita til å sprei seg og ekspansjon av område. \nIkkje minst hadde ulike luksusvarer frå ulike deler av landet stor interrese frå dei andre delene av landet og til og med andre deler av Europa. Dette tillét Harald å leggje under seg allianser som strekte over store område og dette hjelpte å forene landet. Og alt dette var tillét fordi vikingskipet gjorde det mogleg å raskt kunne ha kontakt med kvarandre, dei var raske og effektive.\n\n\nEtter Harald Hårfagre var det neste steget for rikssamlinga [[NOREG BLIR meir RELIGIØS.|religion]].","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Eksponent-reglene":{"title":"","content":"# Eksponent reglene.\n\nVi har fleire ulike regler når det angår eksponenter som vi kan ta i bruk for å gjere ganske mangen ting, som til dømes finne når to ulike verdier er lik kvarandre (når $x$ er i eksponent) eller vi kan bruke det til å omformulere svar.  Det er ganske mange ting vi kan gjere med disse reglene.\n\n### Reglene.\n1.  $a^{b^{c}}=a^{b\\times c}=a^{c^b}$\n2. $a^{2b} \\times a^{3b}=a^{2b+3b}$\n3. $\\frac{a^{3b}}{a^{2b}}=a^{3b-2b}$\n4. $a^b \\times c^b = (a\\times c)^b$\n5. $a^0=1$\n6. $(\\frac{a}{b})^c=\\frac{a^c}{b^c}$\n7. $a^{-1}=\\frac{1}{a}$\n\n\n\n### Nokre bruker for eksponent reglene.\nVi kan bruke reglene for å finne ein x verdi som gjer at ein likning mellom to ulike verdier med x som eksponent lik.\n\nDøme:\n$2^{2x}=4^{5x} \\rightarrow 2^{2x}=2^{2(5x)} \\rightarrow 2x=10x, x=0.$ Her er dei to ulike verdiene på sidene av likningene like når det er ein $x$ verdi av $0$.\n\t\nVi har fleire dømer:\nDøme:\n$\\frac{2^{2x}}{4^{2x}}=2^{x+5} \\rightarrow \\frac{2^{2x}}{2^{4x}}=2^{x+5} \\rightarrow 2^{2x-4x}=2^{x+5} \\rightarrow 2^{-2x}=2^{x+5} \\rightarrow -2x=x+5 \\rightarrow -3x=5 \\rightarrow x=-\\frac{5}{3}$\n\nDette ganske lange likningen kan vi finne ut at disse to ulike funksjonene av siden er det samme når $x=-\\frac{5}{3}$.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Elektronmikroskop.":{"title":"","content":"# Elektronmikroskop.\n[[Mikroskopi]]\nViss du vil sjå noko svært lite med høg oppløsning må du bruke elektron mikorskop, disse kan sjå atomer! Elektroner har korte bølgelengder som gjer at bruken a elektroner i staden for lys gir betre, meir klare bileter.\n\nElektron mikroskop kan berre ta bilete frå eit bakum/prøver i eit vakum, som tyder ingen lebende organismer kan brukest som prøve.\n\nDet er hovudsakelig to typer elektronmikroskopi:\n* Det er skanningelektronmikroskopi (SEM) som går frem og tilbake for å lage bilete.\n* Den andre metoden er transmisjons-elektronmikroskopi (TEM). Denne metoden kutter opp for det tar bilete, og det går igjennom. Det kan gi bileter av innsiden til celler.\n\n\nEit elektronmikroskop ser slik ut:\n\n![250](https://ing.dk/sites/ing/files/styles/w1120_media_right/public/images/12748.jpg)","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Enigma-maskinen":{"title":"","content":"# Engima maskinen\n\nEngima maskinen er ein maskin som automatiserer [[One time pad.]] innanfor [[Kryptografi.]] og var lagt av Nazistene under andre verdskrig for å skape ein nesten umogleg å bryte enkryptering.\n\nEnigma maskinen er basert på nokre viktige konsepter innanfor kryptografi, nemleg det med å skjule fingeravtrykk gjennom frekvens grafen, og det med å skape svært mange ulike moglege keys.\n\nAlle dei ulike moglege keysene som kan vere svaret blir kalt for \"*key space*\", og alle dei ulike keysene i dette key spacet kaller vi for ein \"*key setting*\". \nDet nazistene gjorde var å prøve å maksimisere størrelsen til dette key space-t slik at det var nesten umogleg å finne ut kva keyen var, før dei berre skiftet den, og beskjedene var utdaterte.\n\n## Korleis maskinen fungerte.\n\n### Rotor maskiner.\n\n**IKKJE FERDIG.**\n\n\n## Problemet.\nEin kunne kanskje ha trudd at det hadde vore ganske lett å finne ut kva keyen var, men det som er tingen at\n\n\n## Løysingen.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Entydige-funksjoner":{"title":"","content":"# Eintydige funksjoner\n\nEintydige funksjoner er funksjoner med berre kan ein 1 y verdi for kvar x verdi og ein x verdi for kvar y verdi.\n\nAlle eintydige funksjoner har òg faktumet at er alltid vaksenede eller minskenede, dette er fordi dersom det har eit punkt som er 0 så vil det bety at grafen er ein partalls-grad graf som alltid har 2  y verdier for kvar x verdi.\n[[Polynom grafer]], [[Polynom terminologi]], [[Polynom faktorisering]].\n\nDenne funksjonen er entydig:\n```desmos-graph\ny=x\n```\n\n\nDenne funksjonen er ikkje entydig:\n```desmos-graph\n\n\ny=x^2\n\n```\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Enzymer":{"title":"","content":"# Enzymer\n[[Proteiner og aminosyrer.]]\n\nEnzymer er biologiske [[Katalysatorer.]]. \nEnzymer kan ha ioner, dytte på struktur, vere basisk/syrisk, etc…\nDei har i andre ord egenskaper som auker sjansen for at ein reaksjon mellom to ulike stoffer reagerer, og dermed minsker [[Aktiverings energi.]] som er krevd, eventuellt faktisk auke den.\nNår den påvirker aktiveringsenergien som er krevd vil stoffene ha ein større sjanse for å reagere og gi vår ønsket stoff.\n\nEnzymer pleier å vere [[Proteiner og aminosyrer.|protein komplekser]]. Reaktantene som fester seg til enzymet heiter \"substratene\". Enzymer er mykje større enn substratene. Området som dei ulike substratene er festet til heiter \"det aktive området\".  For at reaksjonen sin sannsynlighet skal auke kan eit enzyme bøye seg for å omringe substratene slik at ligger meir i ro og dermed oppfordrar reaksjonen, dette blir kalt for indusert passform i enzymer. \n\nEnzymer som andre stoff har eit optimale kondisjonser som gjer at dersom det er for shitty kondisjoner kan enzymene faktisk for miste sin struktur, og dermed mister sin funksjon.\n\nEnzymer kan òg gjere dette fleire ganger i sin livstid, dei kan gjere dette (hjelpe å skifte minimum krav av aktiveringsenergiet i ein reaksjo) fleire gonger i sin livstid.\n\nHer er eit bilete av ein enzyme: (SVÆRT ENKEL EIN, DEI KAN BLI GIGA STORE I FORHOLD TIL DENNE).\n![](https://www.researchgate.net/profile/A-El-Hoshoudy/publication/336603100/figure/fig1/AS:814858496929793@1571288813469/3D-structure-of-the-enzyme.png)\n\n\n\n\u003e[!INFO] NESTEN ALLTID:\n\u003eNesten alltid vil eit enzyme gjere akitveringsenergien krevd å vere lavere enn originalt, men viss den er til dømes øydelagt kan den auke den. Eller viss vi snakker om eit unntak så kan den auke den. \n\n\n## Ulike faktorer. \nDet er mange ulike faktorer som påverkar effektiviten til eit enzyme. Dette er ting som [[pH, syrer og baser.#pH|pH]], temperatur, og konsentrasjon av mengden enzymer.\n\nViss enzymet sine faktorer er sub-optimale kan enzymet miste dens evne til å binde seg til ein substrate, som gjer at den er bortkastet egentelig. \n\nHer er nokre av dei mange faktorene som forandrer effektiviteten til ein enzyme:\n* Temperatur.\n\t* Generelt vil høgere temperatur auke sjansen for at ein reaksjon skjer, og lavere vil generelt gjere at den har mindre sjanse. MEN ein altfor høg temperatur gjer at enzymet kan miste formen (denaturere) og gjere at den ikkje fungerer.\n* pH.\n\t* Eit enzyme har generelt eit optimalt pH verdi. Viss pH verdien ikkje er optimal vil det sakke ned enzyme aktiviteten. Ekstreme pH verdier vil gjere at den ikkje fungerer i det heile (denaturere).\n* Enzyme konsentrasjon.\n\t* Viss det svært mangen enzymer vil det overskuddet av enzymer ikkje ha nokon substrater å feste seg til. Normalt vil ein auking i enzymer gjere at reaksjon skjer raskere. Men altfor mange gjer at alle kan bli bindet til, og ikkje alle får ein reaksjon.\n* Substrate konsentrasjon.\n\t* Ein auking i substrate konsentrasjonen gjer òg at det vil skje ha ein høgere reaksjonsrate. Men etter ein stund vil alle enzymene være fulle og jobbe på dens maksimale enzyme rate. Deretter vil overskuddet av substratene ikkje ha ein enzyme å feste seg til. \n\n\n\n## Viktig additional information.\n* Alle enzymer er spesifikke. Kvar type enzyme som oftast vil berre kunne feste seg til ein eller nokre ulike substrater. Fordi deirast effekt skal berre hjelpe ein spesifikk eller nokre få ulike reaksjoner. Nokre enzymer sjølvsagt tar i mot fleire substrater enn andre men dei pleier å vere ganske spesifikke på kva dei tar inn.\n\t* Ein kan tenke på eit enzyme slik:\n\t* ![](https://cdn.kastatic.org/ka-perseus-images/8f13262d58441ba2c0df8ae6c206215004253ffe.png)\n\n* Enzymer er gjenbrukbare. Dette betyr simpelt sagt at enzymer ikkje er reaktanter i ein reaksjon, det einaste dei gjer er å auke sjansen for ein reaksjon. Når den reaksjonen er ferdig vil strukturen til enzymet gå tilbake til den originale og vere uforandret. (Ein substrate er festet gjennom ein binding som midlertidig forandrer strukturen til enzymet).\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/F%C3%B8rste-derivasjonsregel.":{"title":"","content":"### Derivasjons regelen 1.\nDette er kanskje den letteste emtoden for å finne den deriverte funksjonen. \nOg fungerer med alle funksjoner, viss vi har koeffisienter må vi multiplisere dette med $n$ som blir dratt ned foran $x$. Derivasjonsregelen er ein enkel regel som viser den deriverte funksjonen med oppgitt original funksjon. \nDen går på å følge metoden med alle [[Polynom terminologi#Term ledd|termene]], og då får ein svaret til den deriverte funksjonen. \n\nMetode:\n$f(x)=x^n \\rightarrow f'(x)=nx^{n-1}$\n\nEksempel:\n$f(x)=x^3$ \n$\\rightarrow f'(x)=3x^2$\n\n$f(x)=x^3+x^2$\n$\\rightarrow f'(x)=3x^2+2x^1$\n$\\rightarrow f'(x)=3x^2+2x$\n\n\n## Derivasjonsregel - videreutvikla.\n### Derivasjons regelen med polynomer 2.\nNår vi har ein polynom som består av to adderte funksjoner vil den deriverte av dette polynomet vere lik av dei to ulike funksjonene sine [[Derivanter#^a349ff|deriverte funksjonen]] addert. Likt er det viss det er subtraksjon, då det er funksjonene sine deriverte funskjoner subtrahert i frå kvarandre.\n\nOppsett:\nAddisjon:\n1. $\\huge (u(x)+v(x))' = u'(x)+v'(x)$\n Subtraksjon:\n2. $\\huge (u(x)-v(x)) = u'(x)-v'(x)$ \n\n\n\nNår polynomet berre består av ein koeffesient (her $a$) og ein funksjon, trenger vi berre å finne den deriverte av funksjonen og overse koeffisienten heilt til slutte,\nvi drar ut den deriverte funksjonen og multipliserer med koeffisienten.\nP.S koeffisienten kan også innehalde variabler, det trenger ikkje å berre vere [[Polynom terminologi#Konstant-term ledd 0 grad monomer|0 grade monomer/konstantledd/normale tall]]!\n\nOppsett:\n$\\huge (a \\times v(x))' = a \\times v'(x)$\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fagocytter":{"title":"","content":"[[Introduksjon til eukaryote celler.]].\n\nFagocytter er spiseceller som hjelper å bryte ned unøsket celler gjennom [[Immunforsvaret.|fagocytose]] prosessen. Dette skjer gjennom å igjenkjenne stoffer gjennom stoff på  overflaten.\nDette skjer ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fart":{"title":"","content":"# Fart.\n\nFart er ganske likt som [[Hastighet]] men er ganske forskjellig på nøyaktig eit punkt, det med at fart er ein [[Skalarar|skalar]] og **ikkje** ein [[Vektorer|vektor]].\n\nFart har altså ikkje ein retning den går i, den viser den farten som objektet beveger seg i, ikkje kva retning den har. Viss vi sjekker farten til eit objekt når den beveger seg finner vi den farten den beveger seg i under reisen. Dette er nøyaktig i motsetning til hastighet som berre går direkte til slutten frå starten. \nNår vi skal finne den generelle farten så tar vi å addere alle dei ulike fartene over tidsperioden og dividerer dei på tidsperioden. \n\nSymbolet til fart er $V_{avg} = V_{gjennomsnitt}$.\n\nFart har ein SI enhet av $m/s = \\frac{m}{s}$.\n\nFart er det samme som den totale distansen bevegt dividert på tiden brukt:\n$V_{avg}=\\frac{d}{\\Delta t}, d=distanse$.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Faser-av-menneske-utvikling.":{"title":"","content":"# Ulike faser av menneske utvikling.\nEin videreutvikling av: [[Befruktning og utvikling - Seksuell reproduksjon.]]\n\n\nLes om dette først:\n[[DNA]]\n[[Kromosomer, Kromatider, Kromatiner.]]\n[[Ulike typer reproduksjon.]]\n[[Introduksjon til cellen.]]\n[[Introduksjon til eukaryote celler.]]\n\n\nNøkkelord:\n1. Gameter.\n\t1. ein reproduktiv celle (sex): sperm, egg, pollen.\n2. Befruktning.\n\t1. Prosessen i seksuell reproduksjon der ein hukjønn gamet og hankjønngamet smelter sammen til ein ny celle.\n3. Diploid (2n)\n\t1. Ein celle som inneholder sett av to [[Kromosomer, Kromatider, Kromatiner.#Homologe kromosomer|homologe kromosompar]]. \n4. Haploid (n).\n\t1. Ein celle som inneholder eit sett av genetisk informasjon, ingen homologe kromosompar. \n5. [[Apoptose]].\n\t1. Programmert celle daud.\n6. [[Befruktning og utvikling - Seksuell reproduksjon.|Diffensiering]]\n\t1. Prossesen av celler som spesialiserer seg : struktur og funksjon.\n\nMenneskelig befruktning og utvikling:\nBefruktning erprosessen der haploide gameter smelter sammen til å forme diploide celler, kalt \"*zygoter*\".\nFor å sikre at ein zygote har korrekte mengder [[Kromosomer, Kromatider, Kromatiner.|kromosomer]] kan berre ein [[Grunnleggende celleteori.#Litt historie|sperm celle]] befrukte eit eggcelle.\n\n\nMenneske utvikling kan ein oppsummere ganske kort i nokre ulike stadier.\n1. Zygotisk stadiet. \n\t1. Zygoten er formet når hankjønn og hokjønn gameten smelter sammen. Zygote er den tidlegaste stadien (tingen blir kalt for ein *zygote*), dette er før cellen begynner å dividere seg\n2. *Blastocyst* stadiet.\n\t1. Den einecellde zygoten begynner å dividere seg inn i ein ball av celler, denne ballen blir kalt for ein *blastocyst*. Denne ballen er òg hull på innsidne, denne fester seg til morens livmor.\n3. Embryonal stadiet.\n\t1. Dei største indre organnene og usidige egenskapene begynner å bli skapt,","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Finne-side-verdier-gjennom-trigonometri.":{"title":"","content":"# Finne side verdier gjennom trigonometri.\n\n##  Rettvinklet trekanter.\nI rettvinklet trekanter kan vi ta i bruk den simple pytagoras setningen som er som følgende\n$hypotenus^2=a^2+b^2$. Vi kan omformulere den funksjonen til å finne kvar einaste side, men dette er berre viss trekanten er rettvinklet da.\n\n## Ikkje rettvinklet trekanter.\nVi tar i bruk [[Cosinus setningen]] sjølvsagt!\nViss vi har den vinkelen som er motsatt av siden vi ønsker å finne kan vi bruke cosinus setningen, egt. så lenge vi har entens sinus verdien eller cosinusverdien til denne vinkelen kan vi bruke cosinussetningen. Dette er fordi vi kan ta i bruk [[Pythagoras identiteten.]] for å finne cosinus verdien viss vi ha sinusverdien. Likt kan vi òg bruke dei andre sinusverdiene og nokre av sidene sine verider og så bruke [[Pythagoras identiteten.]] fordi vi kan bruke [[Sinus setningen]] først til å finne denne siden sin sinusverdi!\nDet er simpelt sagt berre å ta i bruk dei ulike setningene vi kan og dei ulike forhalda slik at til slutt kan bruke cosinussetningen. Eventuellt kan vi òg prøve å dele opp trekanten slik at vi har ein rettvinklet trekant der siden som vi leiter etter er framleis likelang. Dette er ganske vanskeleg og høyt usannsynneleg at er ein moglegheit å gjere men det er noko å huske. Det viktigste er at vi kan bruke dei ulike setningene slik at vi kan finne siden.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fjerde-Derivasjonsregel-Kjerneregel.":{"title":"","content":"\nLa $f(x)$ være ein sammenslått funksjon med $g$ som ytre funksjon og $u(x)$ som indre funksjon vil dermed den deriverte vere slik:\n\nMest korrekt\n$f(x)=g(u(x))\\rightarrow g'(u(x))*u'(x)$.\n\n**Lettast  huske**\nAltså $\\huge f(x)=f(u)\\rightarrow f'(x)=f'(u)*u'$\n\n\n\nEksempel:\n\n\n$f(x)=(2x-5)^5$\nLa $2x-5=u$\n\n$u'=2$\n\n$f(x)=u^5$\n$f'(x)=f'(u)*u'$\n$f'(x)=5*(2x-5)^{5-1}*(2x-5)'$\n$f'(x)=5(2x-5)^4*2$\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Flimmerh%C3%A5r-flageller-og-psuedopoder.":{"title":"","content":"\n# Introduksjon til flimmerhår, flageller, og psuedopioder.\n\nAlt dette er noko som er spesielt for [[Introduksjon til cellen.|celler]], dei er små varianter som kan hjelpe cellen. Dei er ikkje organeller.\nBåde [[Introduksjon til eukaryote celler.|eukaryoter]] og [[Prokaryote celler.|prokaryoter]] kan ha disse egenskapene.\n## Psuedopodier.\nPsuedopodier er midletidige utløpere av cellens cytoplasma hos mange encellede eukaryote organismer, særlig amøber. \"Podier\" i frå ord betyr \"fot\" og ligner egentelig litt på ein fot. Celler er ikkje berre klumper væske med ting inni, dei er svært komplekse og kan ha ulike strukturer.\nPsuedopodier kan hjelpe organisme å \"kravla\", slik at den kan bevege seg.\n\n\nPsuedopodie illustrasjon:\n![](http://2.bp.blogspot.com/_FeaU01D-3wI/SRKatmc77sI/AAAAAAAAAQk/DNR5B652saI/w1200-h630-p-k-no-nu/ChaosCarolinensis.jpg)\n\n## Flimmerhår.\nFlimmerhår blir brukt til å bevege ting rundt, som til dømes: seg sjølv. Nokre celler har faktiskt fleire cellekjernene, som til dømes: oxytricha trifallax. Mennesker har 23 krosomer, denne cella kan ha fleire tusen kromosomer. Denne cellen reproduserer med andre av samme celletype, og deler og skrifter DNA strukturen til kvarandre i løper av produksjonen. Det finst to typer flimmerhår, det er cilier, og det er flaggeler. Cilier er korte og mange av i mens flaggeler pleier å vere lange og vere relativt få i forhold til cilier.\n\n\nFlimmerhår illustrasjon (Cilier er ein form for flimmerhår, og på engelsk er cilier skrive Cilia):\n![500](https://study.com/cimages/multimages/16/ciliacells.png)\n\n## Flaggel\nNokre celler har òg det som liknar på ein hale. Dette er ein flagell (flair tall: flageller). Denne tillater den å bevege seg.  Celler er som sagt ganske komplekse. Flaggeller er ein type form av flimmerhår.\n\nEin illutrasjon av ein flaggel (Flagella er engelsk for flaggel):\n![](https://thumbs.dreamstime.com/b/illustration-bacterial-cell-structure-shows-wall-membranes-plasmid-dna-flagellum-bacteria-225673927.jpg)\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Flytende-mosaikk-modell.":{"title":"","content":"# Flytende mosaikk modell.\n\nDen nåværende aksepterte modellen for strukturen av [[Introduksjon til cellemembranen|cellemembranen]] er kalt den flytendemosaikkmodell.\n\n## Litt historie.\nDen flytendemosaikkmodellen var først foreslagt i 1972. Modellen har utviklet seg utover årene men er framleis ganske presis, og halder nært til den originiale modellen.\n\n## Komponenter.\nI følgde denne modellen er plasmamembranen eit nærmast mosaikk av ulike komponenter: hovudsakeleg [[Lipider.|fosfolilipider, kolesterol]], og [[Proteiner og aminosyrer.|proteiner]]. Disse komponentene flyter og beveger seg fritt. Diagrammer av ein plasmamembran viser altså berre eit stillebilete av ein dynamisk prosess av bevegende fosfolilipider, proteiner, kolesterol og meir. Dette betyr òg at viss du tar ein nål i ein plasmamembran så lager den plass for nålen og etterpå tar opp rommet der nålen var.\n\n\nDette er den flytende mosaikkmodellen:\n\n![](https://media.snl.no/media/130033/standard_Cellemembran.png)\n\n\n## In depth.\n\nDei [[Unike egenskaper av vatn.|hydrofile]] sidene av fosfolilipid bilaget vil tiltrekke vatnet, og dei hydrofobiske sidene vil ligge mot kvarandre for å unngå vatnet.\n\nDeter mykje som kan ligge på/i cellemembranen, til dømes:proteiner, og kolestorol. Det er slags mosaikk.\n\n[[Lipider.|glykolipider]] har ein hydrofobisk side som ligger i cellemembranen og  ein [[Karbohydrater.|sukkerside]] som er hydrofil og ligger utover. Dette bruker immunsystemet til å vite kva celler er frå min eigen kropp, og kva som ikkje er. Til dømes: glykolipider har ein del å si i blodtype.\n\n\u003e[!INFO] Amfipatisk.\n\u003eAmfipatisk betyr at ein side er hydrofil, og ein anna side av hydrofobisk at molekylet.\n\nFosfolilipid bilaget kan oppstå lenge før celle liv oppstod. \n\n\nKolesterol ligger inni cellemembranen, nokre proteiner som har ein hydrofobisk side kan ligge halvveis inni cellemembranen, i mens andre kan ligge gjennom heile. Dei som ligger halveis er intregral membranproteiner, i mens dei som er igjennom heiter transmembrane proteiner. Nokre proteiner ligger og svever utenfor overflatene til membranen, disse heiter periferte membranproteiner. Glykolipider har fettsyre haler som ligger innover i cellemembranen.\n\nSom vi veit i frå [[Lipider.|fosfolilipider]] så har dei ein hydrofil polarhodegruppe, og to hydrofobiske fettsyre haler. Halene er ikkje løslig i vatn fordi dei har ingen ladning/polaritet. Derimot har hodene det, og vil dermed tiltrekke seg til vatnet.\n\n\nSlik ser fosfolilipder ut: (**På svensk**):\n![](http://www.chem.umu.se/staff/lars.backman/course/img/lipid/general-phospholipid.png)\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fordelt-forskrift.":{"title":"","content":"[[Polynom grafer]]\nDersom ein funksjon har fordelt forskrift betyr det at den er definerte ulikt for ulike verdier av $x$. For eksempel dersom x er lavere enn 1 så er det y=x, og ellers y=2x. \n\nDette skrivest slik:\n![[Pasted image 20221129091514.png]]\n\n## Derivasjon med fordelt forskrift.\n\nNår vi deriverer med ein fordelt forskift funksjon trenger vi berre å derivere alle dei ulike definisjonene og huske dei ulike definisjonsmengdene for dei ulike definsisjonen i den deriverte funksjonen.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Forksyvning-og-refleksjon-av-funksjoner.":{"title":"","content":"# Transformering av funksjoner.\n## Forskyvning\n### Forskyvning høgre og ventre.\n\nNår vi driver med ein forskyvning av ein funksjon kan vi ganske lett gjere dette. Det ein må huske er at når vi forskyver så er det egenteleg berre ein forandring av $x$ verdiene i [[Polynom terminologi#Term ledd|termene]]. Dette i andre ord tyder at det einaste vi trenger for å forskyve ein graf høgre eller venstere er å settje ein konstant ledd inn i $x$ verdien ved siden av slik:\n$x^2$\nvi flytter den 5 til venstre.\n$(x+5)^2=x^2+10x+25$\nDenne funksjonen til høgre er nøyaktig det samme som $x^2$ berre forskyvet 5 til venstre.\nHusk at når vi adderer 5 så går den til vesntre fordi $-5+5=0$ og vi får samme startpunkts som når vi bruker $x^2=0^2$. Vi har berre forflyttet den.\n\n### Forskyving opp og ned.\n\nDet einaste vi trenger å gjere viss vi skal forskyve ein graf opp eller nedover er å introdusere eit ekstra konstant ledd på slutten av heile funksjonen til dømes:\n$x^2$, vi vil hade den fem oppover.\n$x^2+5$. Den er forskyvet fem oppover.\n\n\n\n### Kombinering av høgre og venstre \u0026 opp og ned.\n\nDet generelle oppsettet til ein forskyvning kan bli forklart slik\n$f(x+a)+b$, for ein alla anna funksjon av $f$ der $a$ er ein forskyvning i $x$, og $b$ er ein forskyvning i $y$ akse.\n\nViss vi ser på eit døme kan kanksje betre forstå kompleksiteten.\n$x^2$, vi forskyver 5 til høgre og 5 oppover.\n$(x-5)^2+5$. Her er $f(x)=x^2$\nFunksjonen ser slik ut til slutt:\n\n$x^2-10x+30$. Vi har forskyvet $x^2$ her, men den ser ganske ulik ut!\n\n\n```desmos-graph\ntop=20;\n---\ny=x^2\ny=x^2-10x+30\n```\n\nDen blåe er $x^2$ og den grønne er $(x-5)^2+5$.\n\n\n\n## Reflektere ein graf.\n### Reflekte under og over $x$ aksen.\nViss vi flippe ein graf rundt dei ulike aksene kan vi bruke litt sunn fornuft for å gjere dette. \nViss vi har ein funksjon til dømes $f(x)=x^2$, denne vil alltid gi positive svar. Viss vi derimot vil ha ein graf som er heilt likt som denne men vi vil ha negative svar då multipliserer vi berre heile $f(x)$ med $(-1)$ slik :\n$(-1)f(x)=-1(x^2)$\nDette vil gjere at grafen blir reflektert under $x$ aksen.\n\n```desmos-graph\ny=x^2\ny=-1(x^2)\n```\n\nDenne grønne er $-1(x^2)$, og den blåe er $x^2$.\n\n\n\u003e[!INFO] Sidenotat.\n\u003eNoko som grenser mot ulovlig matematikk og det er litt diskusjon om det faktisk er lovleg eller ikkje er det ved å settje $\\pm$ som eit forteikn dette gjer at vi får både det negative svaret og det positive som gjer at vi har ein funksjon som har ein graf som er reflektert på begge sidene av $x$ aksen. Dei aller fleste grafkalkulatorene aka. program som Geogebra vil gi svar at dette ikkje går, men det er nokre som tillater.\n\n### Reflekere rundt $y$ aksen.\nViss vi ønsker å rotere rundt $y$ aksen så er det ein ting vi kan gjere for å reflektere den. Og det er å settje ein $-1$ foran alle $x$ verdiene slik at når $x$ er negativ vil den faktisk vere positiv. Dette gjer at funksjonen blir reflektert. Vi kan dermed reflektere $f(x)=\\sqrt(x)$ ved å bruke funkjsonen $g(x)=f(-x)\\rightarrow \\sqrt -x$. Som vi veit er berre $\\sqrt x$ definert for positive verdier av $x$ så når $x$ er negativ og den har eit negativ forteikn, $(-)(-)=(+)$ vi får vår graf reflektert.\n\nNår vi settjer dette inn i ein graf ser den slik ut:\n```desmos-graph\nleft=-20;\n---\ny=\\sqrt{-x}\ny=\\sqrt{x}\n```\n \nBlå er den reflekterte.\nGrønn er den originale.\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fotosyntesen":{"title":"","content":" # Fotosyntesen\n\n[[Kloroplast.]] [[ATP]] [[Karbohydrater.]] \n\n## Generelt oversett.\nFotosyntesen er ein prosess som omdanner lysenergi over til kjemisk energi i form av [[Karbohydrater.]]. Denne prosessen skaper og bruker både [[ATP]] og NADPH, delt inn i to ulike deler. Denne reaksjonen skjer i [[Kloroplast.]], den overalle prosessen ser slik ut $6CO_2+6H_2O + \\textit{lysenergi}\\rightarrow C_6H_{12}O_6+6O_2$.\n(Vi ser ikkje ATP og NADPH fordi dei blir skapt og rett etterpå blir brukt). Vi kan dermed si at reaksjonen omdanner lysenergi over til ein kjemisk energi form (sakkaridene). Dette sakkaridet blir kalt \"glukose\" og er eit monosakkarid.\nDenne reaksjonen er nødvendig for at liv skal eksistere på jordkloden, der er dette [[Dyreceller og planteceller.|planteceller]] får sin opprinnelige energi i frå. Alt liv er dermed avhengig av denne reaksjonen.\n\n\n## Dei ulike delene av fotosyntesen.\nSom oftast i biologi er ting mykje meir komplisert enn originalt trudd. For fotosyntesen er nemleg delt inn i fleire ulike deler, vi har to ulike hovuddeler.\n\n### Lysavhengige reaksjoner.\nDei lysavhengige reaksjonene er avhengig som sagt avhengig av lys for at reaksjonen skal skje, utan lys ville ikkje [[Aktiverings energi.]]-en nokon gang bli nådd. \nDisse reaksjonene skjer i [[Kloroplast.|thylakoidene]],  der klorfyllet er lokalisert, her i thylakoidene sine [[Strukturen til cellemembranen.|plasmamembranene]] skjer ein reaksjon som krever sollys, og $H_2O$ får å skape to ulike energilagere stoffer nemleg [[ATP]] og NADPH, i tillegg blir det skapt $O_2$ det er her vi får oksygengassen vår som vi er avhengig av for å puste og leve.\n\nEtterpå blir disse energilagrestoffene om til sakkarider i calvin syklusen.\n\n### Calvin syklusen.\nSkjer i Stroma av kloroplastet.\nCalvin syklusen er den andre delen av fotosyntesen som er ansvarleg for å skape sakkaridet $C_6H_{12}O_6$. Her blir ATP-en og NADPH-en i frå dei lysavhengige reaksjonene sin energi til å omdanne $CO_2$ og nokre av atomene i frå ATP og NADPH over til $C_6H_{12}O_6$, dette seinare blir brukt i [[Mitokondria]] i plantecellen til å skape [[ATP]] igjen som kan bli brukt til cellen. Grunnen til at vi ikkje direkte berrre settjer ut ATP-et og NADPH-et er fordi at viss den totale syklusen skal kunne gå om så må det vere ADP, NADP$^+$, P$_i$ til å skape dei opprinnelige $ATP$ og $NADPH$ i dei lysavhengige reaksjonene. Det er nemleg ein total syklus som er avhengig av energi for å skape energi!\n\nI know litt confusing. Men viss du ser på diagrammet under gir det kanskje litt meir mening.\n\nSlik kan vi visualisere heile fotosyntesen.\n![](https://cdn.kastatic.org/ka-perseus-images/5930e9beeb1f249887903979a979705b80975b34.png)\n\n\n\u003e[!INFO] Info.\n\u003eDen motsatte prosessen skjer i [[Mitokondria]] og heiter [[Cellulær respirasjon.]] og det ser slik energien som blir lagret i $C_6H_{12}O_6$ blir over til brukbar energi for cellen..    \n\u003ePlanter er grønne fordi klorofyllet reflekterer det grønne lysbølgene. Dette er til det gode for plantecellen sin evne for å fange sollys energi.\n\u003e\n\n\n\n\n\n## PS.\n\u003ciframe width=\"850\" height=\"678\" src=\"https://www.youtube.com/embed/lO5sCAXNBp8\" title=\"Fotosíntesis meme Tom Holland 1 hora\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fr%C3%A5-bin%C3%A6r-til-tekst.":{"title":"","content":"Ulike enkoderingssystemer, UTF-8, ANSI, ASCII.\n\nUnicode ASCII, har 0 til 127 i verdier.\nDersom får tallet 32 i binær skaper den mellomrom.\n128 ulike teikn er ikkje mange ulike teikn. \nTIl dømes: ÆØÅ fungerer ikkje i UTF\n\nEtter ASCII kom ANSI som var 0 til 256 verdier,\nfor eksempel ÆØÅ. Her var det ulike språkvarianter, der ulike språk hadde ulike ANSI versjoner. \n[[Bits og Bytes.]]\n\nEtter ANSI kom UTF-8, altså\nUNICODE står for Universal Coded Character set, transformation format 8 bit. Dette viser til at det var universiellt og fungerer på nesten alle ting. I dag er det meir normalt å bruke UTF-16 som standard.\n\nGlyf er den visuelle representasjonen av eit teikn.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Free-body-diagram-Fritt-objektkroppslegeme-diagram.":{"title":"","content":"# Free body diagram.\n\nFritt kroppsdiagramm (Fritt objekt/legeme diagramm) er ein metode for å visualisere korleis eit objekt har krefter som påvirker den og kva retninger den blir påvirket. (Retningene på kreftene). \n\nVi pleier å teikne ein prikk der objektet er i kontakt med ulike overflater og teikner dei ulik kreftene som påvirker den ved den overflaten, vi teikner disse kreften i frå prikken som piler, pilene skal vere relativt slik at kreftene sine Newtons er representert gjennom størrelsen på pilen.\n\nLikt skal det alltid teiknast ein gravitets/vekt pil dersom den er på ein jordklode eller liknande.\n\nVed siden av pilene skal det visest kraften på den kraften, altså kor mange Newton  i tillegg til ein namngivning ($F_1=10N$ til dømes) \n\nUtenfor diagrammet skal det visest kva som er akselerasjonen til objektet.\n\nViss objektet ligger skrått skal kreftene ligge i samme retning som den. Vi altså forskyver kreftene slik at dei ligger korrekt.\n\nHer er eit free body diagram, utan alle delene, og verdiene.\n![](https://cdn.kastatic.org/ka-perseus-images/5fd40faa642a90745beb156a86e1f419cf8856ce.png)\n\n\n\n## Korleis lage eit fritt kroppsdiagramm steg for steg.\n\n1. Start med å identifisere kontakt kreftene. La oss sjå på kva objektet er i kontakt med. Teikn ein prikk der det er kontakt. Der det er ein prikk er det minst 1 kontakt kraft .Teikn piler i retningene til kreftene, og namngi kreftene.\n2. Etter vi har identifisert kreftene teikn ein prikk for objektet, vi vil bare ha ein prikk for objektet i fokus.\n3. Teikn eit kordinat system, og namngi dei positive retningene viss objektet er på skrå, så tilpasse aksene med skråen.\n4. Teikn og namngi dei langdistanse kreftene. Dette pleier berre å vere gravitet ($F_g$) viss ikkje det er noko anna langdistansekrefter som magnetisme involvert.\n5. Teikn og namngi akselerasjones vektoren av til siden av prikkken. Viss det er ingen akselerasjon skriv $a=0$.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Free-body-diagram-medvinklet-krefter.":{"title":"","content":"# Free body diagram - med vinklet krefter.\n[[Free body diagram - Fritt objekt,kropps,legeme diagram.]] [[Vektorer, to dimesjoner.]] [[Newtons tredje lov]]\n\n\nNår vi holder på med free body diagram som inneholder vinklet krefter trenger vi berre å huske tre ulike ting, vi må huske korleis vi kan finne dei ulike vektorkomponentene gjennom simpel trigometri, og ikkje minst vår tredje lov i frå Newtons. Her er ein liten oppfriskning på disse temaene.\nViss vi skal finne dei ulike vektor komponetene på ein vektor, noko som krefter er, kan vi berre bruke vektoren sin mengde som hypotenusen, og bruke $sin$ og $cos$.\n\nHer er eit døme.\n![[Vektorer, to dimesjoner. 2022-07-08 19.27.13.excalidraw]]\n\n\nDet neste vi må gjere er å settje opp vårt free body diagram der vin bruker dei ulike vektor komponentene i staden for den originale vinklet vektoren slik at vi får ein betre utsjåande graf som vi kan lettere finne våre normale verdier til, normale verdier er berre [[Newtons tredje lov]].\n\nLa oss sjå til eit døme: (ER LITT USIKKER OM NOKO ER FEIL HER).\nKAN VERE NOKO SOM NORMALE KREFTER TIL BAKKEN.\n![[Free body diagram  - medvinklet krefter. 2022-07-14 19.09.11.excalidraw]]\n\nVi har ein normal kraft i frå vår vinklet kraft som går oppover, og ein kraft som går rett nedover. Og så har vi ein  som går til høgre, men den går ikkje inn i noko objekt så den har ikkje ein normalt kraft.\nVi har òg gravitet, og som vi veit i frå [[Newtons tredje lov]] betyr dette at vår Objekt A blir påvirket, og jordkloden J blir påvirket. Det er ikkje ein normal kraft som blir forårsaket av jordkloden sin gravitet. Når to objekt kolliderer er det ikkje ein normal kraft til staden. \n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Frekvens-stabilitet-egenskap":{"title":"","content":"# Frekvens stabilitet egenskap.\nDersom vi ønsker ein perfekt avrundet frekvens graf når det kjemer til [[Kryptografi.]] så er det nødvendig at tallene er heilt tilfeldige. \n\nDette er fordi mennesker er ikkje tilfeldige, vi anser noko som meir tilfeldig enn andre ting, likevel dei har like store sjanser for å skje. Dette skaper ein effekt som gjer at det vi trur er tilfeldig er faktisk ganske forventbar. Derfor er det nødvendig at vi har ein perfekt tilfeldighet for å skape ein frekvens graf som er heilt flat.\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Fremmede-l%C3%B8ysningar.":{"title":"","content":"# Fremmede løysingar.\nNår vi rekner ut ein likning kan vi ofte møte eit svar som er fremmed, at det er fremmed tyder til at det er ein løysing som er egentelig ein løysing til eit steg under prosessen til når vi rekner ut den originale likningen, men løysingen teller ikkje for den originale likningen.\nSimpelt sagt: løysing som fungerer berre til eit steg under utrekning.\n\n\n## Nokre dømer på fremmede løysingar.\n$\\sqrt x=2x-6$\n$x=(2x-6)^2$\n$x=(2x-6)(2x-6)$\n$x=4x^2-24x-36$\n$0=4x^2-25x-36$\nVi tar i bruk [[Polynom faktorisering#ABC Formel Kvadratiske formel|ABC formelen]]. \n$A=4, B=-25,C=-36$\n$\\frac{-(-25)\\pm \\sqrt{(-25)^2-4\\times4\\times-36}}{2\\times 4}$\n$\\frac{25\\pm \\sqrt{625-576}}{8}$\n$\\frac{25\\pm \\sqrt{49}}{8}$\n$\\frac{25\\pm7}{8}$\n$x=\\frac{32}{8}\\rightarrow x= 4$\n$x=\\frac{18}{8}\\rightarrow 2.25$\n$\\sqrt 4 = 2\\times4-6 \\rightarrow 2=2$\n$\\sqrt 2.25 \\ne 2.25\\times4-6\\rightarrow 1.5 \\ne -1.5$\nBerre 4 er eit gyldig svar,\n2.25 er eit fremmedsvar.\n\n## Kvifor fremmede løysingar kan oppstå.\nSom vi såg på dømet ovenfor kan det oppstå fremmedesvar når vi rekner ut, dette er fordi svaret henger svært nærme den originale funksjonen, men ofte er forskjellig på grunn av eit forteikn eller noko likt.\n\nI dømet ovenfor halder $2.25$ sann viss problemet hadde vore $\\pm \\sqrt x = 2x-6$, men den teller berre for positive verdier av $\\sqrt x$ som gjer at den ikkje er korrekt.\n\n\n\u003e[!WARNING] HUSK Å SJEKK SVAR:\n\u003eEin kan ofte gi eit fremmedsvar som finalesvaret når ein ikkje tenker grundig over, og ikkje sjekker $x$ svarene med den originale likningen.\n\u003eDet er **alltid** smart å dobbelsjekke svarene dine før du runder av oppgåven.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Geometriske-serier":{"title":"","content":"# Geometriske serier.\n\n## Kva er geometriske serier?\n\nEin geometrisk serie, også kjent som ein geometrisk rekke, er ein sum av ein rekke med tall, som vekser per ledd med ein konstant faktor. (Geometriske serier kan også bestå av subtraksjoner, då er konstantfaktoren negativt!) For å få ein øking per [[Polynom terminologi#Term ledd|ledd]] med ein [[Polynom terminologi#Faktorer|faktor]], blir faktoren i opphøgd til $n-1$ verdi. Det blir $n-1$ fordi vi starter ikkje med 1 i første ledd, det første leddets skal ikkje ha ein faktor verdi!  \n\nGeometriske serier har normalt dette oppsettet:\n$ar^0+ar^1+ar^2+ar^3 \\dots \\space ar^{n-1}$ \n\n\nHer er $r$ faktoren som blir ganget med.\nOg $a$ er startverdien. \n\nGeometriske serier kan bli skrivet med bruken av Sigma:\n$\\large \\sum_{n=0}^{length} A(Factor)^n$\n\n(Her er det ikkje $n-1$ fordi vi starter med $0$ i $n$ verdi).\n\n\n\n\u003e [!Info]\n Det er lettere å finne summen gjennom formler. Dette er berre ein måte å skrive det på.\n\n\nEit døme på ein geometrisk serie:\n$2(3)^0+2(3)^1+2(3)^2+2(3)^3 \\dots \\space 2(3)^{n-1}$\n$\\rightarrow 2+6+18+54 \\dots \\space 2(3)^{n-1}$\n\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Gjennomsnittleg-vekstfart":{"title":"","content":"# Gjennomsnittleg Vekstfart\n\n## Kva er gjennomsnittleg veksfart?\n\nGjennomsnittleg vekstfart er den gjennomsnittlege $y$ verdien det blir økt med per $x$ over eit integrall. Der er på ein måte det omvendte av [[Momentan vekstfart]] , i staden for eit spesifikt punkt vi finner aukinga til, finner vi heller den gjennomsnittlege aukinga (per $x$) over eit integrall. I andre ord er det delta $y$ (forandring i $y$ verider), dividert på delta $x$ (forandring i $x$ verdier)\n\n## Rekne ut gjennomsnittleg vekstfart.\n\n^40a02b\nVi deler forandringen i $y$ verdier på forandringen i $x$ verdier for å finne den gjennomsnittlege vekstfarten. For å finne forandringen trenger ein berre å ta subtrahere den siste $y$ verdien i frå den første $y$ verdien, og likt ved $x$ verdiene. \nHusk at den første $y$ verdien må vere i samme punktet som den første $x$ verdien, likt med dei andre, i andre ord det er kordinata til punkta.\n\nFormelen for gjennomsnittleg vekstfart over eit integrall er som følgende: \n\n$\\Huge \\frac{y_{2}-y_{1}}{x_{2}-x_{1}}$\n\n\u003e[!Info]\n\u003eViss ein ikkje har y punkta, men ein funksjon så er sjølvsagt y punkta berre funksjonen sin verdi ved x.\n\nDette kan kortast ned til:\n\n$\\huge \\frac{\\Delta Y}{\\Delta X}$, $\\large \\Delta$ tyder forandring i verdier.\n\nViss ein skal skrive ein formel for å finne den aukinga som har oppståd etter $x$ verdier, kan ein berre settje $x$ bak den gjennomsnittlege vekstfarten.\n\nVisualisering av $\\Delta x$, og $\\Delta y$ i formelen:\n\n![500](https://api.ndla.no/image-api/raw/id/37194)\n\n\n\nVisualisering av ferdig produkt til formelen, gir ein x, (annen funksjon):\n![500](https://api.ndla.no/image-api/raw/vekstfart_eksempel_3.png?)\n","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Grenseverdier":{"title":"","content":"Grenseverdier er når vi går nærarere og nærarer men aldri på eit spesifikk verdi. Til dømes : 1.99999999 med uendelig mange 9 går mot 2, men aldri når to. Dette skriv vi som $\\lim_{x\\rightarrow2^-}$.\n\n\nDer går ann å forkorte mykje for å få ein graf som er kortere og lettere å ta i bruk.\n\n\n## Første type grenseverdi\n\n$\\lim_{x\\rightarrow n^-}f(x)$\nGår bort til uendelig nær n men frå den negative aksen. \n\n## Andre type grenseverdi. \n\n$\\lim_{x=n^+}$\nGår bort til uendelig nær n men frå den positive aksen.\n## Tredje type grenseverdi.\nGår bort til n frå begge sidene undelig nær.\nEr det samme som å settje inn n.\n\n$\\lim_{x=n}$","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Grunnleggende-celleteori.":{"title":"","content":"# Grunnleggende celleteori.\n\nVi, mennesker, består av omtrent 37 trillioner celler.\n\n\n## Litt historie.\nRobert Hooke fant ut om [[Introduksjon til cellen.|celler]] først og gidde ut en bok som heiter \"Micrographia\". Han kalte dei faktisk celler fordi dei minte han om dei smår rommene som monker bur i, disse romene heiter celler. Noen trur at Isaac Newton brente det einaste bilete av Robert Hooke. Hooke såg berre celleveggen. Hooke òg studerte daude celler, ikkje levende.\n\nAntonie Van Leeuwenhoek var den første til å oppdage levende celler, og fant da ut kva sæd faktisk var. Det var ein stor usikkerhet om kva det (sæd) var, eg lure om han nutta på eit papir og såg det gjennom ein mikroskop 🧐.  Han òg oppdaget protister og kalte dei animalkuler (dyrekuler). Dei er unicellulære \"miniorganismer\".\n\nFørst på 1800 tallet blei dei teoriene meir utdypt og forsket på da Schleider og Schwann la grunnlaget for moderne celle teori.\n\n### Schleider og Schwann moderne teori.\n1. Alt liv er bygd på $1$ eller fleire celler.\n2. Celler er den grunnleggende enhet for alt liv.\n3. Alle celler kjem i frå andre celler.\n\n\nVirchow stjal idene sine i frå Remak, simpelt sagt plagiat. \n\nFosfolilipider lager naturleg to lag som kan skape plasmamembraner. Det er mange ulike teorier om den aller første cellen, men ingen veit heilt sikkert korleis dei første cellene oppstod.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Hastighet":{"title":"","content":"# Hastighet\n\nHastighet er ein [[Vektorer|vektor]] som tyder til at den har ein retning i tillegg til ein verdi.\n\nOfte i  ein dimensjonell mosjon fysikk pleier ein positiv hastighet å gå til høgre, og ein negativ hastighet gå til venstre. Og viss det opp og ned så pleier opp å vere positiv hastighet, og ned vere negativ hastighet. Men det kan alltid vere i alle moglege retninger, det er viktig å sjekke kva retning det er snakk om og kva forteikn verdi dei har.\n\nNår vi sjekker hastighet over eit tidsperiode slik som i ein [[Hastighet(v) vs tid (s).]] graf finner vi hastigheten frå slutten og starten, altså direkte frå start til slutt ikkje med på løypen den følger, dette er ein spesiell egenskap til vektorer. Dette er fordi vi har ein retning, og for å finne den generelle retningen og farten til hastigheten så går vi direkte frå start til slutt.\n\nHastighet har normalt ein enhet $m/s = \\frac{m}{s}$.  (SI enhet)\n\nSymbolet for hastighet er =  $\\vec{V}$.","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Hastighetv-vs-tid-s.":{"title":"","content":"# Hastighet (v) over tid(s) grafer.\n\nEin [[Hastighet]] vs tids graf er ein graf som har ein y akse som viser hastigheten (v) til eit objekt og ein x akse som viser tid (s). \n\n\n## Finne forskyvning / beviser for forskyvning.\nVed ein konstant hastighet veit vi at meterene vi går /forskyvningen vi får ved denne konstante hastigheten er berrre $V(\\frac{m}{s}) \\times \\Delta t (s)$. Dette gir jo ganske grei mening fordi vi eliminerer sekundene frå likningen. Noko som vi legger merke til at når vi settjer dette inn på ein hastighet vs tid graf er at arealet under grafen er det samme som denne formelen. $V(\\frac{m}{s}, \\text{y aksen sin verdi}) \\times \\Delta t (s, \\text{x aksen sin verdi})$.\n\n![](https://www.excellup.com/classnine/sciencenine/ImageMotion/9_sc_motion_VelocityTimeGraph1.png)\n\nMen virkeleg tenk på det viss eg sjekker kor mykje eg går kvart millisekund og adderer alle dei ulike distansene eg går på alle disse millisekunda så får vi jo ærlig talt den nærmast totale distansen eg har gått! Dette er jo heilt likt å  ta hastigheten (y verdien) * tid(x verdien) når vi har ein ganske liten tidsperiode vi går per gang, og så gjere dette for kvart einaste moglege gang som går ann i vår totale tidsperiode og addere dei saman.\n\nDette faktumer vi har nettopp bevist tyder òg til at vi kan ta i bruk integraller til å finne den totale forskyvningen uansett om vi har ein varierande akselerasjon, dette er fordi integraller gjer at vi kan finne arealet uansett korleis grafen ser ut. \n\n\n![](https://media.sciencephoto.com/image/c0083345/800wm)\n(Her er f(x) vår funksjon for hastighet, og våre a og b er start og slutt på hastigheten, dx er det lille intervallet vi sjekker arealet til kvar gang.)\nNår dx nærmer seg 0 ville vi den totale arealet.\n\n\n## Forstå akselerasjon gjennom grafen.\n\nSom eg har nemnt i [[Akselerasjon.]]  er akselerasjon berre forandring i hastighet. Dette tyder til at vi har to ulike metoder for å akselerasjonen til ein graf: gjennomsnittleg akselerasjon og momentan akselerasjon. \nSom vi har lært i 1T er gjennomsnittleg vekstfart det samme som $\\frac{\\Delta y}{\\Delta x}$. \nVi kan bruke dette til å finne den gjennomsnittlege akselerasjonen då i ein hastighet vs tidsgraf er y det samme som hastigheten(v), og x det samme som tid(s).\n$a=\\frac{\\Delta V}{\\Delta t}$.\n\n![](https://www.geogebra.org/resource/H3g8nD8f/pVz7yc7vjmpQCOF3/material-H3g8nD8f.png)\n\nIkkje minst kan akselerasjon òg vere momentane, dette er spesielt oppmerksom når vi har ein varierende akselerasjon. Då kan vi bruke det andre vi har lært i 1T, det med at deriverte funksjoner av ein funskjon viser den momentane vekstfarten til ein funksjon. Dette er det samme som å finne den momentane akslerasjonen til ein hastighet funksjon i ein hastighet vs tidsgraf. Dermed for å finne den momentane akselerasjonen kan vi berre bruke den deriverte funksjon med den spesifikke sekund tid(s) som innputt.\n\n\n![](https://magoosh.com/hs/files/2017/12/simple_tangent_graph.png)\n\n\n\n\nHer kan vi sjå dei ulike grafene:\n![](http://hyperphysics.phy-astr.gsu.edu/hbase/Mechanics/imgmech/positionc.png)","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Hooks-lov.":{"title":"","content":"# Hooks lov\n[[Newtons andre lov, vekt]].\n\n\n\nKraften er det samme som ein fjærkonstant $\\times$ forlengelsen.\n$F=k\\times x$ for ein fjærstivhet av $k$.\n\nVi kan rekne ut $F$ gjennom [[Newtons andre lov, vekt]] dersom vi veit masse og akselerasjon, og deretter kan vi forsøke å rekne ut kva $k$ er.\n\nHusk at vi får ein [[USikkerheter]] og vi må ta hensyn til dette.\n\tVi kan bruke gjennomsnittet $\\pm$ $\\frac{variasjonsbredden}{2}$ av alle målingene vi tok som gir eit ganske presist svar. ","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Hydrogenbinding-i-vatn":{"title":"","content":"# Hydrogenbinding i vatn.\n\nDei fleste biologiske prosesser er avhengig av vatn i ein eller anna grad, og skjer antagenteligvis inni vatn òg.\n[[Kva er liv?|liv]] er dermed avhengig av vatn.\n\nVatn er dipolart som tyder til at den eine siden av molekyler trekker meir på elektronene enn dei andre. (Det betyr ikkje direkte at det er alltid meir elektroner der, men at det er ein større sjanse for at det er elektroner der.)\n\nDette betyr at den eine siden er meir negativ ladet enn den andre, og den andre siden er meir positivt ladet.\nI $H_2O$ trekker Oksygenet meir på elektronene enn det Hydrogenene gjer som igjen gjer at siden med oksygen er meir negativt ladet, og hydrogen sidene er meir positivt ladet. \nAt Oksygen trekker mykje på elektronene heiter elektronegativitet.\n\n\n## Vatnoverflatespenning \u0026 Hydrogenbinding.\n\nSom nemnt tidlegare er siden med oksygen meir negativt ladet og sidene med hydrogen meir positivt ladet. Som vi veit tiltrekker negativt og positivt kvarandre.\nOg som du kanskje da kan førestille deg betyr dette at dei ulike $H_2O$ molekyla tiltrekkar seg kvarandre. Da leggar oksygenet seg i mot hydrogen, og hydrogene legger seg i mot oksygen. \n\nHer er ein illustrasjon:\n![](https://media.snl.no/media/176750/standard_kovalent_binding.png)\nKovalent binding er det same som elektronparbinding.\n\nDenne hydrogenbinding effekten i vatn skaper den overflaten vi er kjent med, den overflaten som har ein slags spenning. Dette er grunnen til at vatnet kan samle seg i dråper på ein overflate i staden for å berre renne ut. \n\n\nHydrogenbindinger er svakere enn elektronparbindinger, men gjer at vi får voerflatespenninger, og svært mange andre egenskaper som tillater mange polarmolekyl til å løyse seg i vatn!","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Hypotoniske-isotoniske-hypertoniske-l%C3%B8sninger.-OSMOTISK-TRYKK.":{"title":"","content":"# Tonisitet. \nAlt dette er ulike former av [[Osmose.]] og viser til ulike osmotiske trykk som skaper ulike effekter i celler.\n\n[[Dyreceller og planteceller.|planteceller]] har ein cellevegg som tillét den å overleve større trykk som gjer at den ikkje sprekker like raskt.\nMen vil krympe drit mykje på innsiden, til den nærast er dau.\nDyreceller har ikkje dette og kan lettere eksplodere.\nOsmotisk trykk er forkjell i trykk på utsiden og innsiden av cellen.\nJo større forskjell i vatnkonsentrasjon, jo større trykk.\n\nVannet går frå høyerke osmotisk trykk til lavere.\n\n# Hypotoniske løsninger\nAt ein løsning er hypotoniske tyder til at det er ein \nhøgere mengde stoffer utanfor cellemembranen, og stoffet som er i fokus er det mindre sjanse for at det beveger seg inn i cellen enn at det beveger seg ut av den. Dette er fordi det er meir hindringar eller anna faktorer som gjer at det er ein mindre sjanse for at stoffet som i fokus vil bevege seg innover gjennom [[Diffusjon]] enn det er som vil gå utover. Dermed vil det vere meir av stoffer i fokus som går ut av cellen, og den kan dermed nesten krympe og bli ein shriveled piece of shit.\n \n# Isotoniske løsninger\nI isotoniske løsninger er det ein like stor sannsyn for at eit stoff vil bevege seg innover som det er at den beveger seg utover cellemembranen. Dette er fordi det er likestilt mengde hindringar på begge sidene av membranen som gjer at sannsynet er likestilt. Dette gjer at formen til cellen holder seg.\n\n# Hypertoniske løsninger\nI hypertoniske løsninger er det nesten det omvendte enn i hypotoniske. Her er det nemleg meir hindringar på innsiden av cellen enn det er på utsiden som gjer at det er ein større inntak enn utslepp av stoffet i fokus. Dette gjer òg at eventuellt kan cellen eksplodere fordi den blir så stor fordi den tar så mykje inn men slepper så lite ut. \n\n# Visualisering.\n![](https://cdn.kastatic.org/ka-perseus-images/debb7d49121cde333b4eac95db677938b698e0fb.png)\n\n\n\nAll disse bevegelsene kan vi drøfte i ein konsentrasjonsgradient.\n\n\n[[Diffusjon]] [[Osmose.]] [[Konsentrasjonsgradient]]","lastmodified":"2022-12-05T20:39:56.361033718Z","tags":null},"/notes/Immunforsvaret.":{"title":"","content":"\n# Immunforsvaret.\nImmunforsvaret beskkyter kroppen mot infeksjoner. Immunforsvarets [[Introduksjon til eukaryote celler.|celler]] er særdeles knytta til **blodet**, **beinmargen** og **lymfesystemet**.  Spredt rundt i kroppen finnes *lymfevev*. Der møtest spesialiserte celler. Dei utveklser informasjon og forbereder seg på å forsvare kroppen. Mange andre av rkoppens organer bidrar også i i immunforsvaret: *leveren* lager mange viktige immunforsvars[[Kva er grunnstoffer og atomer.|molekyler]], *blodåreveggen* er viktig ved [[Betennelsesreaksjoner.]] og *nervesystemet* er viktig for  åregulere blant anna feber.\n\n\n## Tre hovud sentrale oppgåver.\n\nImmunforsvaret har tre sentrlae oppgåver. Den eine er å *gjenkjenne* mikroorganismer, den andre er å *fjerne* mikrorganismer som har trengt inn i vevet. Og den tredje oppgåven er å *huske* det første møtet med ein mikroorganisme, slik at det går raskere å fjerne den neste gong den kjem. Immunforsvaret er derfor utstyrt med **spesialiserte celler og molekyler** som gjenkjenner fremmede mikroorganismer og stoffer. Det høyrest kanskje rart ut å gjenkjenne fremmede, men det er nødvendig fordi immunforsvarets virkemidler også kan skade kroppen sjølv. Immunforsvaret må klare å skille det som er eiget fra det somer fremmed. det lærer seg at det ikje skal reagere på det som er eiget altså eigne celler, men berre reagere på det som er fremmed.\n\n1. Gjenkjenne mikroorganismer\n2. Fjerne mikroorganismer\n3. Huske det første møtet med ein mikroorgnaisme.\n\n\n\u003e[!INFO] \n\u003eImmunforsvaret beskytter kroppen mot infeksjoner. Immunforsvaret skal bekjempe mikroorganismer. Immunforsvaret skal skille egne celler frå fremmede, og det skal huske fremmede celler.\n\n\n## Medfødte og tilpassede immunforsvara (uspesifikk og spesifikk).\n\nAlle levende organismer trenger å forsvare seg mot andre organismer. Slev mikroorganismet har eit immunforsvar mot andre mikrooorganismer. DEler av vårt immunforsvar er derfor [[Naturleg seleksjon|evolusjonsmessig]] svært gammel og finnes igjen også hos mer primitive organismer. Denne delen av immunforsvaret kalles det *[[Det medfødte immunforsvaret.|det medfødte immunforsvaret/uspesifikke immunforsvaret]]*. Det medfødte immunforsvaret kan oppdage mikroorgansimer og fjerne dei, men har liten eller ingen evne til å huske tidlegere møter med ein bestemt mikroorganisme.\n\nMennesker og alle andre [[Dyr|virveldyr]] har også eit *[[Det tilpassede immunforsvaret.|tilpasset immunforsvar (også kjent som : spesifikk immunforsvar / det ervervede immunforsvaret)]]*. Dette immunforsvaret er til staden frå før fødsel og utvikler seg gjennom heile livet . Det tilpassede immunforsvaret kan gjenkjenne mikroorganismer og fjerne dei i  samarbeid med det medfødte immunforsvaret. Men i tillegg har det tilpassede immunforsvaret evne til å huske tidlegere møter med mikroorganismer slik at neste gang dei møtes er dei forbered og klar slik at  mikroorganismene kan raskt bli fjernet. Det vil si at vi får ein ekstra god beskyttelse mot infeksjon. Beksyttelsen kan vare ein kortere periode eller resten av livet. Livslengden til dei bekjempende tilpassede immuncellene har altså varierende livslengde. det tilpassede immunforsvaret er årsaken til at vaksiner virker. Dette kaller vi *den immunologiske hukommelsen*,\n\nVed ein infeksjon altså når ein mikroorganisme har trengt inn i kroppens vev vil immunforsvaret reagere på mikroorganismen. Immunforsvaret bruker både spesialiserte *immunceller*, mange av dei som er kvite blodceller og spesialiserte stoffer, bla. [[antistoffer]] for å stanse mikroorganismene og deretter bryte dem ned og fjerne dei.\n\n\u003e[!INFO] Kort oppsummering om det medfødte og tilpassede.\n\u003eImmunforsvaret deles i medfødt og tilpasset immunforsvar. \n\u003eImmunforsvaret bruker både spesialiserte immuneller og spesialiserte stoffer for å stanse, bryte ned og gjerne mikroorganismene.\n\n\n| Immunforsvaret.                                                                |                                                                                                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                                                                                                                                                                              |                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n|--------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Medfødt immunforsvar.                                                          |                                                                                                                                                                                                                                                                                                         | Tilpasset immunforsvar.                                                                                                                                                                                                                                                                                                                                                                                                      |                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| Ytre forsvar: Hindrer mikroorganismer i å trenge inn i kroppen.                | Indre forsvar: Tar seg av mikroorganismer som  allerede har kommet inn i kroppen. Reagerer på molekyler som er felles for ein rekke mikroorganismer.                                                                                                                                                    | Reagerer på alle fremmede molekyler (proteiner) som er forskjellige frå proteinene som kroppen lager selv. Dei fremmede proteinene, som kalles antigener, kan sitte festet på overflaten av mikroorganismer, eller flyte fritt i blodet. Spesialiserte reseptorer gjenkjenner antigenene.                                                                                                                                    |                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| Virkemidler (medfødt, ytre)                                                    | Virkemidler (medfødt, indre)                                                                                                                                                                                                                                                                            | Virkemidler (tilpasset, lymfocytter).                                                                                                                                                                                                                                                                                                                                                                                        |                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| * Hud * Slimhinner * Flimmerhår (cilier) * Stoffer som talg, slim og magesyre. | * Fagocytter Tre viktige typer er nøytrofile, granulocytter, makrofager og dendrittiske celler.  * Naturlege drepeceller (NK- celler) * Stoffer i blodet som lager hull i cellemembranen. * Stoffer, bla. interferoner, som skilles ut frå virusinfiserte celler og som hindrer virus i å formeire seg. | B-celler: Gjenkjenner eit fremmed antigen direkte ved hjelp av antigenreseptor / antistoff som passer til antigenet.  Fleire typer B-celler, dei viktigste er: * Kvilande, nye B-celler med antigenreseptorer på overflaten. * B-hukommelseceller med antigenreseptorer på overflaten. * Plasmaceller som produserer store mengden antistoffer som slippes ut i blodet eller vevet. Har ikkje antigenreseptor på overflaten. | T-celler: Gjenkjenner kun antigener bundet til spesielle molekyler på  overflaten av kroppens egne celler. Har antigenreseptorer på overflaten.  Fleire typer T-celler, viktigaste er: * T-hjelpeceller, som påverker andre lymfocytter i immunforsvaret slik at antigener fjernes. * T-drepeceller som dreper celelr med fremmede antigener som passer til antigenreseptoren. * Både T-hjelpeceller og T-drepeceller danner T-hukommelseceller. |\n\n## Immunsforsvarets [[Introduksjon til eukaryote celler.|celler]].\nImmunforsvaret har spesialierte celler som gjenkjenner fremmede- stoffer, mikroorganismer. Dei er knytta til blodet, beinmargen og lymfesystemet.\nBlir hovusakeleg i beinmargen transportert i lymfesystemet, og når trengs så blir det slept ut større mengder inn i blodet. I blodet møter dei andre spesialierte celler som dei kommuniserer med for å fortelle andre at det er sykdommer.\n\nSom nemnt tidlegare:\nSom i \"*leveren*\" , \"*blodårsveggen*\" og \"*nervesystemet*\".\n\nAlle kvite blodceller er immunforsvaret celler, det er også ulike typer blodceller, som *Granulocytter* som er delt inn i *Granulocytter* og *mastceller*, der granulocytter bekjemper bakterier ved fagocytose og utskillelse av giftstoffer, som tillét den å fortelle andre immunceller om det. \nMastceller som regulerer betteneslereaksjonen ved å skille ut *histamin*.\nEin ny type er også *Makrofager* som bekjemperbakterier ved fagocytose, storpsier fjerner ødelagt vev ved fagocytose, presenterer antigen for T-hjelpecellene. \n\n### Immunceller skapes i beinmargen.\nAlle dei kvite blodcellene er *immunceller*. Både kvite blodceller, raude blodceller og blodplater blir heilte tiden fornyet ved at *stamceller* i beinmargen deler seg gjennom [[Mitose.]] Stamcellene i beinmargen kan få datterceller som utvikler seg til det blodcelletypene kroppen har behov for. Spesielle reguleringsmekanismer i kroppen bestemmer produksjonen og diffensieringen av beinmargsstamcellene ut frå behovet. I ein frisk vaksen person produsererest det hundre milliarder nye blodceller kvar dag.\n\nAv immunceller er *fagocytter* og *lymfocytter* dei viktigste. Noen fagocytter modnes ferdig i beinmargen før de slippes ut i kroppen, andre fagocytter modnes ferdig først når dei er ute i vevet. Der kan dei også dele seg og bli fleire.  Det finnes to hovudtyper for lymfocytter. *B-Celler* og *T-Celler*.\nB-celle modnes ferdig i beinmargen og T-cellen modnes i *brisselen* (thymus). \n\n\n\u003e[!INFO] Oppsummering kort:\n\u003eKvite blodceller blir heilte tiden fornyet ved at stamceller i beinmargen deler seg. Alle kvite blodceller er *immunceller*. Dei viktigste er *fagocytter* og *lymfocytter* (B-celler og T-celler).\n\nNokre immunceller er  til dømes:\n-   [Lymfocytter](https://sml.snl.no/lymfocytt) er en viktig del av det ervervede immunforsvaret og deles inn i [B-](https://sml.snl.no/B-celler) og [T-lymfocytter](https://sml.snl.no/T-celle) avhengig av hvor de modnes, samt [NK-celler](https://sml.snl.no/NK-celle)\n-   [Makrofager](https://sml.snl.no/makrofag) er del av det medfødte immunforsvaret\n-   [Granulocytter](https://sml.snl.no/granulocytter) er del av det medfødte immunforsvaret og deles inn i [nøytrofile](https://sml.snl.no/n%C3%B8ytrofile_granulocytter), [basofile](https://sml.snl.no/basofile_granulocytter) og [eosinofile](https://sml.snl.no/eosinofile_granulocytter)\n-   [Mastceller](https://sml.snl.no/mastcelle)\n-   [Dendrittiske celler](https://sml.snl.no/dendrittiske_celler) **.\n\n![[beinmargutviklingavimmunceller.png]]\n\n\n\n## Immunsforsvarets oppbygging\nSjekk her:\n[[Det medfødte immunforsvaret.]]\n[[Det medfødte immunforsvaret.]]\n[[Immunreaksjoner mot mikrobiell sjukdom.]]\n[[Immunreaksjoner mot viral sjukdom.]]\n\n\n# Immunsforsvarets oppbygning\n\n![[Captura de Pantalla 2022-11-23 a la(s) 14.13.43.png]]\n\n\n# Korleis kan immunforsvaret bekjempe bakterier og virus.\n\n## Korleis kan immunforsvaret bekjempe bakterier.\nBakterier som trenger inn i kroppen vil første møte [[[Det medfødte immunforsvaret.#Fleire ulike typer fagocytter i det medfødte indre forsvaret.|fagocytter]], først og fremst *makrofager* og *dendrittiske celler*, som spiser [[Bakteriar]] gjennom *fagocytose*. **Det skjer fordi *fagocyttene* har molekyler i overflaten som gjenkjenner og binder seg til strukturer som er felles for dei fleste bakterier og som våre eigne celler ikkje har.** Denne responsen skjer raskt.\n\nBåde [[Det tilpassede immunforsvaret.#Antigen|antigener]] frå ein bakterie og dendrittiske celler som har spist bakterien vil gå inn i [[Lymfesystemet.|lymfeåren]] og deretter fraktes til næraste lymfeknute. Her møter dei dentrisske cellene [[T-celler|T-hjelpeceller]] som sjekker om dei kjenner igjen antigenet på overflaten av den *dendrittiske cellen*. **Dei T-cellene som gjenkjenner antigenet \"sitt\" vil bli strimulert til å dele seg og produsere signalstoffer som aktiverer andre immunceller.** \n\nForsvar mot bakteriar:\nEin dendrittisk elle tar opp ein batkerie ved fagocytose, bryter ned antigenene i bakterien i biter (inni [[Kva er organeller - organeller i eukaryotiske celler.|lysosomen]])og presenterer antigenet for T-hjelpecellen. T-hjelpecellen skiller ut stoffer som aktiverer [[B-celler]] og [[T-celler]] som har antigenreseptorer mot det samem antigenet. Det vil gi antistoffproduksjon, og det utvikles immunceller som reagerer på det fremmede antigenet.\n\nI lymfeknuten vil antigenreseptorene i B-cellenes cellemembran binde seg til antigener fra bakterien. Berre nokre få B-celler har antigenreseptorer som gjenkjenner atnigener som finnes på akkurat denne bakterietypen. Disse B-cellene vil ta opp antigenet ved *endocytose* og presenterere det for T-hjelpeceller på samme måte som dei dendrittiske cellene. T-hjelpecellene som allereie er blitt aktivert av dei dendrittiske cellene bil gjenkjenne det samme antigenet på nytt på disse B-cellene. Kvar T-hjelpcelle skiller deretter ut signalstoffer som så virker på dei antigenpresenterende B-cellene. Signalstoffene får B-cellene til åd ele seg fleire ganger. Ein del av disse B-cellen blir til plasmaceller, som lager mykje antistoff mot bakterien. Det tar nokre dager før denne responser kommer odentelig i gang.\n\nAntistoffene som blir lagt binder seg til bakteriene og klumper mange bakterier sammen. Det hindrer bakteriene i å skade kroppens eigne celler. Antistoffer fungerer også som ein merkelapp som får fagocyttene til å spise bakteriene. Antistoffene kan også sette i gang ein serie med kjemiske reaksjoner som gjer at bakterienes cellemembran blir øydelagt. Då dør bakteriene.\n\n\u003e[!INFO] Oppsummering av bekjempe bakteriar.\n\u003eBakterier som trenger inn i kroppen blir raskt spist ved fagocytose. Både fagocytter og B-celler med riktig antigenresepretor kan presentere det fremmede antigener bundet til eit antigpresenterende molekyl på celleoverflten. Det vil først gjere at T-hjelpeceller blir aktivert. Dei skiller ut signalstoffer som igjen aktiverer andre immunceller, og immunresponser starter for fullt.\n\n![[immunforsvaretdrepebakterie.png]]\n## Korleis kan immunforsvaret bekjempe virus?\nNår eit virus kjem inn i kroppen er det avhengig av å gå inn i cellene for  å kunne formeire seg. B-cellene antistoffer kan gjenkjenne frie virus i blod og vevsvæsker. Antistoffene kan binde seg til viruset og hindre det i å infisere celler. \n\nStarks eit virus har gått inn i og infsert ein celle i kroppen er det utilgjengelig for antistoffene. Virusinfiserte celler produserer fleire virus. DEt gjelder derfor å stoppe dette så forst som mogleg. Den einaste sikre måten er å ofre dei virusinfiserte cellene -rett og slett drepe dem, 🥳. Virusinfiserte celelr sender ut signalstoffer, *interferoner* som gir beskjed til omgibelsene om at dei er infisert. Då går makrofager og dendrittiske celler til aksjon. dei fjrener infiserte celler og varsler [[Det tilpassede immunforsvaret.]] I tillegg til T-hjelpeceller som hjelper B-celler med å lage antistoffer mot viruset vil vi også få T-drepe celler som dreper virusinfiserte celler.\n\n\u003e[!INFO] Oppsummering av bekjempe virus.\n\u003eVirus som har infisert ein celle kan ikkje lenger oppdages og uskadeligjeres av B-cellens antistoffer. Immunresponsen kommer i gang fordi makrofager og dendrtittiske celler presenterer virus-antigenet til T-hjelpeceller som sender ut signalstoffer som aktiverer T-drepecellene. B-celler med riktig antigenreseptor blir ogdå aktivert av T-hjelpecellene og lager så antistoffer mot viruset.\n\n\n![[immunforsvaretdrepevirus.png]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Improving-efficiency-of-recursive-functions.":{"title":"","content":"# Improving effiency of recursive functions.\nRecursion can be an elegant soloution to a problem and many times lend to recursive implementation. However, recursivee algorithms can be very inffecient in both time and space.\n\nFor example in the [[Den faktorielle funksjonen.|recursive factorial function]]: \nThese are the number of calls by some examples:\n\n| Line of code   | Recursive calls                                                         | Total calls |\n|----------------|-------------------------------------------------------------------------|-------------|\n| Factorial(0);  | 0                                                                       | 1 call      |\n| Factorial(2);  | Factorial(0)-\u003eFactorial(1)                                              | 3 calls     |\n| Factorial(5);  | Factorial(4)-\u003eFactorial(3) -\u003eFactorial(2)-\u003eFactorial(1) -\u003e Factorial(0) | 6 calls     |\n| Factorial(10); | Factorial(9)-\u003eFactorial(8) … … … Factorial(1)-\u003eFactorial(0)             | 11 calls    |\n\n\n\n## Memoization.\n\nMemoization makes a trade off between time and space .As long as the lookup is efficient and the function is called repeatedly, the computer can save time by using memory to store the memo, the memo being already computed data.\n\nMemoization of Fibbonaci:\nIn the case of the factorial function: An algorithm only benefits from the optimization when a program makes repeated calls to a function (during execution). In some cases however memoization can save time for a single call to a recursive function.\n\nAn example of fibbonaci:\nThe first 10 fibbonaci numbers:\n0,1,1,2,3,5,8,13,21,34.\n\nA simple recursive algorithm:\n```psuedocode\nif n equals 0 or n equals 1 return n\nelse return fibbonaci(n-1)+fibbonaci(n-2)\n```\n\n\nTo visualize this multiple recursion function: \nFibbonaci(5);\n\u003ciframe width=\"688\" height=\"387\" src=\"https://www.youtube.com/embed/214lD7tWkz8\" title=\"Recursive Fibonacci Calls (Diagrammed)\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\u003e[!NOTE] Note\n\u003eLegg merke til at fleire calls til 3,2,1 og 0 blir gjort. Når $n$ blir stor så blir dette svært ueffektivt. Til dømes fibbonaci(30) kaller fibbonaci(2) over ein halv million ganger. Her kan vi bruke memoization til å unngå å kalle til ein allerei utreknet del.\n\nDen memoiserte versjonen av den rekursive fibbonaci algoritmen ser slik ut:\n```psuedocode\nif n equals 0 or n equals 1 return n;\nelse if (n is in memo) return memovalue[n];\nelse \n\tcalculate  fibbonaci(n-1)+fibbonaci(n-2)\n\tstore result in memo\n\treturn result\n```\n\nNow the algorithm looks like this:\nFibbonaci(5);\n\u003ciframe width=\"688\" height=\"387\" src=\"https://www.youtube.com/embed/hbveibMDHfg\" title=\"Memoized Recursive Fibonacci Calls (Diagrammed)\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\nThe original algorithm required 15 functions calls with $n=5$, the memoized only used 6.\nHere is a table showing number of calls bwetween 5 and 10 - n.\n| n  | Original | Memoized |\n|----|----------|----------|\n| 5  | 15       | 9        |\n| 6  | 25       | 11       |\n| 7  | 41       | 13       |\n| 8  | 67       | 15       |\n| 9  | 109      | 17       |\n| 10 | 177      | 19       |\n\n\n## Bottom up.\nSometimes the best way to improve a recursive algorithm is to not use one at all.\nIn the case of the fibbonacci numbers an iterative technique can be better, this technique being called bottom-up. This can save both timr and space. When using a bottom up approach the computer solves the sub problems first and uses the partial results to arrive at the final result.\n\n#### Psuedocode av fibbonacci numbers.\n\n```psuedocode\nif n equals 0 or n equals 1 return n;\nelse \n\tcreate variable twoBehind (remember result of (n-2) init to 0.)\n\tcreate variable oneBehind (remember result of (n-1) init to 1.)\n\tcreate variable result (store the final result, init to 0.)\n\trepeat (n-1) times:\n\t\tupdate result to sum of twoBehind+oneBehind\n\t\tupdate twoBehind to store currentValue of oneBehind\n\t\tupdate oneBheind to stare value of result\n\treturn result;\n```\n\nThis method nevers makes a recursive callm it instead uses iteration to sum up the partial results and calculate the number. This has the same time complexity as the recursive one ([[Big O|O(n)]] but has the space complexity of O(1).\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Infeksjon-og-smitte":{"title":"","content":"\n## Smitte og infeksjon\n\nSmitte er einntreninging av en mikrobe i et nytt individ eller i en ny lokalisjon hos et individ som fra før er bærer av smittestoffet.\n\nUlike metoder for å bli sjuke er blant anna:\n1. Inntak\n2. Gjennom luft\n3. Mellom dyr\n4. Gjennom sår\n\nEn infeksjon oppstår når mikroorganismer øker i antall og gjør skade.\n\n## Inkubasjonstid\n\nInkubasjonstid.\nInkubasjonstid forklarer tidsperioden mellom punktet der ein blir smittet, og føler symptomer.\n\nTidsperioden til inkubasjonstiden kan vere lang, den kan vare mellom ein dag til fleire år. Inkubasjonstiden varierer mellom korleis ein fikk tak i mikroorganismet og anna slike faktorer.\n\n\n\nInkubasjonstid er definert som følgende:\n*Tid fra smitteøyeblikk til sykdomsutbrudd. *\n*Tiden varierer mellom timer til lange perioder som månadar*\n\t*Avhenger av mengden smittestoff, smitteveg (korleis det kom i kroppen), oppformeringstid (tiden eit organisme reprodusere), kor godt ditt immunsforsvar er, etc.*\n\n\nEIn kan også smitte når ein er i inkubasjonstiden, ein har jo mikroorganismet.\n\n## Smitte tall og smittsomhet\n\nSmittetall\nForklarer kor mange du smitter på gjennomsnitt. \nSmittetallet forklarer kor smittsomhet mikoorganismet og er definert gjennom bokstaven $R$ for \"reproduksjonstall\", antall personer smittet på gjennomsnitt.\n\n\nInfleunsa har omtrent 2 i R\nog Covid-19 omtrent 2 til 3 i R.\n\n$R$ tallet er avhengig av fleire ulike faktorer \n* Ein av dei er kor tett folk lever, befolkningstetthet.\n* Kor mange er immune i mot sykdommen, immunitet.\n* Kor godt mikrobiomen trivest i miljøet, klima.\n\t* Abiotiske fakotrer.\n\n\n$R$ forteller ingenting om kor daudleg ein sykdom er, men berre kor mange den smitter på snitt per person.\n\n## Pandemi og epedemi\n\nEpedemi-\n* sprer seg over eit større geografisk område,\n* rammer mangen, (dyr, mennesker, planter, etc)\n\n\nPandemi-\n* mykje meir konsentrert på eit geografisk område.\n* store deler av verdens befolkning er berørt.\n* sykdoms hos mennesker, rammer sjeldent dyr og planter.\n\n\n[[Mikrobielle sykdommer]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Inklinerte-krefter.":{"title":"","content":"# Inklinerte krefter.\n\nViss vi teikner eit [[Free body diagram  - medvinklet krefter.|eit free body diagram]] så har vi ofte krefter som er inklinerte og som oftast er kanskje litt gjømt.\n\nTil dømes viss vi har ein boks på ein skrå overflate så vil den bli dratt litt nedover, viss vi skal finne ut kor mykje den beveger seg i alle disse retningene må vi ta i bruk trigonometri og litt matte.\n\nLa oss sjå på eit døme:\n![[Inklinerte krefter. 2022-07-15 17.57.51.excalidraw]]\n\n\nViss vi vil finne ut kor mykje kraften den beveger seg nedover planet er kan vi ta i bruk simepl trigonometri, og irriterande matte.\n\n![[Inklinerte krefter. 2022-07-15 18.02.35.excalidraw|1000]]\n\nYep, det blir gnske komplisert rask. Men lag meg forklare stegene slik at du kanskje forstår betre kva i helvete som blei gjort her.\n\n1. Vi finner den siste vinkelen i trekanten. Denne har ein verdi av $90-\\theta$\n\t1. Gjennom dette finner vi den lille vinkelen i treaknten med boksen, den til venstre nede. Dette er basert på beviset til topp høgre.\n\t2. Vi finner deretter den siste vinkelen som har ein verdi på $\\theta$ i den lille trekanten. (Eg dro trekanten større for å betre visualisere dette.\n2. Vi bruker vår kunnskap om trigonometriske funksjoner til å finne dei to ulike katetene i dette lille trekantene. Som vi kan sjå er den eine paralell med overflaten, dette er $F_{g,paralell}$, og den eine er rett i mot den $F_{g,mot}$. \n3. Vi får vårt sluttresultat at den kraften som den glir nedover overflaten er det samme som $\\sin(\\theta)\\times F_g = F_{g,paralell}$. Og den som står i mot er den samme som $F_{g,mot}=\\cos(\\theta)\\times F_g$.\n\t1. Eventuellt viss boksen ikkje går igjennom overflaten så er det kanskje ein normal kraft til staden.\n\n\n Det du kan ta ut i frå dette er at på ein inklinert overflate så er graviteten sin i effekt i begge retningene på eit objekt det same som $F_{g,mot}=\\cos(\\theta)\\times F_g$, og $F_{g,mot}=\\sin(\\theta)\\times F_g$. \n Husk $F_g=masse \\times g$, der $g$ er graviteten sin akselerasjons mengde. (utan retning).\n\n\n\nVi kan òg bruke dei kraftene vi får kombinert med [[Newtons andre lov, vekt]] til å finne akselerasjonen i ein av dei ny funnet kreftene.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Insertion-sort.":{"title":"","content":"# Insertion sort.\nTenk deg at du spiller eit kortspill og dealeren gir deg eit nytt kort, dei kortene du allereie har er sortert. Gå ned linjen av kortene dine til du finner posisjonen kortert er lavere er den neste, men høgere enn den bak ($bak \\le kortet \\le neste$). Plasser kortert der, så gjer du dette med kvart einaste nye kort du får. Slik fungerer insertion sort, men \"kortet\" du får av \"dealeren\" er det neste elementen å sorterte i ein liste.\nStart med siste element index 1 og jobb deg oppover. Vi kan også starte i frå høgre av arrayen og jobbe oss nedover i staden for oppover.  Viss vi har ein heilt usortert array kan vi også sortere denne med insertion sort òg. Vi deler arrayen  i to, ein sortert side og ein usortert side. Vi går oppover listen og plasserer elemntet vi har ned til rett på den \"sorterte\" listen, slik at vi \"inserte\" elementet inn i listen. Den sorterte listen er alltid under indeksen til det nåværende å bli sortert elementet.\n\n## Psuedo kode.\n1. Call insert til å inserte elementet på index 1 inn i den sorterte subarrayen på index .\n2. Call insert på index 2 på subarray mellom 0 $\\rightarrow$ og 1.\n3. Call insert på index 3 på subarray mellom 0 $\\rightarrow$ og 2.\n4. …… Repiter.\n5. Call insert på element $n-1$ index inn i subarray 0 $\\rightarrow$ og $n-2$.\n\n\nHer er ein visualisering av insertion sort:\n![](https://upload.wikimedia.org/wikipedia/commons/9/9c/Insertion-sort-example.gif)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Integraller":{"title":"","content":"også kjent som [[Derivanter|antiderivanter]] her kan ein også ta i bruk [[Første derivasjonsregel.]], [[Andre derivasjonsregel - Rasjonale funksjoner.]], [[Fjerde Derivasjonsregel - Kjerneregel.]], [[Tredje derivasjonsregel - Rot funksjoner.]].\n\n\nIntegraller er meir eller mindre det omvendte av ein derivant, når ein deriverer gjer ein det nerdover, og når ein gjer det oppover integrerer ein.\n\n\nBeviste:\nAreal til ein funksjon.\n\n$\\huge \\lim_{\\Delta x \\rightarrow 0} \\sum_{x=1}^{n}f(x)\\times \\Delta x$\n\nDette kan vi forkorte ned til \n$\\huge \\int f(x)\\times dx$\n\n$\\huge \\int f'(x)dx=f(x)$\n\n\n$\\huge \\int \\frac{df}{dx}\\times dx = \\int df = f(x)$.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Interfase.":{"title":"","content":"# Interfase.\n\nInterfase er ein viktig del av livet til ein [[Introduksjon til cellen.|celle]] når det angår vaksingen og livet til den. Interfase er eit begrep som bruker om tre viktige deler i livet til ein generell [[Introduksjon til eukaryote celler.|eukaryote celle]]. Ikkje prokaryoter, berre eukaryoter. Interfase er litt som namnet hintar til ein fase mellom replikasjonen av ein eukaryote celle. \n\nVi kan visualisere interfase slik:\n![[Interfase. 2022-07-26 16.24.37.excalidraw]]\n\n\nVi har tre ulike faser i Interfase: $G_1,S,$ og $G_2$.\nHer står $G$ antagentligvis for $Growth$ fordi i denne fasen gjer cellen berre sine naturlege celleluære prosesser som gjer at den vakser, og vedlikeholder seg sjølv. Her vokser cellen til mykje større størrelser. \nHer står $S$ antagentlivis for $Syntese$ fordi i denne fasen syntisere cellen ny [[DNA]] kopier som er festet til kromosomene, [[Kromosomer, Kromatider, Kromatiner.|der det i andre ord blir skapt syster kromatider.]] Som gjer eukaryote cellen klar for [[Mitose.]] Seinere i Mitose blir disse kromatidene splitter over til nye kromosomer, og cellen splitter. \n\nSlik ser den totale interfase prosessen ut: + delvis av mitose.\n![[Interfase. 2022-07-26 16.34.32.excalidraw|2000]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Introduksjon-til-cellen.":{"title":"","content":"# Introduksjon til cellen.\n\nCeller er den meste grunnleggende enheten av liv.\nCeller er ikkje simple, dei er svært komplekse.\nCeller er generellt omtrent 1 mikometer i størrelse.\n\nAlle celler har ein cellemembran.\nDet som er innicellemembranen heiter cytoplasma, væsken heiter cytosol. Alt er cytoplasma (inkl.cytosol).\n\n\n## Eukaryote celler.\n\nEukaryote celler har ein membran rundt cellekjernen, noko som  er eit av kjenneteikna for eukaryoter. \nCytoplasma inneholder ikkje kjernen, men det gjer nukleoplasma. \n\n## Meir generellt om celler.\n**Alle**  celler har ribosomer.\nOg ribosomer er heller ikkje simple. Disse produserer protein og inneholder blant anna RNA.\n\nRibosomer tar RNA og lager protein.\n\nAlle celler har genetisk informasjon i form av [[DNA]]. Men det er sjøvsagt unntak, i \"voksne\" blodceller er det ikkje DNA lenger. Men normalt er det genetisk informasjon, og  i form av DNA.\n\n## Prokaryote.\nProkaryoter har ikkje ein veldefinert cellekjerne og ikkje membranbunder organeller. Her flyter DNA-et berre rundt fritt, mens i eukaryote celler DNA-et normalt i cellekjernen.\n\n-----\nCeller er drit små, eit har strå i bredde har alt i frå $20\\rightarrow 180$ mikrometter i bredde, og ein celle er ofte $1$ mikrometer.\n\nCelle er jævlig små, og jævlig komplekse. 🍸\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Introduksjon-til-eksperimentell-design.":{"title":"","content":"# Introduksjon til eksperimentell design.\n\n\nDet er viktig å ha godt eksperiment design for å sikkre at det ikkje oppstår noko feil, eller mistolkinger i frå forsøket. Vi må huske å bruke [[Den vitskaplege metoden.]] når vi har godt design først av alt. Men det er òg andre ting som vi må ha i tanke når vi gjer eit eksperiment.\n\n\n## Moglege feil som kan oppstå viss ein ikkje har godt design.\n\n* Placebo effekt?\n\t* Folk trur at dei opplever ein effekt fordi dei har fått noko som skal/kan gjere noko. Dermed kan dette gi feil resultat.\n* Altfor selektiv gruppe.\n\t* Viss vi velger sjølv kven som er i gruppene kan vi oppleve at vi får feil resultat, fordi gruppene blir påverket av andre ting enn det vi trur. Til dømes: viss vi velger berre styrketrenere når vi tester ein treningspille kan vi få resultat som støtter pillen, men egenteleg skjer forbetringa fordi dei trenar og ikkje pga. pillen.\n* Andre variabler.\n\t* Andre variabler som til dømes diet og styrke og slikt kan påverke resultat og gi feil resultat og mindre presise resultat. Det er slike variabler me må kontrollere slik at dei ikkje har ein effekt.\n\n\n## Kontroll og eksperiment gruppe.\n\nVi må ha ein kontroll gruppe for å sikkre at placebo effekt ikkje kan oppstå under forsøket, og dermed gi feil resultat.\n\nKontrollgruppen:\n\tSkal få ein identisk lik test, men testen her skal ikkje ha noko stoff eller liknande som gir ein effekt. Dette gjer at vi fjerner placebo effekten hos kontrollgruppen. Denne gruppen sin ting ofte varierer i kva dei skal gjere. Dei simpelt sagt skal gi ein basis for all resultat. Til dømes: viss vi tester ein treningspille må denne gruppen få ein ueffektgivbar pille. I mens i til dømes sollys sin effekt på planter forsøk må vi sette denne i skyggen, slik at den ikkje får sollys. Dette gir basis for effektene. Viss vi ikkje har ein kontrollgruppe kan vi nemlig ikkje vite i det heile kva som forsøket viser, vi har ingen ting å samanligne med.\n\nEksperimentgruppen:\n\tDet er denne gruppen som skal få bli forsket på. Denne gruppen skal ha ein hypotetisk påverkande effekt. Det er denne gruppen som bekrefter eller avkrefter hypotesen vår. Vi samanlignar resultata med denne gruppen med resultata i frå kontrollgruppen. Til dømes: viss vi tester ein treningspille skal denne gruppen få pillen som faktisk skal hypotetisk ha ein effekt. Eller viss vi tester sollys sin effekt på planter så skal denne gruppen vere den i sollyset. \n\n\n## Dobbel-blind prinsippet.\n\nFor å sikkre at vi ikkje får ein placebo effekt når vi tester så må vi ta i bruk dobbel-blind prinsippet. Kva prinsippet går ut på er litt i namnet.\n1. Folkene i dei ulike gruppene skal **ikkje** vite kva gruppe dei er i. Dette kan skape placebo.\n2. Likt skal ikkje observatørene vite kva gruppe dei administrerer. Dette kan skape ein placebo hos observatørene og gi upresise resultat.\n\n\n## Matematisk bevisning eller avkrefting. \n\nFor å sikre at vi får ein god hypotetisk bevisning må vi bruke matematikk til å bekrefte den eller avkrefte den, vi kan ikkje altså gå ut i frå våre eigne tanker rundt resultata. Vi kan ta feil om våre tanker, og kan vere matematisk usannsynleg korrekt. Vi må bruke matematikk til å bekrefte om våre tanker er korrekt eller feil. Dette er simpel statistikk bevisning. Viss vi ikkje bruker matematikk kan vi få feil hypotetisk bevis.\n\n\nIkkje minst må vi òg følge [[Data til å støtte eksperimentale forklaringer.]].\n\n\n\n## Meir presise svar.\n\nSom nemnt tidlegare så kan vi ofte oppleve ein margin av error når det kjem til eksperiment resultater dermed er det viktig å få meir presise svar.\n\nDet viktigste er å ha store grupper og diverse grupper av forsøkskaniner, dette gir betre resultat og meir presise svar og data! Vi kan ikkje ha ein selektiv gruppe fordi dette kan gi upresise svar (andre variabler). Og vi må ha store grupper for å unngå mest mogleg den marginen av error vi kan få.\n\nDesignet av eit forsøk/eksperiment må vere presis konkret, og svært godt designet. \nDårlig design kan gi dårlige resultat!\n\n## Kontrollerte forsøk.\n Ein variabel blir forandret om gangen. Alle andre er kontrollert, vi undersøker berre ein variabel med eit forsøk. Vi har alltid ein forsøksgruppe, og ein kontroll gruppe. Best viss vi har fleire. Vi ser på forskjell i resultat på gruppene. Vi smaler data, som sjekker forskjellene. Vi må ha mange forsøk og mange ting som blir testet.\n\nNokre forsøk kan ein ikkje gjere utan etiske problem. Då kan ein heller skape ein hypotese og lete etter allereie skap data i naturen i staden for å gjere forsøket sjølv.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Introduksjon-til-eukaryote-celler.":{"title":"","content":"# Introduksjon til eukaryote celler.\n\nTenk deg korleis hadde det vore å bu i ein hytte med berre eit rom? Det ville ha vore ganske simpelt, men litt kjedelig.\n\nProkaryote celler, simple organismer som bakterier, er ofte samanlignet med hytter med eit rom. Dei har ingen indre membraner som deler opp \"hytten\" i fleire deler. I mens i eukaryote celler er dei mykje meir komplekse med meir rom.\n\nAkkurat som eit stort familie hus er det delt opp i fleire rom med ulike spesfikke betydninger så har eukaryote celler ein god del ulike kompartamenter med ulike spesialiserte hensikter ([[Kva er organeller - organeller i eukaryotiske celler.|organeller]]). Alle seperert av ein eigen membran. Dette tillater kvart organell til å ha sine eigne forhold oppfyllt, slik at dei kan gjere oppgåvene sine mest mogleg optimalt.\n\nTil dømes: organellen lysosomer oppfører seg som eit resirkuleringssenter for cellen, denne må ha ein [[pH, syrer og baser.|pH]] verdi som er syrleg for å utføre oppgåvene sine. \nLikt strukturene kjent som perokisomer utgjer ein kjemisk reaksjon kjent som oksidering, og produserer hydrogen peroksid, begge disse to tingene (oksidering til perokisomer, og den syrlige pH verdien til lysosomer)  kan skade cellen dersom dei ikkje hadde vore i eigne cellemembraner.\n\nEvnen til å halde eigne miljø inni ein celle tillater eukaryote celler til å utføre svært komplekse metabolisme reaksjoner som prokaryoter ikkje kan utføre. Dette er ein av grunnene til kvifor eukaryote celler kan vokse til mykje større størrelser enn prokaryote celler.\n\n\nHer er ein illutrasjon som viser korleis eukaryote celler kan se ut:\n![](https://api.ndla.no/image-api/raw/celletyper_td275343-klipt_justert.jpg?cropStartX=98.10579608938548\u0026cropEndX=31.90467877094973\u0026cropStartY=99.45549242424241\u0026cropEndY=0)\n\n\n## Meir info.\n[[Introduksjon til cellen.]] [[Prokaryote og eukaryote celler]]\n\n\n## Størrelse på eukaryote celler.\nStørrelsen på eukaryote celler pleier å vere omtrent $10\\rightarrow100$ mikrometer i diameter, noko som er i mellom $20\\rightarrow200$ ganger større enn ein standard [[Prokaryote celler.|prokaryote celle]].","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Introduksjon-til-prokaryote-celler.":{"title":"","content":"# Introduksjon til prokaryote celler.\n\nNår du ser på deg sjølv så ser du ikkje berre eit organisme, fordi det er omtrent $100$ milliarder bakterie celler på deg…\n\nKroppen din dermed er eit slags økosystem. Dette betyr at du teknisk sett består hovudsakelig av to, ikkje ein, to type celler:prokaryote celler, og eukaryote celler.\n\nAlle type celler faller inn i ein av disse to kategoriene. Berre eincella organismer av domene bakterier, og arkea er prokaryote. Disse har ikkje membran bunder organeller. Alle dyr,planter,sopp,protister er derimot eukaryote, noko som tyder til at dei har membran bunder organller i cellene.\n\nDet er ein pågende diskusjon oma lle prokaryote organismer er eincellet. Nokre meiner ja, nokre meiner nei. Begge sidene har gode argument.\n\nHer er ein illustrasjon av ein prokaryote celle:\n(**På dansk**)\n![](https://matnat.dk/media/images/bakterie.jpg)\n\n\n[[Introduksjon til cellen.]] [[Prokaryote og eukaryote celler]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Introduksjon-til-steinalderen":{"title":"","content":"# Steinalderen (ca. 10000 år f.Kr - 2000 f.Kr)\n\n* Redskaper, bygg m.m. er i hovudsak stein og andre naturmaterialer.\n* Mennesker lever av naturen - er jegarar og sankarar.\n\t* Kjent som nomader.\n* Ein lever eit nomadisk liv- ein er ikkje bufast.\n\t* Få byggverk frå perioden.\n* Får mange barn, eit kvart 3-5 år.\n\t* Liten befolkning.\n\n\nSidenote:\nFordi Noreg var dekket av IS opp til 10.000 år før kristus som tyder til at vi rekner steinalderen i Noreg frå 10.000 men i Europa er det cirka. 12000 år f.Kr.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Invers-funskjoner-trignometri.":{"title":"","content":"# Invers funskjoner-Trig.\n\n## Kva det er.\nInvers funksjoner i trigonometri er nesten litt som namnet forteljar, det er dei inverse funksjonen til dei normale trigonometri funkjsonene. Normalt settjar vi inn ein vinkel og får eit tall som vi kan bruke til å blant anna [[Finne side verdier gjennom trigonometri.|finne sider i ein trekant]], men ved inverse funksjoner kan vi settje inn dei [[Ulike sider i ein trekant.|ulike sidene i ein trekant]] og få den originale vinkelen.\n\nInverse funksjoner i trigonometri blir vist slik \n$funksjon^{-1}(side forholdet)=vinkel$.\n\n\nDøme på bruken av ein invers funksjon:\n\n$sin^{-1}(\\frac{1}{2}) = 30^{\\circ}$\n\nSom vi kan bekrefte ved:\n\n$sin(30^{\\circ}) = \\frac{1}{2}$\n\nDet er òg ein metode for å finne verdien til ein anna trigonometrisk funskjon viss vi veit ein av dei verdiene til dei andre døme:\n$sin(cos^{-1}(\\frac{1}{2}))$. \nMen det går og ann å berre bruke [[Pythagoras identiteten.]] når det er prat om cosinus og sinus, vi kan ikkje bruke identiteten når det er tan($\\theta$) involvert. Då fungerer det ikkje i det heile.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Inverse-funksjoner.":{"title":"","content":"# Invers funksjoner.\nVi kan tenke på ein funksjon som noko som tranformerer eit tall frå eit domene over til eit anna, til dømes $x$ blir til $y$. Ein invers funksjon derimot gjer det motsatte som den normale funksjonen, den går i frå det andre domenet til det første domenet. Til dømes $y$ over til $x$. \nNokre kjente inverse funksjoner er $sin^{-1}(x)$ denne tar inn eit [[Sinus|forhold]] av den normale $sin=\\frac{opp}{hyp}$, og gir ut vinkelen som når vi tar i gjennom $sin$ blir over til forholdet.\nBasically vi får vinkelen (vinkeldomenet) ut i frå forholdet (forhold domenet ) når det er normalt frå forhold (forhold domenet) over til vinkel (vinkeldomenet). \n\n\u003e[!WARNING] VIKTIGT:\n\u003eDet er viktig å bemekre seg på at ein invers funksjon er **ikkje** det samme som å settje den til $^{-1}$ grad, altså $\\frac{1}{noe}$ likevel vi ofte sier at ein recirprocal ofte er inversen, dette er sjeldant sant. Når vi snakker om invers funksjoner er det annleis og vi snakker om å skifte domener. \n\u003eVi må gjer algebra rekning for å finne den inversefunksjonen.\n\n\n### Formell definisjon.\nDen formelle definisjonen av inversfunksjoner er \nviss $f^{-1}(f(x))=x$ og $f(f^{-1}(y))=y$\nsom gir mening fordi å finne y verdien gjennom f(x) gir y og $f^{-1}(y)$ gir x.\n\nAlle inversfunksjoner er òg alltid [[Entydige funksjoner]].\nVertikale asymptotisers telje ikkje da fordi vell dei er udefinert verdier.\n\nAlle oddetall grafer har ein full inversfunksjon, men alle andregrader starter på eit spesifikkpunkt for inversfunksjonen, fordi $\\pm \\sqrt{noe}$.\nog vi bruker berre ein av dei $+\\sqrt{noe}$ eller $-\\sqrt{noe}$.\n\n\nEin viktig ting vi kan sjå er at dersom vi velger eit punkt på ein funksjon og den samsvarenede posisjon i inversfunksjonen kan vi sjå at x og y punktene er berre omvendt. $(a,b)$ er det samme som $(b,a)$ på inversfunksjonen. Berre husk at **alltid** er x først og y andt, dette gjelder òg inversfunksjoner. Dette viser berre sammenhengen.\nDette er vises gjennom at dei er symmetriske rundt linja $y=x$ og er inverse i punkta $(a,b)$.\n \n\n\n#### Egenskaper til inversfunksjoner.\n * Er ein [[Entydige funksjoner]]\n * $D_f = V_{f^{-1}}$ og $V_f = D_{f^{-1}}$\n * Grafene til $f(x)$ og $f^-1(x)$ er symmetriske om linja $y=x$\n * Viss punktet $(a,b)$ liggjer på $f(x)$ så er punktet $(b,a)$ på $f^{-1}(x)$\n * $f^{-1}(f(x))=x$ og $f(f^{-1}(y))=y$\n\t * Gir fullt mening. første finner først y og gir x til y verdien. \n\t * Andre gjer først y verdi over til x og så over til y igjen.\n * $f^{-1}(x)$ er strengt vaksende, viss bare **viss** $f(x)$ er det.\n\t * Sjå [[Entydige funksjoner]]\n * $f^{-1}(x)$ er stengt minskende viss og bare **viss** $f(x)$ er det.\n * Vi finner den omvendte funksjonen gjennom å manipulere dei ulike sidene av likninga $y=f(x)$ for å finne $x$ åleine.\n\n\n\n # Rekne ut invers funksjon.\nÅ rekne ut den inverse funksjonen er ganske lett egentelig, det er berre å drive med lett algebra og litt manipulasjon. Det viktige er å vite kva for noko domene den originale funksjonene går ut på. Til dømes : $y=f(x)$. Viss vi ønsker å finne ut ein $x$ verdi gjennom ein $y$ verdi må vi gjere simpel algebra.\n\nDet vi vil gjere er prøve å gjennom algebra få vårt ønsket inntaks domene satt åleine.\nSlik:\n$y=F(x)=\\frac{2x+5}{4-3x}$\n$y=\\frac{2x+5}{4-3x}$\n$(y)(4-3x)=2x+5$\n$4y-3xy=2x+5$\n$-2x-3xy=5-4y$\n$(x)(-2-3y)=5-4y$\n$x=\\frac{5-4y}{-2-3y}$\n$x=g(y)=\\frac{5-4y}{-2-3y}$\n\nGjennom denne nye funksjonen $g(y)=f^{-1}(x)$. Viss vi skal finne $f^{-1}(x)$ så er dette heilt lik som $g(y)$ vi berre bruker $x$ som variabel namnet i staden for $y$ , viss vi skifter ut $y$ med $x$ så får vi framleis samme svar. Men viss vi skal gjere det i geogebra må vi ha $y$ som inntaks verdi. Dette med å skifte inntaksvariablene tilbake er kinda viktig, det skifter ingenting med den nye inversfunksjonen, men det er standarisert.\n\nSlik ser disse invers funksjonene ut ved siden av kvarandre\n```desmos-graph\ny=\\frac{2x+5}{4-3x}\nx=\\frac{5-4y}{-2-3y}\n\n```\n\nDu legger ikkje merke til det, men her er to ulike funksjoner!\nDette er fordi funksjonene ser heilt like ut når vi settjer det inn i eit grafikkfelt, men dei har begge ulike inntaks verdier. Interesannt 😎\nDet er jo samme graf, berre ulike inntaksdomener!\n\n[[Polynom grafer]]\n[[Polynom aritmetikk]]\n[[Polynom terminologi]]\n[[Polynom faktorisering]]\n\n### Rekne ut kvadratiske eller høgere funksjoner sine inverser.\n\nDersom vi vil  ha ein funksjon som har ein høg grød så må vi klare å faktorisere den inn i eit enkelt polynom form, dette betyr ingen konjugatsetning, berre den første kvardatsetningen, og den andre kvadratsetningen.\n\nDeretter kan vi utføre kvadratrot på begge sidene og så isolere $x$ en.\n\n\n##### Dersom vi ikkje har ein fin polynom.\n\nDersom vi ikkje har ein fin polynom som kan gå rett inn i ein av dei to kvadrat første setningene så må vi tvinge den til å bli det 😈. Det betyr egentelig at vi ikkje krever nokon [[Polynom faktorisering#ABC Formel Kvadratiske formel|abc formel]]. \nVi kan nemleg ved å huske oppsettet til setningene til å tvinge dette frem. [[Polynom faktorisering]]\n\n\n$(a+b)^2=a^2+2ab+b^2$. Dersom vi deler vårt midt term på 2 og $a$ sin koeffisient så kan vi isolere ein $b$. Dette kan vi ta i nytte.\n\nDersom vi sier at vi tar denne $b$ en vi nettopp har kalkulert og plusser på den i andre grad og deretter minuser i andre grad så kan vi faktorisere ut den første delen, og så har vi ein ekstra del vi ikkje kan faktorisere. Men denne biten kan vi berre flyte over til andre side.\n\nLa meg heller vise i staden for å forklare 🗿:\n$y=x^2+3x-1$. \n\n```desmos-graph\ny=x^2+3x-1\n\n```\n\n\n\nVi vil ha vår $x$ verdi isolert.\nVi ser at denne følger ingen av kvadratsetningene fint, og vi vil **ikkje** bruke $ABC$ formelen fordi den kan gi svar som ikkje følger første eller andre kvadrat setning. **(Du kjem til å se kvifor vi vil ha dei første eller andre kvadratsetning.)**\n\nVi omskriver det slik\n$y=x^2+3x+(\\frac{3}{2})^2-(\\frac{3}{2})^2-1$\n\nVi ser nå at den første delen kan gå inn i første kvadratsetning.\n([[Polynom faktorisering]])\n\n$y=(x+\\frac{3}{2})^2-(\\frac{3}{2})^2-1$\n\n$y+(\\frac{3}{2})^2+1=(x+\\frac{3}{2})^2$\n\nNå kan vi berre ta kvadratroten av kvar side.\n**Dette er grunnen til at vi virkelig ønsker første eller andre kvadratsetning.**\n\n$\\pm \\sqrt{y+\\frac{3^2}{2^2}+\\frac{2^2}{2^2}}=x+\\frac{3}{2}$\n\n$\\pm \\sqrt{(y+\\frac{13}{4})}-\\frac{3}{2}=x$\n\n\n\u003e[!WARNING] HUSK $\\pm$\n\u003eHusk $\\pm$ ellers så får vi berre ein del av grafen.\n\n\n\nDer har vi vår invers formel, og vi startet med ein andregradsfunksjon.\n\n```desmos-graph\nx=\\sqrt{y+\\frac{13}{4}}-\\frac{3}{2}\nx=-\\sqrt{y+\\frac{13}{4}}-\\frac{3}{2}\n```\n\n\nDen grønne er den originale funksjonen\nog den blåe er omjobbinga av funksjonen, men vi har ikkje skiftet på inntaksvariablene. Dette viser tydeleg korleis grafene henger sammen originalt.\n\n\u003e[!WARNING] Dette er **ikkje** feil. Ikkje mistolk grafen.\n\u003eDu forventar kanskje at grafen skal sjå annleis ut i ein graf kalkulator. Men dei er jo heilt like fordi det er jo samme graf vi driver med, men forskjellige inntaksvariabler/domener.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Jordbruksrevolusjonen":{"title":"","content":"# Jordbruksrevolusjonen  (ca. 10 000 f.Kr).\n\nJordbruket oppsto i Midtausten, ca. 10 000 år f.Kr.\nI eit parti vi kaller for \"Den fruktbare halvmånen\".\n\nDette var ei gradvis endring - ikkje ein revolusjon!\n\nKonsekvensane innføringa jordbruk fekk, var gjennomgripande. \n$\\rightarrow$ Kanskje den største endringa i menneskehistoria!\n\nVi kaller det ein revolusjonen fordi det skaper ein revolusjon innanfor korleis mat blei produsert. Ikkje fordi det var akkurat ein rask forandring. Dette og revolusjonere samfunnet fordi fleire folk kune bufaste seg og slik.\n\nFrå å leve i et jeger og sankarsamfunn til å avle dyra og dyrke jorda sjølv.\nLevde i eit nomade samfunn over til eit bufast samfunn.\n$\\rightarrow$ Samfunnsbygging og by-vekst.\n\nEin dyrker maten sjølv, ein produsere det heilt sjølv, i staden for å hente frå naturen. Dermed kan ein bestemme over mengden mat sjølv.\n\nLettere å produsere eit overskot. \nDette overskotet tillater siviliassjoner til å bli grunnlagt.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Karbohydrater.":{"title":"","content":"# Karbohydrater.\n\n\n## Grunnleggende informasjon.\n\nKarbohydrater er ein ganske viktig grunnleggende stoff som blir brukt i mange ulike biologiske prosesser og reaksjoner. \n\nKarbohydrater består av karbon og hydrogen som namnet hintar til. Forhaldet mellom karbon og hydrogen er av 1:2. Eit karbon har 2 oksygen.\n\nSakkarider er eit synonym for karbohydrater, og går litt meir i dybde om oppsettet til karbohydrater. Sakkarider kan vere heilt aleine eller i lande rekker, dei kan bygge opp større og større sakkarider.\n\nMonosakkarider er den grunnleggende sakkarid, mono tyder ein. Det er denne sakkarid typen som bygger opp alle dei andre sakkarid typene.\n\nDisakkarider er den neste sakkarid, denne består av to ulike monosakkarider.  Di tyder 2.\n\nTrisakkarider er den tredje formen av sakkarid, denne består av tre ulike monosakkarider. Tri tyder 3.\n\nPolysakkarider er den neste formen av sakkarider, poly betyr fleire. Denne består av fleire enn 3 sakkarider. \n\n\nKarbohydrater er makro-molekyl, da dei består av ganske mangen molekyler.\n\n## Modeller av karbohydrater. \nGlukose er eit godt døme på eit monosakkarid.\n![250](https://i0.wp.com/issdichjung.de/wp-content/uploads/2017/02/glucose.png?fit=685%2C558)\n\nGlykogen er eit godt døme på eit polysakkarid.\n![500](http://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Glykogen.svg/800px-Glykogen.svg.png)\n\n\nSom du kanskje ser er eit monosakkarid ein sirkel og karboner, og polysakkarider er fleire slike sirkler sammansett. Dette kaller eg sirkelmoddelen.\n\nMen vi har òg ein anna form for sakkarider, sakkarider kan nemleg vere i lange kjede liknande formasjoner som ikkje liknar ein sirkel. Dette kaller eg kjedemoddelen.\n\nMonosakkarider er også det som kalles eit monom. Monom tyder til at det består berre av ein grunnleggende molekyl. \nOg polysakkarider er også det som kalles eit polynom. Det består atlså av fleire grunnleggjende molekyl, her monosakkarider.\n\n\n## Bruk av karbohydrater.\n\nDet er mange ulike bruker for karbohydrater i naturen og i biologiske prosesser. \nMen dei største brukene for karbohydrater i naturen er for energikjelder, men det kan også bli brukt som til dømes å skape ein struktur. \nTil dømes er cellulose skapt av karbohydrater og blir brukt i planter for struktur i celleveggen til cellene i planten.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Katalysatorer.":{"title":"","content":"\n# Katalysatorer.\n\nEin katalysator er eit stoff som forandrer mengden [[Aktiverings energi.]] som er krevd for at ein reaksjon mellom to ulike stoffer skal skje. Det er dei ulike egenskapene til stoffet som forandrer aktiveringsmengde energien som er krevd, disse egenskapene varierer alt i frå å dytte på strukturen til nokon av stoffa, eller vere [[pH, syrer og baser.|syrisk eller basisk]]. Måten dei simpelt sagt auker sjansen for at reaksjon skjer (gjennom å forandre aktiveringsenergien som er krevd) går som sagt ved at katalysatoren er tilpasset seg slik at reaksjonen finner det meir gunstig å gjere reaksjonen.\n\nEin biologisk katalysator er [[Enzymer]], som oftast er [[Proteiner og aminosyrer.|protein strukturer.]]\n\n\u003e[!WARNING] HUSK\n\u003eNesten alltid vil ein katalysator minske aktiveringsenergien som er krevd, men det sjølvsagt unntak som viss katalysatoren kanskje er øydelagt, eller det er eit sært unntak.\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kinematiske-formeler-Ikkje-konstant-akselerasjon.":{"title":"","content":"# Kinematiske formler for varierende akselerasjon.\n[[Kinematiske formeler - Konstant akselerasjon.]] nesten likt.\nDei kinematiske med konstant akselerasjon kommer i frå dei med varierende akselerasjon.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kinematiske-formeler-Konstant-akselerasjon.":{"title":"","content":"# Kinematiske formeler for konstant akselerasjon.\n\nDei ulike kinematiske formelene for konstant akselerasjon viser ulike metoder for å kalkulere dei ulike verdiene når ein veit dei andre verdiene, og akselerasjonen er konstant. Dette fungerer **ikkje** når vi har ein varierende akslerasjon. Viss du ikkje forstår symbolene gå over til [[Symboler]].\n\n## Dei ulike formelene.\n1. $V_f=V_{0} + a\\times \\Delta t$\n2. $\\Delta x. =(\\frac{V_f+V_{0}}{2})\\times \\Delta t$\n3. $\\Delta x = V_{0}\\times \\Delta t + \\frac{1}{2}a\\times (\\Delta t)^2$\n\t1. Vi kan finne $x_f$ gjennom ABC formel og: $x_f=\\frac{1}{2}a(\\Delta t)^2+V_0+x_0$\n4. $V_f^2=V_{0}^2+2\\times a \\times \\Delta x$.\n5. $\\overline{a} = \\frac{\\Delta v}{\\Delta t} = \\frac{V_{f}-V_{i}}{t_{f}-t_{i}}\\space (konstant/gjennomsnittleg \\space akselerasjon)$ \n6. $\\overline{v}=\\frac{\\Delta x}{\\Delta t}=\\frac{x_f-x_i}{t_f-t_i} \\textit{(gjennomsnittleg fart)}$ \n7. $\\Delta x. = x_{f}-x_{i}$.\n\n\u003e[!P.S - post scriptum]\n\u003e$V_0 = V_i$\n\n## Bevisning av dei ulike formlene.\n1. $V_{f} = V_{0}+a \\times t \\space \\space = V_{0}+\\frac{V_{f}-V_{0}}{\\Delta t}\\times \\Delta t \\space \\space = V_{0} + V_{f}-V_{0} \\space \\space = V_{f}$, $V_{f}=V_{f}$.\n2. Vi veit at forskyvningen er berre arealet under grafen på ein hastighet vs tidsgraf, dette tyder til at vi trenger berre ein formel som gir samme areal under grafen når vi ikkje aner kva akselerasjonen er, dette kan vi gjere ved å addere start hastigheten og slutthastigheten og dele det på 2 (Finne gjennomsnitt hastighet) så gange med tid for å gjere over til forskyvning. \n3. Her finner vi først arealet til rektangelet nederst, så finner vi arealen til trekanten øverst. (Dette blir alltid skapt ved ein konstant akselersajon). Altså $\\Delta x = V_{0}\\times \\Delta t \\space (\\text{Arealet til rektangelen}) + \\frac{1}{2}a\\times (\\Delta t)^2$\n\t1. $(\\text{Arealet til trekanten, vi har tid i andregrad fordi akselerasjon har ein andregrad av tid!})$\n4. $V_{f}=V_{0}+a\\times \\Delta t$,       $\\Delta t = \\frac{V_{f}-V_{0}}{a}$.     $\\Delta x = (\\frac{V_{f}+V_{0}}{2})\\times \\Delta t$.                        \n\t1. $\\Delta x = (\\frac{V_{f}+V_{0}}{2})(\\frac{V_{f}-V_{0}}{a})$\n\t2. $\\Delta x = (\\frac{V_{f}^2-V_{0}^2}{2a})$\n\t3. $V_{f}^2=V_{0}^2+2\\times a \\times \\Delta x$","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kinetikk.":{"title":"","content":"# Kinetikk.\nKineitkk er studien av reaksjoner mellom [[Kva er grunnstoffer og atomer.|stoffer]].\n\nFor at ein reaksjon skal skje krevest det ein viss mengde energ, denne energien kan oppstå på fleire ulike metoder som gjennom [[Katalysatorer.]] eller gjennom rett og slett energien til to stoffer som kolliderer.\n\nLa oss sjå litt nærare på reaksjoner gjennom kollidering:\n## Kolliderings basert reaksjon.\nFor at to ulike stoffer skal lage ein reaksjon kan dei få energien gjennom ein kollisjon. Rett før dei to ulike stoffene kolliderer så oppnår dei ein stadie kalt \"Høg energi stadier\", som namnet hintar til er ein det ein høg energi tilstand mellom dei to ulike stoffene. \n\nEtter kollisjonen viss dei har ein høg energi tilstand vil dei oppnå eit lavere energi tilstand etterpå i form av nye stoffer.\n\nLa oss sjå på eit døme:\n$H_2(g)+I_2(g)=2HI (aq)$. \nKorleis går disse to over til to nye stoffer av ein typ $HI$.\nViss vi ser på strukturen til disse to ulike stoffene vil dei sjå slik ut:\n\nDijod:\n![](https://tuktukstudy.com/wp-content/uploads/2022/03/Lewis-structure-I2.png)\nDen har sju elektroner i ytterste skal som gjer at den gjer ein enkel elektron parbinding med eit anna av lik typ.\n\nDihydrogen:\n![](https://study.com/cimages/multimages/16/imgpsh_fullsize_anim_81537771220841807388.jfif)\n\n\nSom vi kan sjå er begge allereie i bindinger, og vil ikkje binde seg med andre molekyl.\n\nMen når ein kollisjon skjer vil noko spesielt skje. Når dei to ulike molekylene rett før kollisjon vil det vere ein slik stor energi til staden at dei bryter sine originale bindinger og går inn i ein ny struktur. Denne stadien heiter \"høg energi stadiet\".\nMinimum energien som er krevd heiter \"[[Aktiverings energi.]]\". Når den oppnår eit energi mengde som er $\\ge$ aktiverings energien vil den skifte struktur. Dette er fordi den kan deretter oppnå ein lavere energi stadie som molekyl ofte vil ha.\n\n\nHer er eit diagram over utviklinga til strukturene.\n\n![[Kinetikk. 2022-07-14 15.20.23.excalidraw|500x500]]\n\nOriginalt har den ein delvis høg energi stadie så oppnår det ein så stor energi stadie at den vil gjere alt mogleg for å oppnå ein lavere ein så den bryter sine bindinger og skaper ein lavere ein.\n\n\nSlik ser utviklinga:\n![[Kinetikk. 2022-07-14 15.26.19.excalidraw]]\n\n\n\n\u003e[!WARNING] IKKJE ALT HAR SLUTT LAVERE ENERGI STADIE.\n\u003eBerre [[Metabolisme.#Viktig|eksergoniske]] reaksjoner som gir ut energi vil oppnå ein lavere energi stadie, derimot endergoniske som har ein høgere energi stadie krever meir energi fordi dei har ein høgere normal energi stadie. $\\Delta G$ tyder forandring i potensiell energi.\n\u003eSlik ![](https://useruploads.socratic.org/x8f0LOASpOgRxdB7DKeg_51.jpg)\n\n\n\n## [[Katalysatorer.]]\nEin katalyse skifter ikkje noko på reaksjonen, men den får den til å entens skje raskere/saktere, eller får den til å i det første skje.\n\nDet er svært mange ulike typer katalyser.\nHovudsakeleg er det to kategorier.\n\n1. Positive katalyser.\n\t1. Gjer den krever mindre aktiveringsenergi til å skje.\n2. Negative katalyser.\n\t1. Gjer den krever meir aktiveringsenergi til å skje.\n\n\n\n## Anna viktig å vite om kinetikk.\n1. Auk konsentrasjon av molekyler auker òg sjansen for at reaksjonen skjer.\n2. Aukt overflate auker sjanse for reaksjon.\n\t1. Til dømes ein saltkube kan berre ha overflatene som reagerer med vatnet, det indre vil ikkje bli påvirket. Dermed høgere overflate, høgere sjanse.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kinetisk-energi.":{"title":"","content":"[[Fart]]\n[[Kva er energi?]]\n\n## Kva er kinetisk energi.\nKinetisk energi er energien eit objekt har/krev når den beveger seg. Ein gjenstand som beveger seg har ein kinetisk energi somer lik det [[Arbeid]] som må til å sette gjenstanden i bevegelse.\n\n\n## Formel\n$\\huge E_k=\\frac{1}{2}\\times m\\times v^2$, der v er fart og m er masse.\nFarten må ver i m/s og ikkje km og masse i kg. Måles i [[Symboler|Joule]]\n\n## Setningen om kinetisk energi.\n[[Arbeid]]\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kjente-sjukdommer-og-beskyttelse-mot-sjukdommer.":{"title":"","content":"# Ulike kjente normale sjukdommer.\n## Feber\nFeber er ein reaksjon på [[Infeksjon og smitte]] der kroppen skaper store mengder varme for å hindre den kalde temperaturen som ein ofte føler, dette kan lede til overskudd av varme i kroppstemperatur. Av og til gjer kroppen seg sjølv varme.\n\n## Hovne lymfeknuter.\n\nDersom det er ein høg mengde aktivitet kan det skje at [[Lymfesystemet.|lymfeknutene]] blir hovne fordi det skjer så stor aktivitet med [[Det tilpassede immunforsvaret.]] der [[B-celler]] og [[T-celler]] og [[Det medfødte immunforsvaret.#Det medfødte indre forsvaret.|dendrittiske og fagocytter]] som overfører smitte over slik at det kan bli anerkjent\n\n\n# Vaksiner.\n# \n\n\n# Antibiotika.\n\n\n\n# Passiv immunitet.\n\n\n\n# Forebygge og beskytte vaksiner mot sjukdom på individ og populasjonsnivå. \n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kloroplast.":{"title":"","content":"# Kloroplast.\n\nKloroplast er berre funnet i planter og fotosyntetiske alger. (Mennesker og andre dyr har ikkje kloroplast. ) Kloroplastens jobb er å omdanne $CO_2$ og $H_2O$ over til $C_6H_{12}O_6+O_2$ gjennom ein rpsess alt \"fotosyntese\". [[Fotosyntesen]] omdanner stoffer over til druesukker  ($C_6H_{12}O_6$) med solernergi. Slik at planten kan bruke det.\n\nI [[Metabolisme.#Bygge opp glukose Fotosyntesen|fotosyntesen]], [[Fotosyntesen]] blir solenergi fanget og brukt til å lage sakkarider i frå $CO_2$ og $H_2O$. [[Karbohydrater.|sakkaridene]] produsert i fotosyntesen kan bli brukt av plantecellen eller spist av eit organisme som eit menneske. Energien lagret i disse sakkaridene blir høstet slik at [[Introduksjon til cellen.|cellen]] kan bruke energien i gjennom ein prosess som heiter \"[[Cellulær respirasjon.]]\" som skjer i [[Mitokondria]] av dei [[Introduksjon til eukaryote celler.|eukaryote cellene]]. Kloroplaster disk formet [[Kva er organeller - organeller i eukaryotiske celler.|organller]] og har ytre og indre [[Introduksjon til cellemembranen|membraner]] med eit \"intermembran rom\" i mellom. I senteret (innerst inne i kloroplastet) finner ein membranbundet disker kjent som \"Thylakoider\" arrangert i sammenkoblede stabetl kalt \"Grana\" (Eintall:\"Granum\"). I dise diskene er det lysfangenede komplekser som inneholder klorofyll (eit pigment som gir cellen fargen). Thylakoider er hule og rommet inne i er kjent som  \"lumen\". Og væsken som omrignder Thylakoider heitere \"Stroma\".\n\nHer er eit diagram på engelsk:\n![](https://cdn.kastatic.org/ka-perseus-images/3cfb6345270232cd45b0e8a1a5807fa4cf0e0a83.png)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Komplekse-imagin%C3%A6re-tall-Aritmetikk":{"title":"","content":"# Komplekse og imaginærte tall Aritmetikk\n\n# Første.\n\nDet aller første vi gjer er å [[Simplisifesere røtter av negative tall|simplisifisere røttene som innehalder negative tallene]], eller finne [[Imaginære tall|i]] verdien.\n\n\n# Addisjon\nAddisjon med komplekse tall er faktisk svært lett. Det er nesten heilt likt som med [[Polynom aritmetikk]], vi later som at [[Imaginære tall|i]] er ein variabel i staden for $\\sqrt{-1}$. Vi deretter fortsetter som det var polynom aritmetikk, vi opner parantesene og adderer [[Polynom terminologi#Term ledd|leddene]] som innehalder samme grad/eksponent verdi ($1^2$ og $2^2$ har samme eksponent verdi). Vi får då eit nytt kompleks tall.\n\nDøme:\n$(1+2i)+(3-3i)$\n$\\rightarrow 1+2i+3-3i$\n$\\rightarrow 1+3+2i-3i$\n$\\rightarrow 4-1i$\n$\\rightarrow 4-i$\n\n\n# Subtraksjon\nHeilt likt som med [[Polynom aritmetikk#Subtraksjon av polynomer|polynom subtraksjon]]. Vi setter det som skal bli subtrahert inn i ein parantes med forteiknet $-$ (Eller koeffisienten $-1$). Vi deretter multipliserer alle ledda inn i polynom som subtraherer med forteiknet/koeffisienten, Vi deretter drar polynomene ut av parantesene og fortsetter med å [[Komplekse-, imaginære- tall Aritmetikk#Addisjon|addere]] dei termene med samme $i$ grad sammen.\n\nDøme:\n$(3+i)-(2+i)$\n$\\rightarrow (3+i)-2-i$\n$\\rightarrow 3+(-2)+i+(-i)$\n$\\rightarrow 3-2+i-i$\n$\\rightarrow 1$\n\n\n# Divisjon\nDivisjon med komplekse tall\n\n\n\n# Multiplikasjon\n\n### Multiplikasjon av berre imaginære tall:\nViss vi har ingen koeffisienter fungerer dette heilt likt som med eksponenter, $i \\times i = i^2$. Men viss vi har koeffisienter må vi multiplisere disse sammen før vi samler $i$ tallene. Deretter ser vi berre på eksponent mønsteret, og finner denne verdien og multipliserer med koeffisienten.\nEksempel:\n\nViss vi har koeffisienter, multipliserer vi disse sammen, og deretter multipliserer dei imaginære tallene sammen. Og fortsetter som vi gjorde over, ved å se på mønsteret, for det imaginære tallet, og så multipliserer vi denne mønster verdien med koeffisienten.\n\nEksempel:\n$2i\\times 3i$\n$= 6i^2$\n$= 6\\times(-1)$\n$= -6$\n\n### Multiplikasjon av kompleksetall.\n\nMultiplikasjon av komplekse tall er egenteleg svært enkelt, og er heilt likt som med [[Polynom aritmetikk#Multiplisering av polynomer|multiplikasjon av polynomer]], vi later som $i$ er ein variabel, og forsetter med å multiplisere normalt som i ved polynomer.\n\nEksempel:\n$(2+i)(2+i)=2^2+2\\times2\\times i + i^2$\n$\\rightarrow 4+4i+i^2$\n$\\rightarrow 4+4i+(-1)$ (Sjekk ut eksponenter av $i$ viss du ikkje forstår kvifor $(-1)$ ).\n$\\rightarrow 4-1+4i$\n$\\rightarrow 3+4i$\n\n# Eksponenter av [[Imaginære tall|i]].\n\nUlikt normale tall har $i$ eit fast verdi mønster når vi settjer den til ein eksponent.\nDen veksler mellom positiv og negativ 1, og positiv og negativ $i$, ettersom eksponenten øker. $i$ har ein syklus på $i$, $-1$, $-i$, og $1$ når den opphøgd i stigende ekspontener.\n\nMønsteret:\n$i^0=1$\n$i^1=i$\n$i^2=-1$\n$i^3=i^2\\times i \\rightarrow -1\\times i \\rightarrow -i$.\n$i^4=i^3\\times i \\rightarrow (i)(i)(i)(i) \\rightarrow (-1)(-1) \\rightarrow 1$.\n$i^5=i^4 \\times i \\rightarrow 1 \\times i \\rightarrow i$\n$i^6=i^5 \\times i \\rightarrow i \\times i \\rightarrow -1$\n$i^7=i^6 \\times i \\rightarrow -1 \\times i \\rightarrow -i$\n$\\dots$\n\n### Finne verdi av $i$ opphød til store eksponenter.\nVi tar og bruker syklusen, og spesiellt $i^4$ av syklusen.\nVi tar og skriver om på eksoponent slik at vi får ein $i^4$ opphøgd til ein annen verdi, då $i^4$ er alltid lik 1, vil dette få vekk store deler av reknestykket.\nViss ikkje det går ann å dele eksponenten på 4 og få det som $(i^4)$ blir opphøgd i, må vi dra nokre tall frå eksponenten inn i ein eigen $i^{antall \\space dratt \\space ut}$. Dette gjer at vi kan skrive om det til å få ein $(i^4)^{noko} + i^{antall \\space dratt \\space ut}$.  Viss vi har ein koeffisient, gjer vi det samme med $i$ verdien som om det var berre $1$ i koeffisient, og etter på ganger verdien vi får med koeffisienten.\n\nEksempel:\n$(i^{100})$\n$\\rightarrow (i^4)^{25}$\n$\\rightarrow 1^{25}$\n$\\rightarrow 1$\n\nMeir komplisert eksempel:\n$(5i^{250})$\n$\\rightarrow 5 \\times i^{250}$\n$\\rightarrow 5 \\times i^{240} \\times i^{10}$\n$\\rightarrow 5 \\times (i^4)^{60}\\times i^{10}$\n$\\rightarrow 5 \\times 1^{60} \\times i^{10}$\n$\\rightarrow 5 \\times 1 \\times i^{10}$\n$\\rightarrow 5 \\times (i^4)^{2} \\times i^2$\n$\\rightarrow 5 \\times 1 \\times i^2$\n$\\rightarrow 5 \\times -1$\n$\\rightarrow -5$.\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Komplekse-tall":{"title":"","content":"## Komplekse tall, ein kombinasjon mellom reelle tall og imaginære.\n\nEin kombinasjon mellom ekte og imaginære tall, kalles eit kompleks tall. Det er altså ein blanding mellom reelle tall, som $\\pi, \\space e, \\space \\dots$, og imaginære tall altså $i$. Men tingen er at komplekse tall er når vi addere/subtrahere ekte tall med imaginære tall. Ikkje når vi multiplisere eller dividere med imaginære tall. Det er altså ein overgang i mellom det reelle (ekte) tallsystemet ($1,2,3\\dots$), og det imaginære tallsystem ($i$). \n\n\nEit kompleks tall har den generelle strukturen av:\n$a+bi$.\nDer $a$ er det reelle tallet, og $b\\times i$ er det imaginære tallet. \nVi pleier ofte å tenke at $b$ er berre det imaginære tallet i likningen, då $i$ forklarer berre at det imaginært mens $b$ forteller verdien til tallet.\n($bi$ åleine er ikkje eit kompleks tall!)\n\nAlle reelle tall kan vi faktisk si at er komplekse tall, fordi då er $b$ verdien i $bi$ lik 0. Slik er den både reell og eit kompleks tall, men har sjølvsagt ingene imaginære tall i dette komplekse tallet, fordi $0\\times i = 0$. Reelle tall er altså subsets av komplekse tall, likt er [[Imaginære tall]] også subsets. (Tenk viss $a=0$).\n\n\nKomplekse tall, eksempel:\n$5+3i$\n$2+i^3$\n\n### Fun fact:\n$0$ er både reell, [[Imaginære tall|imaginært]] og eit [[Komplekse tall|kompleks tall]].\nDen kan skrivest som $0+0i$ og dermed eit kompleks tall.\nDen kan skrivest $0i$, dermed er det eit [[Imaginære tall|imaginært tall]].\nOg fordi $0$, kan skrivest som det reelle tallet $0$, er det som sagt også reellt.\n\n\n## Ein kul ting med [[Polynom grafer|polynomer]].\n\nAlle polynomer kan løsest med komplekse tall. Har du brukt [[Polynom faktorisering#ABC Formel Kvadratiske formel|ABC formelen for kvadrat polynomer]] finner du kanskje at du ofte ender opp med ingen reelle løysningar. Her kan vi ta i bruk imaginære tall.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Konsentrasjonsgradient":{"title":"","content":"# Konsentrasjonsgradient. \n\nKonsentrasjonsgradienter finner vi svært ofte i [[Diffusjon]] spesielt når vi driver med gassstoffer. \nEin konsentrasjonsgradient viser korleis eit stoff vil gjennomsnittleg fordele seg utover volumet slik at alt ligger gjevnt. \n\nDet er viktig å bemerke seg på at uansett kva stoffer vi har og kva størrelse dei er så vil dei alltid gjevne seg ut. Dei ulike stoffene kan ha ulike konsentrasjonsgradienter, men til slutt vil alle lige gjevnt.\n\nHer er eit døme på ein konsentrasjonsgradient for eit stoff.\nPilene er basically konsentrajonsgradienten. Stoffene kjem til å fordele seg gjevnt utover heile volumet.\n![](http://acf-file.echemi.com/fileManage/upload/community/20220531/SltDs.jpg)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Konstruere-eksponetielle-modeller":{"title":"","content":"# Konstruere eksponetielle modeller\nNår vi har ulike punkter som vi vil gjere over til ein eksponentielle funksjon kan vi ta i bruk dei ulike punktene til å skape ein slik eksponentielle modell.\n\nDet generelle oppsettet til ein eksponentiell modell er slik:\n$\\LARGE a\\times b^{\\frac{c}{d}+e}$.\n\n$a$ verdien er start verdien til funksjonen, og $b$ er faktoren som blir multiplisert med kvar $c/d$ ganger. Når $c$ er ein multiplikator av $d$ så er denne likningen lik eit integer. Vi kan òg skrive at $b^{\\frac{c}{d}+e}=b^{\\frac{c}{d}}\\times b^e$. Når $e$ = 0 vil $b^e$ vere lik $1$. \n\nVi kan bekrefte at dette oppsettet er rett med funksjonen:\n$x^2$ som er det samme som $1\\times x^{\\frac{2}{1}+0}$, og når vi forkorter får vi nøyaktig samme funkjson.\n\nDenne funksjonen ser slik ut:\n![[Screenshot 2022-07-06 at 20.19.29.png]]\n\n\n\n\n## Steg og dømer for å konstruere ein funksjon.\n\nSteg. \n1. Finne start verdi også kjent som $a$ verdi. \n\t1. Viss vi allereie har ein funksjon vi vil forkorte kan vi dra ut $e$ verdien, og multiplisere den med den originale $a$ verdien, dette gjer at vi finner den faktisk originale start verdien.\n2. Finne multiplisering faktor, også kjent som $b$ verdi.\n3. Finne ut kva $c$ og $d$ skal vere.\n\t1. Viss vi har eit sett punkter som har ein faktor verdi i mellom kvarandre, men har ein større $x$ verdi enn $1$, så er $d$ verdien distansen mellom punkta som har den faktoren, og $c$ er da $x$ verdien.\n\t2. Av og til har vi faktisk $x$ som $b$ verdi, og vi har ein konstant $eksponent$, når vi har dette så trenger vi berre å sjå på om det er ein samanheng mellom dei ulike punkta som er konstant. Til dømes:\n\t\t1. $1^2=1, 2^2=4, 3^2=9.$ Vi ser at det er ein samanheng mellom 1 4 og 9, og det samanheng er at alle er eit kvadrat av ein økende $x$ verdi.\n4. Finne ut om vi har ein $e$ verdi eller ikkje.\n\t1. Som oftast har vi ikkje ein $e$ verdi fordi vi kan dra denne inn i $a$ verdien, men av og til gir det meir mening å heller ha ein modell som har ein $e$ verdi. Dette kan til dømes vere viss vi starter ved $sekund \\space 5$, og vi har fått ein oppgitt startverdi som er med $sekund \\space 0$. Her hadde det gitt mening å ha ein $e$ verdi på $5$.\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kontinuerleg":{"title":"","content":"Basically at den kan bli teiknet utan å løfte blyanten. Ingen vertikale asymptoter.\n\n\nDersom [[Grenseverdier#Første type grenseverdi]] i mot eit punkt a på ein funksjon f(x), og [[Grenseverdier#Andre type grenseverdi.]] i mot eit punkt a på ein funksjon f(x) og f(a) er like i verdi betyr dette at grafen er kontinuergleg i det punktet.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kreft.":{"title":"","content":"# Kreft.\n\nUnder [[Ulike typer reproduksjon.#Aseksuell reproduksjon|celledivisjon]] av [[Prokaryote og eukaryote celler]] gjennom til dømes [[Mitose.]] kan det foregå mutasjoner i cellene. \n\nSom oftast dersom ein mutasjon er svært openbare pleier ein celle å drepe seg sjølv for å unngå at den skal påvirke det større fleircellet organisme, dersom det er ein [[Introduksjon til eukaryote celler.|eukaryote celle]], openbart. Denne prosessen av sjølvmord for ein celle heiter \"*apoptose*\".  [[Apoptose]]\n\nNokre celler med mutasjoner vil  unngå dette med apoptose og gjere at cellen vil dividere seg sjølv likevel den har ein mutasjon. Når slike celler dividerer, blir dei nye cellene referte til kalt for \"*neoplasma*\". Og alle disse cellene som har disse mutasjonene men unngår apoptose blir kalt for \"*kreft-celler*\", dette er òg grunnen til at det vanskelig å kurere kreft, det er fordi alle mutasjonene er forskjellige og gjer at vi må ha ein løysing for kvar enkelte mutasjon. Vi kan nemleg ikkje kurere alle mutasjonene samtidig med ein simpel kur.\n\nNokre mutasjoner kan gjere at dei vokser super raskt, og er super invsasiv. Dette gjer at dei bryr seg ikkje om cellene rundt seg. Normalt vil ein celle ta hensyn til cellene rundt seg, og stoppe å vokse når den merke til at den presser på cellene rundt seg. Når cellene stopper å vokse når dei kjemer i kontakt med cellene rundt seg blir dette kalt for \"*kontakt inhibitasjon*\".\n\nLikt kan mutasjonene og gjere at dei kanskje dividerer seg super raskt som gjer at den blir svært stor i størrelse raskt.\nOg nokre mutasjoner tillater cellen å gå rundt i organismet, den altså bryter seg i frå normale cellestrukturen som organismet har. Denne prosessen av celler som går rundt i organismet og sprer seg slik blir kalt for \"*metastase*\", og slike celler blir gjerne referert til \"*metastaserte*\" celler. Dette er den primære måten kreft kan spre seg til alle kroppsdeler raskt.\n\n\nNår det kjemer ein svært stor grad av slike celler blir disse mange cellene kalt for ein \"*kreft-svulst*\". Nokre av disse svulstene har mutasjoner som faktisk ikkje er farleg for individet, og gjer at den ikkje er så farleg å ha eller ikkje ha. Ein slik svulst blir kalt for ein \"*godartet svulst*\", men nokre svulster, som oftast, er svært farlege for indivdetet, og kan lede til daud.\n\n\u003e[!INFO] Alle kan få kreft 🥳🍸🍾🥂.\n\u003eFordi kreft er berre ein mutasjon som skjer med celler gjer dette at alle sammen kan få kreft, ikkje berre dei som røyker, og fordi alle organismer inneholder celler, fordi dei er jo sjølvsagt byggesteinene til liv som nemnt i [[Grunnleggende celleteori.]] betyr dette at alle celler til og med [[Dyreceller og planteceller.|planteceller]] kan få kreft. \n\n\nKreft visualized:\n![[Kreft. 2022-07-27 16.55.02.excalidraw|1000]]\nOg dette kan òg spre raskt til andre deler av kroppen gjennom metastase mutasjoner.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Krigerproteiner.":{"title":"","content":"[[Immunforsvaret.#Det indre forsvaret.]]\n\nKrigerproteiner er viktige i kjempe uønsket mikroorganismer.\nDEtte gjer den gjennom å merkere celler, og bruker ulike molekyl på overflata til mikroorganismet, her settjer den i gang fleire ulike prosesser som hjelper den å bryte ned mikroorganismet,  deretter tilkaller den [[Fagocytter]] som hjelper å avslutte livet til det uønsket mikroorganismet.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kromosomer-Kromatider-Kromatiner.":{"title":"","content":"# Kromosomer.\n# Kromatin.\nI ein [[Introduksjon til cellen.|cellen]] pleier ikkje [[DNA]] å leve heilt åleine, men pleier å være nær spesialiserte [[Proteiner og aminosyrer.|proteiner]] som organiserer den og gir dens struktur. I [[Introduksjon til eukaryote celler.|eukaryoter]] er ein av disse protein typene bla. \"*Histoner*\". Histoner er ein gruppe positivt ladet proteiner som \"fester\" seg til DNA-et og sine negative ladet deler. Måten den legger seg på organiserer DNA og gjer den meir kompakt. I tillegg spiller histoner ein viktig rolle i å bestemme kva for nokre gener som er aktive på DNA-et. (Alle celler inneholder likt DNA, men ikkje alle celler gjer det samme). DNA + Hisoner og andre slike strukturelle proteiner blir kalt *kromatin*.\n\nSlik ser histoner ut:\n![400](https://media.snl.no/media/203096/standard_3_nukleosom.png)\n\n\n\nOg slik vil DNA-et sjå ut etter å vere omringet av histoner og andre strukturelle proteiner.\n![300](https://media.snl.no/media/133356/standard_3_kromosomer_2.png)\n\n\n\nI den største delen av livet til ein celle er kromatin *dekondensert* som tyder til at den lever i lang tynne strimler som ser ut som krøller under eit [[Mikroskopi|mikroskop]]. I denne formen er DNA ganske lett å få tak i for cellulære prosesser, som til dømes proteiner som leser og kopierer DNA, som er ganske viktig for at cellen skal kunne vakse og funksjonere.\n\nKromatin kan òg vere det som er kalt for *kondensert* som er litt som det motsatte av dekondensert, kondensert er når DNA ikkje ligger i slike krøller, men viser sin meir sanne form. Når ein celle skal dividere seg til å bli to celler, så vil DNA-et vise seg til å ikkje berre vere ein lang strimle av genetisk informasjon, men den faktiske genetiske informasjonen som cellen består av, er faktisk delt opp i mange ulike sepererte linære biter av DNA kalt for **kromosomer**. [[Prokaryote celler.]] har òg kromosomer, men deirast kromosomer er ofte sirkulære, og ligger flytende rundt i cytoplasmaet. I [[Introduksjon til eukaryote celler.|eukaryote celler]] ligger det kromosomer i cellekjernen, og i [[Mitokondria og Kloroplast]].\nMitokondria og kloroplast har egen DNA-er, fordi dei antagenteligvis var originalt prokaryoter.\n\n### Kromosomer.\nKvar art av organismer har eit karakteristisk nummer av kromosomer. Mennesker til dømes har normalt 46 kromosomer i ein normal celle (somatisk celle) (kan òg ha mindre eller meir dersom det skjer ein genetisk feil i kopiering under celledivisjon/smelting av eggcelle og sperm). Men andre organismer som hunder har normalt 78 kromosomer. Likt som mange arter av dyr og planter har mennesker diploider celler ($2n$), som betyr at kromsomene kommer i par som er kjent som homologe par. Dei 46 kromosomene ein menneske celle pleier å ha er organisert inn i 23 par, og dei to medlemmene av kvar part er kjen til å vere homologe av kvarandre. (Utanom unntaket om $X$ og $Y$ kromosomene). \n\nMenneske sperm og eggceller, som har berre eit homolog kromosom frå kvart par er sagt til å vere haploide ($1n$). Når ein sperm og ein eggcelle smelter saman, så vil deirast genetisk materiale kombinerere til å forme ein komplett diploid sett av kromosomer. Så for kvart homolog par av kromosomer ditt genom, så kommer eine av dine homologer frå faren din, og ein av frå moren din. Altså du får 23 krosomer frå faren din og 23 frå moren din. \n\n![](https://cdn.kastatic.org/ka-perseus-images/60d818e8ddb088e999f20293a541cfcc48facae4.png)\n\n### Homologe kromosomer\nAt to kromosomer er homologe par betyr at dei er svært like til kvarandre, og har samme størrelse og form. Viktigast er at dei inneholder smamme genetisk informasjon; ikkje at dei nødvendigvis inneholder samme versjoner av gener men at dei inneholder dei samme genene på samme steder. (Disse versjonene har det vitskaplege namnet av *alleler*) Dette er jo sjølvsagt openbart fordi du får forskjellig genetisk informasjon frå din far og din mor. Viss det hadde vore samme versjoner av genetisk informasjon så hadde alle på jordkloden sett nesten heilt like ut i frå eit genetisk perspektiv. (Vi sjår vekk i frå mutasjoner, og andre genetiske feiler). \n\nTil dømes: viss vi ser på eit gen i kromosom nummer 9 så er dette genet den som bestemmer i stor grad din blod type (A,B,AB,O), (Ikkje berre dette genet, det er mykje meir komplisert, biologi er svært kompleks og nesten aldri er ein ting basert berre på ein anna ting). Det er mogleg for ein person å ha to identiske kopier av dette genet, kvart på eit homolog kromosom, til dømes du kan ha ein dobbel \"dose\" av gen versjonen for blodtype A, som resulterer i at du får blodtype A. Eller du kan ha ein versjon som gir A, og ein versjon som gir B, som resulterer i AB blodtype.\n\n### Sex kromosomer.\nSex kromosomene kjent som $X$ og $Y$ bestemmer individets biologiske sex, $XX$ skaper hukjønn og $XY$ skaper hankjønn. Disse kromsomene er ikkje \"ekte\" homologer, og er eit unntak til regelen av lik gener i samme steder. Unntat frå nokre små regioner der absolutt likhet er nødvendig i løpet av [[Meiose.]] , eller seksuelle celle reproduksjon, er disse $X$ og $Y$ kromosomene forskjellige og inneholder forskjellige gener. Dette er fordi dei inneholder genetisk informasjon til dei ulike biologiske kjønnene, hukjønn har ikkje lik biologisk reproduksjon system og liknande kjønnslegemer som hankjønn. Disse kromosomene definerer alt som gjer hukjønn til hukjønn og hankjønn til hankjønn. \nDei $44$ andre ikkje-sex kromosomene i mennesker blir kalt for *autosomer*.\n\n## Kromosomer og celledividering.\n![](https://cdn.kastatic.org/ka-perseus-images/9c78a546453c8935e7e5a19e55a1a3b8c6ab611d.png)\n\n\nNår ein celle gjer seg klar til å dividere, må den skape ein kopi av kvar av sine kromosomer. Dei to identiske kromosomene blir kalt for *syster kromatider*. Dei to syster kromatidene er identiske til kvarandre og er festet til kvarandre gjennom proteiner som kalles for *kohesiner*. Festningen mellom syster kromatidene er sterkest i *sentromeren*, eit område av DNA som er viktig for sepereringen i seinere steger av celledivisjon. I andre ord så er kromatider to identiske biter av genetisk informasjon snurret som ein kromosom festet til kvarandre, når dei løsnes frå kvarandre er dei blitt to individuelle kromosomer. Basically to identitske kromosomer festet til kvarandre. Eit kromosom som består av berre ein lang strimle av DNA har ein kromatid, og eit kromosom som består av to tilknyttet kromatider, etter replikasjon, har sjølvsagt 2. Sjå bilete under. Normalt pleier ein eukaryote celle å ha to syster kromatider når dei ikkje halder på med celledivisjon, slik at dei er klar til divisjon når det skjer.\n\nSå lenge som syster kromatidene er tilkoblet i sentromeren er dei framleis sett på som eit kromosom. Men momentet dei mister festningen gjennom celledivisjon er dei annerkjent som seperate kromosomer.\n![](https://cdn.kastatic.org/ka-perseus-images/5f403b2d91b94fd46d57a78fc4ca25ac88ab47ad.png)\n\nGrunnen til at celler gjer disse prosessene av replikasjon, kondensasjon og seperasjon er for at det skal sikkrest at ein ny celle får nøyaktig $1$ kopi av kvart kromosom.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kryptografi.":{"title":"","content":"# Kryptografi.\nKryptografi er kunsten om å skjule koder i plain sight slik at viss nokon klarer å få tak i beskjeden forstår hen ikkje kva beskjeden betyr i det heile, dersom hen ikkje har ein kode som blir brukt til å dekryptere beskjeden.\n\nÅ *dekryptere* ein beskjed er det samme som å omdanne ein enkrypert beskjed til den normale stadien igjen, slik som beskjeden var originalt.\n\nÅ *enkryptere* betyr å gjere ein beskjed skjult i seg sjølv, i andre ord er det det samme som å gjere ein beskjed vanskelig å forstå, dersom ein ikkje har ein viktig bit med informasjon ein kan ta i bruk for å forstå beskjeden.\n\nVi kan nemleg gjere ein beskjed frå\nHallo eg heiter Are  $\\rightarrow$ Kdoor hj khlwhu Duh.\nGjennom enkrypsjon.\n\nVi kan òg gjere denne beskjeden over tilbake til originalt gjennom dekrypsjon.\nKdoor hj khlwhu Duh $\\rightarrow$ Hallo eg heiter Are.\n\nDette eksempelt heiter [[Ceaser cipher]] og er eit gammelt teknikk brukt av Julis Ceaser til å enkryptere meldinger. \n\nDen biten med kode som vi bruker til å enkryptere og dekryptere ein bit med beskjed heiter ein *key*. Ein *key* blir brukt til å enkryptere og dekryptere, av og til med nokre teknikker bruker ein to ulikes key-er, ein for enkrypsjon, og ein for dekrypsjon. Dette er jo sjølvsagt meir sikkert.\n\n\nKryptografi har vore til staden i fleire årtusener, eg trur det første beviset på kryptografi er frå over 7000 år sidan. Så jepp tiden siden Jesus er ikkje så lenge siden i forhold hemmelige skjulte beskjeder.\n\n\u003e[!INFO] Primtall.\n\u003ePrimtall er ganske viktige for moderne kryptografiske teknikker.\n\u003eDette er fordi primtall har ingen mønster i mellom distansen mellom kvarandre.\n\u003eDette gjer at å kunne automatisk lete etter koden vi skal dekryptere med er ganske langsamt fordi vi må sjekke alle tallene, og ikkje eit spesielt frekvens. \n\u003eTil dømes viss vi hadde hatt berre partall som kode biter, trenger vi berre å sjekke halvparten av alle moglege tall. Likt viss oddetall halvparten òg. Men primtall kan vere begge disse, og primtal har ingen spesielle mønster mellom seg som gjer at vi må sjekke alle tall for å finne alle tall. \n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-biologi.":{"title":"","content":"# Biologi.\n\n\n## Kva er biologi.\n\n\nBiologi er simpelt sagt studien av alt liv. \nDet betyr altså planter, dyr, mennesker, celler, bakterier, og mykje meir.\n\n[[Kva er liv?]]\n\n### KVA:\nLæra om alle levende organismar og korleis dei forhalder seg til kvaraandre og miljøet.\n\n### Biologisk forskning:\nUtvikle kunnskap om livet på jordkloda gjennom [[Den vitskaplege metoden.]]. Det vil atlså seie, teste hypoteser, samle inn data, og presentere data på gode måter, eventuell drøfte samanhenger.\n\n\n### Kult shit om biologi.\nFaget har ein evolusjon, den utviklar seg heile vegen, fordi det blir konstant funnet nye informasjon, og i dei siste åra har biologi utviklet seg mest.\nDet vil altså seie at bilogi kunnskapen har eit høg tempo, og viser store endringar i kunnskap på korte tidsperioder.  \nBlant anna,  er dette delvis grunna stor utvikling i datamaskinar som kan handle bilogiske dataer.\n\n## Første kompetanse mål.\n1. Utforsk korleis dei *[[Taksonomi.|taksonomiske]]* kriteriene har endret seg med den teknologiske utviklingen.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-ein-art.":{"title":"","content":"# Art.\n\nVi har fleire ulike definisjoner for kva ein art er innanfor [[Kva er biologi.]] og dette er viktig innanfor kunsten av [[Taksonomi.]]\n\n### Kva er ein underart.\nEin underart er ein art som skiller seg ut i frå hovudarten, men underartene kan krysses med kvarandre. Dette er i frå \"det biologiske artsbegrepet\". Døme: isbjørn, brunbjørn. \n\n\n\n## Ulike artsdefinisjoner.\n1. *Det biologiske artsbegrepet.*\n\t1. Individer innenfor ein art skal kunne pare seg og gir avkom.\n\t2. Ulempen er at vi har aseksuell reproduksjon som gjer at denne definisjonen ikkje halder heilt opp. Og nokre dyr kan pare men ikkje få fruktbart avkom, er dette avkommet ein egen art?\n2. *Det morfologiske artsbegrepet.*\n\t1. Individer med like synleg karakter trekk (form, farge, osv.) tilhører samme art.\n\t2. Ulempen er at mange ulike arter kan sjå like ut, og at mange ulike arter kan sjå ulike ut i ulike deler av livet, og ulike deler av sesonger.\n3. *Det fylogenetiske artsbegrepet.*\n\t1. Individer med felles opphav tilhøyrar samme art.\n\t2. Handler ofte om å sjå identifiserbare deler av genomene som er unik for ein art.\n\nVi ofte kombinerer disse artsbegrepene for finne ut kva ein art eit organisme er.\n\n\n## Namnsetting av Arter.\nNår vi namnsetjer dyrearter så bruker vi språket \"Latin\", og det er brukt fordi det er eit dødt språk, og dermed er det ikkje i utvikling.\n\nVi skriver det slik \"Slekt Art\", der slekt er slektet til arten, og arten er arten sitt namn.\n\nDette var grunnlaget av Carl Von Linné.\n\n\nUnderarter pleier å få eit tillegsnamn: slik at det blir \"Slekt art underart\".\nNøkre dømer :\nRangifer tarandus **grandi**\nRangifer tarandus **fennicus**.\nBegge disse er underater av reninsdyr som er jo: \"Rangifer tarandus\".\n\n\n\n# Klassifikasjonsystemer for arter.\n\nDet er ulike klassifikasjonsystemer:\n(Høgst til lavest.)\n\n1. Domene\n2. Rike\n3. Rekke\n4. Klasse (Gruppe i planterike)\n5. Familie\n6. Slekt\n7. Art\n\nAlle arter er innanfor kvar av disse klassifikasjonssystemene.\nkvar av systemene som går nedover er gruppert ovanfor.\n\n\n### Domener:\n1. Prokaryoter (Ingen [[Strukturen til cellemembranen.|membran]]-bundet [[Kva er organeller - organeller i eukaryotiske celler.|organeller]]).\n2. Eukaryoter (Har [[Introduksjon til cellemembranen|membran]]-bundet [[Kva er organeller - organeller i eukaryotiske celler.|organeller]]).\n\n### Rike\n([[Prokaryote celler.]]):\n1. [[Bakteriar]].  (Bacteria )\n2. [[Arker]] (Archaea)\n\n([[Introduksjon til eukaryote celler.|eukaryot]]):\n1. [[Protister]]. (Protista)\n2. [[Sopper]] (Fungi)\n3. [[Planter]] (Plantae)\n4. [[Dyr]] (Animalea)\n\n\n\n\n\u003e[!INFO] Herbivore og karnivore.\n\u003eProdusenter er organismer som produsere sin eigen mat, som planter.\n\u003eForbrukere er organismer som eter andre organismer for å ta i næring.\n\u003e-\n\u003eDyrene som spiser andre dyr er karnivore, eller omnivore. Karnivore dersom di spiser berre kjøtt. Ominvore dersom dei spiser både planter og kjøtt.\n\u003e-\n\u003eDyrene som spiser berre planter er herbivore.\n\u003e-\n\u003eNedbrytere er organismer som spiser daud organisk materiale får å ta tak i næring.\n\u003e-\n\u003ePlanter kan få næringen i frå nedbrytene.\n\n\n\n\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-energi":{"title":"","content":"Energi er det som krevst for at noko skal skje.\nEnergi er det som får noe til å skje. Energiformer som er lette å utnytte kalles høyverdig energi, og energi som er vanskelig å utnytte kalles for lavverdig energi.\n\n\nDen største bruken av energi er dårlige klimagass produsrende som kull og olje, og er ikkje fornybare, og disse er ofte lavverdige energi kjelder.\n\n## ENERGI LOVEN\nEnergi kan verken skapes eller forsvinne. Energi kan bare omformes  eller overføres, og i følge newtons $E=mc^2$ er energi og masse det samme men i ulike former. Å bruke energi vil rett og slett si å omforme eller overføre energi.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-grunnstoffer-og-atomer.":{"title":"","content":"# Kva er grunnstoff og atomer. \n\n\n\n## Grunnstoff. \nGrunnstoff bygger opp alle andre stoff.\nGrunnstoff er dei grunnleggende atomene for alt stoff.\nDisse grunnstoffa halder alle egenskapene deirast større former har. Karbon bestemmer egenskapene til bly.\n\n![450](https://duda.dk/fag/wp-content/uploads/sites/4/2020/02/periodisk01.jpg)\n## Atomer.\nAtomer er svært små. Til dømes er det plass til 1 million karbon i bredden på eit hårstrå. Atomer er relatert til kvarandre, ved at atomer består av mindre byggesteinar. Og mengden til disse byggesteinene bestemmer kva grunnstoff det er.\n\nProtoner, elektroner, nøytroner er disse mindre byggesteinene. \nProtoner bestemmer kva grunnstoff det er. Atomnummer i periodiske tabell er menden proton som er i grunnstoffet.\nElektroner har ein negativ ladning, protoner har ein positiv ladning, og nøytroner har ein nøytral ladning. Protoner, og nøytroner ligger i kjernen til atomet og er i klassen nukleoner. Ein kan òg ha ulike mengder elektroner og nøytroner, dette er isotoper. Men ein kan ikkje ha eit ulikt mengde protoner, da skifter grunnstoffet seg.\n\n\n$\\large _{6}^{12}C$.\n12 er nukleon antallet, og 6 er proton antallet / atomnummer. C er grunnstoffer \"karbon\".\n\n![250](https://topblogtenz.com/wp-content/uploads/2021/10/bohr-model-of-carbon-atom-min-1.png)\n\n\n\u003e[!INFO]\n\u003eNukleon er eit begrep for proton og nøytron.\n\nProtonene er psotivt ladet, og elektronene er negativt ladet, som gjer at dei trekkjer til kvarandre, og gjer at elektronene ikkje flyr vekk.\n\nAtomer kan dele elektroner i det som heiter elektronparbinding. \n\n\nAtomer vil oppnå **8-skall regelen**. Som tyder at det innerste skallet vil ha 2 elektroner, og resten vil ha 8 elektroner. Dette kan oppnås gjennom elektronparbinding, der atomene deler elektron med andre atomer. Eller så kan atom gi vekk elektroner, eller få til seg elektroner utan elektronparbinding. Når atomet har ein/fleire manglene elektron blir atomet positivt ladet fordi det har meir protoner enn elektroner,  og omvendt når den har meir elektroner enn protoner blir atomet negativt ladet fordi det er meir elektron enn proton.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-liv":{"title":"","content":"## Kva er liv?\n\nLevende ting gjer energi til ting, til å vokse, skifte seg, reprodusere. \nVi har mange ting til felles med naturen, svært til felles.\n* Energi\n* DNA\n* Celler\n* Evolusjon.\n\nOg ikkje minst dei minste levende tingene er òg svært komplekse.\n\nVitskapsmenn har ikkje ein definitiv definisjon av liv men har definert nokre felles egenskaper for det som ser på som liv.\nNokre ulevende ting viser også nokre av disse egenskapene men berre levende organismer viser alle egenskapene.\n\n1. Levende organismer er *organiserte*. Dette betyr at dei har spesialiserte kordinerte deler inni seg. Som celler til óg med ein cellet (organismer som består av ein type celle) er komplekse. Atomer lager molekyler som lager til dømes organeller og strukturer. I fleircellet organismer lager liknande celler vev. Cellene i fleircellet organismer har ofte spesialsert seg inn i eigne type celler med spesialiserte oppgåver. Ulike vev sammen skaper organer, som igjen har spesialiserte oppgåver. \n2. *Metabolisme*. Liv er avhengig av ein enorm mengde ulike kjemiske reaksjoner. Reaksjonene gjer at det er mogleg for organismene til å fungere, og arbeide. Arbeid som å vokse, å jakte, å reprodusere, halde kroppen frisk. Alle disse biokjemiske reaksjonene kalles \"metabolisme\". Metabolisme kan bli dividert inn i anabolisme og katabolisme. I anabolisme skaper organsimer komplekse molekyler frå enklere molekyler. Anaboliske prosesser bruker, kataboliske gjer nåværene lagret energi tilgjenelig, som er openbart fordi katabolisme er det omvendte av anabolisme.\n3. *Homeostase*. Levende organismer regulerer deirast indre miljø til å halde dei optimale nivåene for cellene. Til dømes burde den indre kroppstemperaturen til eit menneske vere 37Celsius, og dette jobber kroppen vår for. Denne prosessen for å halde dei optimiale nivåene for kroppen heiter Homeostase.\n4. *Vekst*. Levende organismer undergår regulert vekst. Individuelle celler blir større i størrelse, og fleircellet organimser smaler seg store mengder celler gjennom celledivisjon. Vekst er avhnegig av anabole veger som skaper store komplekse molekyler som protein og DNA.\n5. *Reproduksjon*. Levende organismer kan reprodusere seg sjølv til å skape nye organismer. Reproduksjon kan entens vere aseksuell som betyr berre eit kjønn er involvert i reproduksjonen. Og den andre formen reproduksjon kan oppstå er seksuellt, som betyr det er ulike kjønn involvert. I seksuell reproduksjon tar foreldre organisme sæd og egg - celler som begge innehalder deirast halvpart av deirast gennetik, og smelter sædcellen og eggcellen sammen til å skape eit nytt organisme som består av begge foreldrene sine genetikk. Denne prosessen kalles \"fertilisering\".\n6. *Respons*. Levende organismer viser \"irritabilitet\", som betyr at dei gir respons til stimuli eller forandring i miljøet deirast. \n7. *Evolusjon*. Populasjoner av levende organismer undergår evolusjon som betyr at genetikken til populasjonen forandrer seg over tid. Dette kan innebære naturleg seleksjon, som betyr at dei beste organismene vil vere dei som overlever i slutten og får videreføre sinn genetikk. Forandring i genteikken som gir ein fordel til organismet heiter adapsjon.\n\n\n8. Cellen har [[Introduksjon til cellemembranen|cellemembran]], [[DNA]], [[Kva er organeller - organeller i eukaryotiske celler.|ulike organeller]].\n\n\nMange organismer har ekstra/forskjellige egenskaper og framleis blir sett på som levende. Og ikkje alle er enig i at dette definerer liv For eksempel har ikkje muldyr evnen til å reprodusere.\n\n\nProsesser: (Skriven ovanfor òg.)\n1. Vekst og utvikling\n2. Fordøyelse og næringsopptak.\n3. Celleånding og gassutveksling.\n4. Ekskresjon\n\t1. Skille ut avfalls stoffer.\n5. Reaksjons på stimuli.\n6. Bevegelse.\n7. Formering.\n\n\u003e[!INFO]\n\u003eVirus er ofte definert som ulevende fordi det trenger ein vert for å formeire seg.\n\u003eMen dette er litt kontroversiellt.\n\n\n## Å seperere liv og ikkje levende ting.\n\nDei fleste levende organismene fyller kravene/listen som definerer liv, men ikkje alle liv gjer. I tillegg er det mange ikkje levende ting som fyller nokre/mange av kravene til liv, men som ikkje er levende. Dette er òg grunnen til at definisjonen til liv fortsatt er i fasen av å bli definert. Det er vanskelig å lage ein presis definisjon som ikkje har unntil. NASA definerer det som sjølv oppretthaldene system som har moglegheiten til å utføre Darwin Evolusjon.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Kva-er-organeller-organeller-i-eukaryotiske-celler.":{"title":"","content":"# Kva er organeller.\n\n## Kva er ein organell\nEin organell er ein membran bundet spesifikk komparatament i ein [[Introduksjon til eukaryote celler.|eukraryote celle]]. Kvar organell har spesfikke oppgåver dei utfører. \nEvnen til å halde eigne miljø inni ein celle tillater eukaryote celler til å utføre svært komplekse metabolisme reaksjoner som prokaryoter ikkje kan **utføre. Dette er ein av grunnene til kifor eukaryote celler kan vokse til mykje større størrelser enn prokaryote celler.\n\n\nKvar organell har eigne miljø som tillater den å utføre sine oppgåver optimalt. Til dømes nokre organeller har lav pH som kunne skadet cellen viss den ikkje var membran bundet.\n\n\n## Nokre normalt funnet organeller.\n\n(Ikkje rangert på noko spesielt måte)\n1. Golgi apparatet\n\t1. Golgi apparatet er god på å pakke molekyler/proteiner slik at dei kan bli brukt utanfor cellen.\n2. Mitokondria\n\t1. Mitokondria skaper ATP for cellen, og er \"powerhouset\"/energifabrikken av cellen. Den gjer sakkarider over til ATP. Den har eiget DNA. Nokre trur at dei originalt var ein eigen organisme, men begynte å leve inni våre eukaryote celler og tl slutt blei reprodusert av cellen òg. \n3. Vakuole\n\t1. I planteceller pleier vakuoler å vere svært store.\n\t\t2. Men dei finst òg i dyreceller, dei er ikkje berre i planteceller.\n\t2. I vakuoler er det vatn og enzymer, vakuoler er op ein måte som eit lager for cellen. Kan òg ha enzymer som bryter ned ting.\n4. Endoplasmatisk retikulum.\n\t1. Ikkje alle sider av det endoplasmatiske retikulum har ribosomer.\n\t\t1. Dei som har ribosomer pleier å bli kalt ru ER. (ER = endoplasmatisk retikulum). Dei sidene som ikkje har ribosomer blir kalt glatt ER.\n5. Kloroplast.\n\t1. I planteceller er det noko som heiter kloroplast. Det er her [[Fotosyntesen]] skjer i planter, fotosyntesen skaper sakkaridene som blir omdannet til energi i mitokondria for planter. Dyr for karbohydratene gjennom mat. \n6. Lysosom.\n\t1. Eit slags lager òg. Inneholder mange enzymer som bryter ned avkastsstoffer, fremmedstoffer, etc.\n\n\n\n## Ein stor oversikt av alle organeller.\n| Struktur                                                                       | Funksjon                                                                                                                                                                                                                            |\n| ------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [[Strukturen til cellemembranen.\\|Cellemembranen]]                             | Omgir heile cellen. Kontrollerer transport inn i og ut av cellen. Sender og motarr kejmiske signaler inn og ut av cellen.                                                                                                           |\n| Cellekjernen                                                                   | Er eit slags kontrollsenter for cella. Ein dobbel kjernemembran ([[Strukturen til cellemembranen.]]) som beskytter [[DNA]]-et. Sørger for DNA-Kopiering i [[Meiose.]] \u0026 [[Mitose.]]. Sørger for RNA-produksjon, avlesning av gener. |\n| Ribosomer                                                                      | Er er produksjonsted for *polypeptider* i proteinsynstese prosessen.                                                                                                                                                                |\n| [[Mitokondria]]                                                                | Er \"kraftverket\" i cellen. Spalter næringsstoffer til byggjesteiner og energi, bla. mykje ATP, dette skjes gjennom [[Cellulær respirasjon.]]                                                                                        |\n| Cytoskjelettet                                                                 | Stiver opp cellen slik at den halder form. Halder organellene på plass. Er essensiell i både [[Mitose.]] og [[Meiose.]] til å bevege og dra på den genetiske informasjonen.                                                         |\n| Endomembransystemet                                                            | Er eit transportsystem                                                                                                                                                                                                              |\n| Endoplasmatisk retikulum (ER), òg kjent som Endoplasmatisk nettverk            | Produserer protein, enzymer og fett. Danner transportblærer for å transportere stoff og ting rundt i cella. Bryter ned giftstoffer.                                                                                                 |\n| Golgiapparatet                                                                 | Sorterar og vidaresender proteiner. Omdanner organiske forbindelser til ønsket stoffer.                                                                                                                                             |\n| Peroksisomer                                                                   | Bryter ned organiske forbindelser, f.eks fettsyrar. Gjennom oksidering prosessen.                                                                                                                                                   |\n| Lysosomer (Finnest hovudsakeleg i dyreceller, av og til plante/protist celler) | Bryter ned næringsstoffer og ødelagte organeller, er eit slags resirukeleringsorganell. Bryter ned bestemte celler i fosteutvikling, [[Befruktning og utvikling - Seksuell reproduksjon.]], [[Faser av menneske utvikling.]].       |\n| Vakuoler (Nesten berre i planteceller, finner òg av og til i protist)           | Er eit slags lager for stoffer, lagrer forskjellige kjemiske forbindeleser. Regulerer cellevolumet gjennom denne lagringa. Regulerer vatnbalansen i cellen, den tar opp vatn stoff og lagrer det.                                   |\n| [[Kloroplast.]] (bare i planteceller)                                             | Binder lysenergi til kjemisk energi ([[Fotosyntesen]])                                                                                                                                                                              |\n| Celleveggen (hos planter, sopper, (bakteriar \u0026 arker?), og nokre protister)                                                                               |              Gir støtte og form. Gir beskyttelse. Hindrer for stort vatnopptak i [[Diffusjon|diffusjonsprosessen]].                                                                                                                                                                                                                       |\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Likningsett":{"title":"","content":"´# Likningsett.\n\n## Kva er eit likningsett?\nSimpelt sagt er eit likningsett eit sett av likninger slik som namnet forteller. Det er ofte ukjente variabler som $a$ $b$ eller $c$. Likningsettet ofte gir oss ein sum av ulike variabler, men ikkje variablene sine verdier. Vi kan bruke disse få opplysningene vi får til å kunne finne ut verdien av kvar variabel. Målet er å finne disse verdiene til variablene. Av og til må vi lage likningsett i frå tekst opplysninger, og då er ein god forståelse av likningsett viktig.\nLikningsett er alltid omringet av to $[ \\space \\space ]$ brackets som går omkring heile likningsettet.\nEin annen måte å tenke på likningsett på er som å forklare eit punkt gjennom andre punkt forklart av variablene (der kvar variabel er i sin eigen dimensjon) Kinda complicated men gir ein liten måte å tenke på dette.\n\nEit likningset eksempel: \n\n$\\begin{bmatrix} \u0026 y = 2x+1 \u0026  \\\\ \u0026 y = -x+4 \u0026  \\\\ \\end{bmatrix}$\n\n## Korleis rekne ut likningsett?\n###  Flytte om på ledd over likheits-teiknet til å settje opp for metodene.\nDet første vi må gjere når vi halder på med likningsett er å gjere dei klare for metodene. Det vi ønsker er å ha berre ein variabel på den eine siden, og dens verdi på den andre. Slik som $y=2x+1$ , i staden for $y-2x=1$. Dermed flytter vi på ledde over likheits-teiknet for å isolere den eine variabelen. Dette kan vi gjere for ein felles variabel i alle likningenfor å bruke [[Likningsett#Addisjon metode|addisjons metoden]] , eller vi kan gjere dette for berre ein variabel og dermed bruke dette for [[Likningsett#Innsettings metode|innsettings metoden]]. Uansett kva for ein metode vil vi alltid ha berre ein variabel på den eine siden, og dens verdi på den andre siden av likheits-teiknet. \n\nTil dømes:\n\n$\\begin{bmatrix} -1= 2x-y \\\\ x=-y+4 \\end{bmatrix}$\n\nblir til:\n\n$\\begin{bmatrix} y = 2x+1 \\\\ y = -x+4 \\end{bmatrix}$\n\n### Addisjon metode.\nAddisjonsmetoden går ut på som namnet forteller å addere dei to ulike likningene.\nBegge likningene må ha den samme isolerte variabelen på den eine siden av likheits-teiknet for å kunne fungere. Vi deretter adderer dei topp leddene med dei nedre leddene og får ein verdi.\n\nTil dømes:\n\n$\\begin{bmatrix} y=2x+4 \\\\ y=-2x+8 \\end{bmatrix}$\n\nblir til:\n$2y = 2x-2x+12$\n$2y=12$\n$y=6$\n\n(Vi kan fortsette viss vi bruker [[Likningsett#Innsettings metode|innsettings metoden]] for å finne $x$ verdien)\n\n### Innsettings metode.\nInnsettingsmetoden går på å settje verdien av ein variabel inn i ein likning som viser verdien til ein annen variabel,vi følger denne måten av å settje inn verdier og skifte på ledd til likninger til vi får kvar verdi av kvar variabel. Dette er den prefiert metoden då den alltid fungerer godt.\n\nTil dømes:\n\n$\\begin{bmatrix} x+y=-2 \\\\ 2x-3y=6 \\end{bmatrix}$\n\n$x=-2-y$\n(Settjer $x$ verdi i nederste likning)\n$-4-2y-3y=6$\n$-5y=10$\n$y=-2$\n\n(Omskriver likning øverst og settjer $y$ verdi inn oppe)\n$-2=-2+x$\n$x=0$\n\n(Vi kan teste dette er korrekt)\n$2*0-3(-2)=6$\n$0+6=6$\n$6=6$ \n(Dette er korrekt!)\n\n### Når bruke hvilken.\nAddisjonsmetoden er best når alle likningene har ein felles isolert variabel på den eine siden av likheitsteiknet, og alle variabelene på den andre siden av likheitsteiknet kansellere kvarandre ut når dei blir addert sammen. Men denne metoden kan framleis bli brukt, utan at disse ønskene er oppfyllt, men då er det nødvendig å fortsette med innsettings metoden etterpå.  Innsettingsmetoden er best passet for når vi ikkje har ein felles variabel i alle likningene, men vi må finne alle variabelene sine verdier.  Ofte er ein kombinasjon av disse metodene svært nyttig, det er sjeldant at vi pleier å bruke berre ein av dei gjennom heile rekken av mattematiske operasjoner. Metoden som passer best varierer etter lengden vi har løyst likningsettet. \n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Lipider.":{"title":"","content":"# Lipider.\n\n\nLipider er generellt ikkje så vatntiltrekket.\n\nLipider har ganske mange ulike funksjoner til dømes er nokre av disse:\n1. Energilager\n2. Signalisering\n3. Membraner.\n\nLipider består av generellt av tre fettsyrer og festet til eit glyserid: dette heiter: Triglyserid.\n\n\n\nPolarhodegruppen er gruppen som er på toppen av lipiden, i triglyserid er det glyserid som er polarhodegruppen!\n\n\nEit ganske kjent og normal funnet lipid i biologien er fosfolilipider:\nHer er strukturen til eit fosfolilipid:\n![](http://drugline.org/img/term/lipid-8756_2.gif)\n\n\nStrimlene/halene under er fettsyrene, og \"polar region\" er polargruppen. I fosfolilipider er det glyserol og fosfat som er polarhodegruppen.\n\n-------\n\n## Fett\nFettsyrene pleier å ha masse karbon og hydrogen som ikkje har ein ladning som gjer at dei ikkje løyser seg lett i vatn. Metta og umetta fett er begreper som viser kor mange hydrogen som er på fettsyren.\n\n1. Viss det er fullt av hydrogen er det mettafett.\n2.  Viss det ikkje er fullt av hydrogen og har dobbelbindinger mellom karbonene er det umettafett.\n\nFett er ganske nødvendige for mennesker, viss vi ikkje hadde hatt fett hadde vi vore daud!\n\n\n\n--------\n\nLipider kan vere hydrofobiske og hydrofil.\nHydrofil betyr at den løser seg i vatn, og hydrofbosik betyr at den løser seg ikkje i vatn.\nFettene pleier å vere hydrofobiske og polarhodegruppen kan vere hydrofil, men og hydrofobisk!\n\nNår det er hydrofobiske fetter, og hydrofile polarhoder kan dette skape eit [[Introduksjon til cellemembranen]].\n\nFosfolilipd bilag plasmamembran - visuelt illustrert.\n![](https://3.bp.blogspot.com/-gakZQ3fJuBE/V1xf-f-4eYI/AAAAAAAABB4/S73w7b5HVGI3JB_AeaaRt9D_ZLrCuJK9gCLcB/s1600/fosfolipidlag_0.jpg)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Logaritme-regler.":{"title":"","content":"# Logartimer regler.\n\n\nVi har mange ulike logaritme regler, dei fleste grunnlagt i [[Eksponent reglene]] men nokre er. ikkje basert i disse reglene. Og det er kanskje litt openbart fordi [[Logaritmer]] er berre det motsatte av eksponenter.\n\n\n## Reglene.\n\nVi har dei følgende reglene.\n1. Produkt regelen.\n\t1. $\\log_B(A)+\\log_B(C)=\\log_B(A\\times C). A,C\\gt0$.\n\t\n2. Kvotientregelen\n\t1. $\\log_B(A)-\\log_B(C)=\\log_B(\\frac{A}{C}), C\\ne 1$\n\t\n3. Gradsregelen? Ukjent namn på norsk. Power rule på engelsk.\n\t1. $A\\times \\log_B(C)=\\log_B(C^A)$\n\t\n4. Ukjent namn ganske nicedda.\n\t1. $\\log_B(A)=\\frac{\\log_C(A)}{\\log_C(B)}$\n\t\t1.  $\\text{for kva som helst verdi av C så lenge begge C -ene like}$\n\t\t\n2. Kom på denne sjølv\n\t1. $\\log_B(A)=\\log_A(B)^{-1}$\n\t\n3. Med boko, og meg sjølv.\n\t1. $log_a(b)=k\\times log_{a^k}(b)$\n\t\n4. Ny ein, skapt sjølv.\n\t1. $a^{log_c(b \\times d)}= (b\\times d)^{log_c(a)}$\n\t2. Kind of valdtekt av [[Eksponent reglene]] og [[Logaritme regler.]] kombinert til ein orgy av matte. 💀 🍆💦🍑\n\n### Dømer bruk av reglene.\n1. Første regelen.\n\t1. $\\log_2(256)\\rightarrow\\log_2(8\\times 32)$\n\t\t$\\rightarrow \\log_2(8)+\\log_2(32)=\\log_2(8\\times32)$\n\t\t$\\rightarrow 3+5=\\log_2(256)$\n\t\t$\\rightarrow 8=\\log_2(256)$\n2. Andre regelen.\n\t1. $\\log_5(\\frac{1}{125})=\\log_5(1)-\\log_5(125)$\n\t2. $\\log_5(\\frac{1}{125})=0-\\log_5(125))$\n\t3. $\\log_5(\\frac{1}{125})=-3$\n3. Tredje regelen.\n\t1. $\\log_5(\\frac{1}{125})=\\log_5(125^{-1})$\n\t2. $\\log_5(\\frac{1}{125})=-1\\times\\log_5(125)$\n\t3. $\\log_5(\\frac{1}{125})=-1\\times3\\rightarrow-3$\n4. Fjerde regelen.\n\t1. $\\log_{25}(125)=\\frac{\\log_5(125)}{\\log_5(25)}$\n\t2. $\\log_{25}(125)=\\frac{3}{2}$\n\t3. $25^{\\frac{3}{2}}=125$\n\nAlle disse dømene har korrekte svar.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Logaritmer":{"title":"","content":"# Logaritmer.\n\nLogaritmer er simpelt sagt ein metode for å finne kva eksponent for ein base som gir eit tall.\nI andre ord $b^x=2, x=log_b(2)$. Logaritme er på ein måte den inverse av eksponenter. Vi kan få bruk det svært ofte.\nEin generell logaritme ser slik ut:\n$\\log_b(c)=d$      og      $b^d=c$.\n$b$ er basen i logaritme, det tallet som vi drar til ein grad av $d$ for å få tallet $c$. Det ser vi til høgre i det generelle eksponent oppsettet.\n\n\nHer er nokre dømer på logaritme bruk:\n$\\log_2(8)=3$,               $2^3=8$\n$\\log_2(\\frac{1}{8})=-3$,            $2^{-3}=\\frac{1}{8}$\n\n$216=6\\times6\\times6\\times6$\n$\\log_6(216)=4$\n\nVi har nokre ganske ofte brukte baser.\n\n### Vanlig logaritme.\nTil dømes er det base 10 det vi kaller [[Vanlig logaritme]].\nDa det stammer i frå ti talls systemet og standard form.\nNotasjon:\n$\\log(x)=\\log_{10}(x)$\n\n### Naturleg logaritme.\nVi har òg ein anna ganske brukt base som er ein verdi av $e=2.718$, () logaritme med denne basen blir kalt [[Naturleg logaritme]]. \nNotasjon:\n$\\ln(x)=\\log_e(x)$\n\n\n\n## Løyse ein logaritme som har ein funksjon i grad.\n\nVi må berre huske kva logaritmer faktisk er, dei er invers eksponenter. Som tyder at viss vi har ein eksponent som har til dømes ein koeffisient, kan vi finne framleis ut kva verdi av $x$, vi må finne for å gjere ein likning sant.\n\nDet er to ulike metoder vi kan utfordre dette på, den eine er å simpelt sagt bruke våre eksponent regler til å isolere $x$ som graden, og gjere at vi ikkje lenger trenger å gjere ekstra.\nTil dømes:\n$e^{2x}=5$\n$(e^{2})^x=5$\n$\\log_{e^2}(5)=x$\n\nDet andre vi kan gjere som ofte er betre å ta i bruk er vår kunnskap om logaritmer, vi veit at ein logaritme er nesten det samme som ein eksponent som gjer at vi kan gjere det same som når vi halder på med irriterande eksponenter. Eller nesten. La meg vise eit døme i staden for å forklare. Vi berre bruker vår kunnskap om at dei er eksponenter, og settjer dei på ein likning. Så finner vi $x$ verdien gjennom simpel aritmetikk.\n\n$e^{2x}=5$\n$\\ln(5)=2x$\n$\\frac{\\ln(5)}{2}=x$\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Luftmotstand.":{"title":"","content":"# Luftmotstand.\nLuftmotstand er ganske lik [[Statisk og kinematisk friksjon.|friksjon]] med at det er ein normal kraft som er nesten alltid til staden på jordkloden.\nLuftmotstand er det som skjer når eit objekt beveger seg fremover i eit rom fullt med luft, normal luft, ikkje ein spesifikkk gass, og den treffer motstand at den treffer på luften som skaper ein normalkraft av [[Newtons tredje lov]]. \n\nVi har ein ganske generell formel for luftmotstand sin kraft \n$L=k\\times v_{term}^2$, det er $v$ er entens størrelsen til ein terminalhastighet, eller terminalfarten til eit objekt. \n\nTerminalfart/hastighet er den største hastighten objektet oppnår.\n\n **Det oppstår ein terminalfart fordi luftmotstanden er så kraftig at den motvirker kraften til objektet. Kraft er jo akselerasjonen  på objektet, gange vekt, akselerasjonene motvirker kvarandre, slik at objektet faller i ein konstantfart.**\n\nLuftresistansen er litt vanskelig å forstå fordi ein ikkje heilt veit kva L er, men er L er  berre kraften $m\\times a$ som gjer dette litt enklare å bruke. \n(ofte er $a$ berre gravitasjonsakselerasjonen av størrelse $9.81$ I andre ord er L kraften som trekker tilbake på objektet til eit tidspunkt, vi kan bruke L med terminalfart.\n\n\nDette gjer at vi kan skrive L som $m\\times g$ når vi snakker om nedover luftresistanse, og når vi snakker om ein luftresistanse horisontalt så må vi si at L er det samme som kraften som påvirker objektet (det som får den til å gå fremover.)\n\nI andre ord er formelen $m\\times g = k\\times v_{term}^2$ når vi snakker om luftresistanse i nedover fallende retning der vi er med terminalkraft. \nViss vi veit kva k er kan vi gjere det for kva enn som helst verdi av v, ikkje berre terminalkraften. Dersom vi ikkje har k og ikkje terminalkraft kan vi ikkje definitivt finne ut kva luftmotstanden er, fordi vi ikkje veit kva kor mykje den samlede kraften til objektet skal vere. Når den er med terminalfart er den 0N, vi kan ikkje vite kva den er fordi den står ikkje i ro og vi har ingen k verdi.\n\nNår vi snakker om luftresistanse i nedover fallende retning, \n ut i frå dette får vi at $v_{term}=\\sqrt{\\frac{m\\times g}{k}}$ \n at $k = \\frac{m\\times g}{V^2_{term}}$. \n\n\u003e[!INFO]\n\u003e K er generellt basert på form og overflaten til objektet og massen, kjent som ein proposjanalitetskonstant, og er dermed konstant uansett størrelse av momentanfart, om det er terminal eller momentan: det er ikkje relevant.\n\n\n \n\n\u003e[!INFO] Husk\n\u003eLuftmostanden kan vere meir kraftige enn gravitasjonskraften, som ein meteoritt som fyker ned mot jordkloda sakker ned. Men dersom vi snakker om ein terminalkraft så må vil luftmotstanden og tyngdekraften vere heilt lik slik at dei står i ro.\n\n\nGenerelt \n$v_{term}=\\sqrt{\\frac{L}{k}}$\n$k=\\frac{L}{V^2_{term}}$\n\nDette gjer mening! Tok meg ein liten stund til å forstå det tbh fordi eg lurte på kva L var lmao. \n\n\n![[Luftmotstand. 2022-09-23 12.53.58.excalidraw]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Lyd":{"title":"","content":"## The fuck e lyd.\nLyd er trykkbølger i luft og andre medium.\nVibrasjonene av luft registreres i øret og tolkes som lyd\n\n## Bits? \nDet er også viktig å bestemme kor mangen bit som vi skal registrere for kvart registrert punkt, dette skjer normalt i 16 bit.\n\nVi har samplingfrekvens originalt på 44100 samplinger per sekund,  da vil vi dersom vi bruker 16 bit, ha $44100\\times 16=705600$ bits lagret per sekund. Dette hadde blitt ugitt på begge ørene, dette er mono lyd.\n\nDersom vi bruker stereo og har ulike lydnivåer per øre/høytaller vil dette bruke dobbelt så mykje bits, så $44100\\times16\\times 2 = 1411200$ bits per sekund.\n\nDet er mangen lyder som er så høg i frekvens at ørene berre gjer nah fam we don do dat here. Alt over disse frekvensene berre nah we ain doin dat sier pcen, den sier berre nop, d er eg for lat for.\n\nNår vi sampler lyd pleier vi å bruke området mellom 38768 til 38767,.\n\nVi har rn svært mykje bits brukt per sekund, nah for real?\n\n## Vi komprimerer shitet!\nVi lagrer forskjeller i amplitude og frekvens kvar måling i staden for å sjekke kor høgt dei er kvar gang, dette sparer mangen bits.\n\n\n\n\nEin anna metode er å bruke ein FFT til å splitte alt opp inn i nokre få sinus funksjoner og deretter bruke funksjonene i runtime og skape lyden matematisk.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Lymfesystemet.":{"title":"","content":"*Lymfesystemet* er viktig for  [[Det tilpassede immunforsvaret.]] vårt mot mikroorganismer. Lymfesystemet består av *lymfeårer* og organer med *lymfevev*, altså *brissel*, *lymfeknuter* og *milt*. I tillegg liggjer det lynmfevev under alle [[Det medfødte immunforsvaret.#Det medfødte ytre forsvaret.|slimhinnene]] i kroppen. \n\n*Brisselen* liggjer under brytbeiner, ved halsgropen. \n*Lymfeknutene* finnes blant annet på halsen, i nakken under armene og i lysken. Lymfeknutene fungere som folter i lymfeårene og kontrollerer innholdet i lymfen. Milten, om ligger på venstre side under ribbebina fungerer som eit filter i blodbanen og fjerner mikroorgansimer, klumper av [[Det tilpassede immunforsvaret.#Antistoff|antistoffer]], og gamle røde blodceller. \n\nRundt alle celler i vevet liggjer det vevsvæske. Vesvæken dannes hovudsakeleg ved at væske frå blodårene presses gjenom blodåreveggen og ut i vevet rundt. Noko av væska suges tilbake i blodårene før blodet forlater vevet og retunerer til hjarter. **Resten av væsken fraktes tilbake til blodbanen ved hjelp av lymfeårene.**\n\n*Lymfevæske* inneholder også [[Det tilpassede immunforsvaret.#Lymfocytter.|lymfocytter]]. Lymfocytter kan passere frå blodet gjennom veggen i *kappilærårene* og ut i vevet og deretter gjennom veggen i lymfeårene ig inn i lymfen. Også [[Det medfødte immunforsvaret.#Fleire ulike typer fagocytter i det medfødte indre forsvaret.|fagocytter]] kan passere over lymfeåreveggen og inn  i lymfen.\n\nI lymfevevet finnes det store mengder *immunceller*, både fagocytter og lymfocytter. **Alle *immunresponser* start i lymfevevet enten i lymfeknutene, i milten, eller i  lymfevevet under slimhinnene i tarmen eller lungene.** Her kan [[B-celler]] og [[T-celler]] og *antigenpresenterende celler* finne kvarandre og sette i gong ein reaksjon.\n\nNår lymfevæsken når lymfeknutene blir mikroorganismer og frie antigener plukket opp av [[Det medfødte immunforsvaret.#Dendrittiske celler.|dendrittiske celler]] som vil vise fram antigener. Det aktiverer lymfocyttene i [[Det tilpassede immunforsvaret.]].\n\n\n## Bilete:\n![[lymfesystemet.png]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Lysmikroskop.":{"title":"","content":"3# Lysmikroskop.\n\n[[Mikroskopi]]\nI eit lysmikroskop går synleg lys igjennom prøven som vi tester/analyserer og er bøyd i gjennom linsene som tillater brukeren å sjå prøven. Det gode med lysmikroskop er at at vi kan sjå levende celler under dei i ekte tid, så vi kan sjå oppførselen deirast òg. \n\nDet finst fleire ulike lysmikroskoptyper:\n* Lysfelt som tyder bilete undergår ingen modifikasjoner og er eit direkte bilete.\n* Fluroescens som brukes til prøver som fluorescere (ttar opp ein lysbølge, gir ut ein anna ein). Lyset blir brukt med berre ein lysbølge, og brukes til å få dei fluorescerende cellene til å gi ut lys, som blir lagret ib ilete.\n\t* Ein spesiell form av fluorescens mikroskopi heiter konfokd mikroskopi. Denne formen bruker ein laser til å få respons frå berre eit spesifikk tynt lag av prøven, som gir eit klart bilete utan innblanding av dei andre lagene.\n\n\nEit lysmikroskop ser slik ut.\n![250](https://swemed.dk/wp-content/uploads/2020/06/OBT-101.jpg)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mangfald":{"title":"","content":"# Biologisk mangfald.\n[[Kva er biologi.]] [[Kva er liv?]] \n\n\n## Kva er biologisk mangfold.\n1. Summen av mangfoldet i naturen.\n\t1. Genetiske variasjoner mellom individer og populasjoner innenfor ein art.\n\t2. Variasjon av alle artene, samt dei forskjellige økosystemene som artene lever i.\n\n## Miljø faktorer.\nDet biologiske mangfoldet blir regulert av dei biologiske faktorene.\nDette blir delt inn i abiotisk, og biotisk.\n\"Ikkje levende\" = abiotisk, og \"levende\" = biotisk.\n\nAbiotiske er til dømes: \n* Vind\n* Miljø\n* Vær\n\nBiotiske:\n* Populasjoner av arter.\n* Reproduksjonsrate.\n* Mat\n\n### Minimums faktor.\nEin nødvendig faktor som er livsnødvendig for at organismet skal leve.\nBestemmer store deler av ein populasjon eller likt.\n\nTemperatur, og mat er minimumfaktorer.\n\nDersom ein slik minimumsfaktor blir ødelagt, kan ein populasjon fikse seg opp igjen, eller ikkje :()\n\nDyrene kan dø, men det blir meir mat igjen som skaper større kull, populasjonen er tilbake.\n\n\n\n\n## Naturen sjølv vs. Menneskelig  påvirkning.\n\nSlike faktorer er svært sensitive til dyr: \n$\\rightarrow$ mennesker påvirker dei i store grader :(\n$\\rightarrow$ den største faren til dyr og miljøet er **mennesker**.\n\n* Biologisk mangfoldig kulturlandskap.\n\t* (Kultur: av menneskes påvirkning)\n\t* Til dømes: ein gård.\n* Naturleg artsmangfold.\n\t* Det naturlige mangfolde av arter og sånt shit.\n* Monokultuerer.\n\n\n\n## Tre nivåer av biologisk mangfald.\n\nTre nivåer av biologisk mangfald:\n\n1. Gen-nivå\n\t1. Den genetiske varasjonen som finnes i kva art.\n\t\t1. Likevell det er samme art betyr det ikkje direkte at genene er tilpasset til samme område å leve i. \n2. [[Kva er ein art.|arts]]-nivå\n\t1. Artene i eit økosystem må være mange nok til å lage stabile næringskjeder og eit stabilt økosystem, noko som ofte skjer dersom det er mange arter.\n3. [[Økologi.|økosystem]]-nivå\n\t1. Eit mangfold av ulike livsmiljøer. \n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Massetethett-Oppdrift":{"title":"","content":"# Massetetthet \u0026 Oppdrift\n\nNært knyttet til [[Newtons første lov - masse og treghet]].\n\n## Kva er massetetthet\nKvifor flyter du i vatn?\nDet er vanlig å si at alt som er lettare enn vatn vil derfor flyte. \nMen ville du sagt at eit cruiseskip er lettere enn vatnet den liggjer i?\nDersom det er lite vatn kan fortsatt cruiseskipet flyte men den har høgere masse. Spørsmålet gir egenteleg ikkje så mykje mening fordi ordene \"lettere\" og \"tyngre\" i daglegtalen er ikke presist definerte størrelser som berre bruke i fysikken. Det som avgjer om noko flyter i vatnet er *massetettheten* til gjenstanden, dersom den er høgere enn vatnet sitt vl den flyte.\n\n## Formel\n\n$\\LARGE \\rho = \\frac{m}{V}$.\n\nEin gjenstand med masse $m$ og volum $V$ (Ikkje til å bli forveksla med fart) har ein massetettheit av $\\rho$.\n\n\u003e[!WARNING]\n\u003e $\\rho$ er ikkje $p$, $\\rho$ er uttalt \"rho\" og er eit gresksymbol som presenterer massetetthet, $p$ derimot blir brukt for  momentumet til eit objekt som er noko heilt anna. Dei ser like ut, men er svært forskjellige! 🍸\n\n\n### Liten ekstra forklaring.\n\nGjenstander blir alltid påvirket av gravitet. Men for ein fotball som flyter i ro på vatnoverflaten er den totale samlede kraften $\\sum \\vec{F}=0$.\nSom tyder at den vell flyter og står i ro!, men fordi den har ein kraft nedover som er vekt (også kjent som tyngdekraft) må dette bety at det er òg ein kraft som påvirker oppover slik at den faktisk står i ro. Husk $\\sum \\vec{F}=0$, for at dette skal bli gyldig når ein av det som blir summert er $m(kg)\\times -9.81(\\frac{m}{s^2})$ (tyngdekraften), må det vere ein anna kraft som har nyaktig lik størrelse men berre nøyaktig motsatt retning (Notert med: $m(kg)\\times 9.81(\\frac{m}{s^2})$). Denne motverkande kraften i vatnet blir kalt for *oppdrift*, og er grunna til at, blant anna, at båter faktisk flyter likevell dei veger så jævlig mykje.\nBravisimo båter, dåke oppdaga oppdrift 🥳. NOWAY! 🤯.\n\n\u003e[!INFO]\n\u003eEnheten for massetetthet er $\\frac{kg}{m^3}$, der $m$ betyr meter.\n\n\n\u003e[!INFO] Logisk kvifor:\n\u003eViss vatnet/væsken veger meir vil alle atomene lyst å gå mest mogleg nedover, og dermed vil den ha lyst til å dytte alt i den oppover slik at sine eigne atomer kan gå mest mogleg nedover fordi den som sagt veger meir enn objektet.\n\n\n\u003e[!INFO] IMPORTANT:\n\u003eSå lenge oppdrift kraften er høgere enn gravitasjonskraften vil den gå oppover, ellers vil den gå nedover. Husk [[Newtons andre lov, vekt]] $\\sum \\vec{F_y}=||\\vec{F_B}||+||\\vec{W}|| = \\vec{F_y}=\\textit{oppdriftskraft} + (\\textit{gravitasjonskraft, også kjent som vekt, som er negativ i størrelse})$\n\u003e$\\sum \\vec{F_y}=oppdrift+gravitasjonskraft$\n\nHusk at gravitasjonskraften er negativ dersom vi settjer + som opp og - som nedover.\n\n## Fersk vatn\n\nFerskvatn har ein massetetthet på ca. $1000\\frac{kg}{m^3}$ som betyr at ein kube av vatn, (jepp ein kube vatn, Minecraft style 😎), som har eit volum av $1m^3$ har ein vekt på omtrent $1000kg$. Dersom ein gjenstand har mindre massetetthet enn $1000\\frac{kg}{m^3}$ vil den dermed flyte i vatn. Dersom den er høgere vil den synke i vatnet.\n\nDette er fordi ein som lavere vil gjere at den veger mindre enn vatnet, og ein høgere betyr at den synker i vatnet. Dette er nemleg berre andre metoder å si dersom noko veg meir enn væsken som den er i så vil den synke, dersom ikkje vil den flyte! \n\n![[Massetethett 2022-10-06 17.50.28.excalidraw]]\n\n\n\n\n\n## I luft\n\nMassetettheten ($\\rho$) er i luft $1,293\\frac{kg}{m^3}$\n\n## Oppdrift\nOppdrift er ein kontaktraft som går oppover og er som vi lærte om i massetetthet er oppdrift kraften eit objekt har dersom den veger mindre enn den væska den leggjer i.\n\nSymbolet er $\\vec{B}$ eller $\\vec{F_B}$ (frå engelsk buoyancy).\n\nFormelen for oppdrift er som følgende:\n$\\huge \\vec{B}=\\rho_f\\times V \\times g$\n\n$\\rho_f$ er massetettheten til omgivelsen den er i, f for fluid.\n$V$ er volumet som til objektet vi snakker om.\n$g$ er størrelsen til gravitasjonsakselerasjonen. (Nær jordkloda er den størrelsen til den $9.81\\frac{m}{s^2}$)\n\nArkimedes (271-212. f.Kr) fant ut at denne kraften gjelder for absolutt alle gjenstander, uansett tetthetten. Det er også mogleg å sjå ut frå formeleen for oppdrift. Oppdriften avhengiger ikkje av massen av gjenstanden, bare av volumet, tyngdeakselerasjonen og masetettheten den har i omgivelsen. Vi kan sjå på eit eksempel. \n\n\nEin ball av noko har eit volum av $1m^3$ og den liggjer i ferskvatn, dens oppdrift er:\n$\\large \\vec{B}=\\rho_f \\times V \\times g = 1000\\frac{kg}{m^3}\\times 1m^3 \\times 9.81\\frac{m}{s^2} = 9810kg\\times \\frac{m}{s^2}=9810N$ oppover.\nSom er heilt korrekt, litt mykje men det er heilt korrekt :).\nViss vi veit objektet sin vekt kan vi òg finne akselerasjonen til den [[Newtons andre lov, vekt]]. \n\n\n\n\u003e[!INFO] Oppdriftskraften er like stor som tyngen til væsla legemet fortrenger . Oppdriften er oppover og virker frå tyngdepunktet til den fortrengte væsken. Den fortrengte væsken sin masse blir funnet i frå $\\rho \\times V$ der $\\rho$ er massetettheten og $V$ er volumet til området som blir fortrengt.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Meiose.":{"title":"","content":"\n# Meiose.\n\nMeiose er ein [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuell reproduksjon prosess]] som skaper [[Introduksjon til cellen.|cellene]] som blir brukt under seksuell reproduksjon. Meiose består av to ulike faser som omdanner ein diploid celle over til 4 haploider. Disse sex cellene blir kalt for \"*gameter*\", og vi finner dei i alle seksuelle basert reproduksjon systemer, det er til dømes pollen, sperm, eggceller, etc.\n\nFør meiose skjer [[Interfase.]] dette gjer at cellen har to systerkromatider inni cellen som meiosen kan ta i bruk, og fordi ein cellen er diploid tyder dette at cellen har to homologe kromosom par.\n\nVi deler meiose opp i fleire prosesser.\n\n\n## Meiose 1.\nMeiose 1 er det første steget av meiose. Og målet er å dele dei homologe kromosom parene frå kvarandre i ein diploid celle (2n). \nVi deler meiose 1 inn i faser.\n1. Profase 1.\n\t1. Homologe kromsomene pare seg opp og deler biter av genetisk informasjon med kvarandre, dette skaper variasjon, og ofte skjer på fine kuttpunkter, noko kjent som *kromosom kryssover*.\n\t2. Kjernemembranen oppløses.\n2. Metafase 1.\n\t1. Homologe kromosomer linjer seg opp på Metafase platen, eit midtpunkt i cellen, dei ligger ganske variert linjet, dette skaper variasjon. \n\t2. Sentrosomene går til kvar side av cellen og gjennom mikrotuboler fester seg til kromosomene.\n3. Anafase 1\n\t1. Homologe kromosomparene sperer til ulike deler av cellen, dei blir trekkt av sentrosomene sine mikrotuboler til sentrosomene. (syster kromatidene helder seg sammen).\n\t2. Cytokinese starter å ta form, og gjer at cellen liknar meir og meir ut som to ulike celler.\n4. Telofase 1.\n\t1. Cytokinese runder av, blir over til to nye celler.\n\t2. Kjernemembraner blir dannet rundt dei genetiske informasjonene i kvar side av cellen.\n\t3. Mikrotubolene til sentrosomene blir brytt ned, slik at det blir over til ein original form med haploid mengde genetisk informasjon.\n\nDet er mykje meir å si om Meiose 1 som viser til korleis disse stegene er nødvendig for meir variasjon og korleis cellen klarer å få den genetiske informasjonen til å ligge seg opp mot metafase platen. men det er litt mykje å skrive her og nå.\n\nVi kan oppsumere meiose 1 slik i dette bilete, det er på engelsk da!\n![](https://cdn.kastatic.org/ka-perseus-images/f2dadb5759ec2c840b8c960f0b55b00aebf74301.png)\nI mellom meiose 1, og meiose 2 kan [[Interfase.|interfase 2]] og dette er berre ein interfase mellomperiode mellom meiose 1 og meiose 2, der den utøver dei normale interfase fasene. \n\n## Meiose 2.\nI meiose 2 er målet å seperere systerkromatidene i frå kvarandre. (Liknar til mitose), dette gjer dei 2 nye haploide cellene som har systerkromatider over til 4 haploide celler med ingen systerkromatider, men berre haploide kromosomer, dette i andre ord betyr at dei går over  å bli gameter, sex celler. Jippi 🤤😝😈🍸. \n\n\nMeiose har liknande faser til Mitose, men varier på nokre små punkter, og eit stort eit lmao. \n\nFasene er:\n1. Profase 2.\n\t1. Cellekjernemembranen brytes opp.\n\t2. Kromatin kondensert form.\n\t3. Sentrosomer blir duplikert.\n2. Metafase 2.\n\t1. Sentrosomene migrerer til polene av cellen.\n\t2. Kromosomene går til midten/ metaplaten.\n\t3. Mikrotuboler oppstår og griper om på kromosomene.\n3. Anafase 2.\n\t1. Mikrotubolene splitter kromosomene i to ved å dra på kromatidene slik at kromatidene migrer til kvar sin side av polene.\n4. Telofase 2.\n\t1. Cytokinese begynner å runde av.\n\t2. Mikrotubolene køysnes \n\t3. Ukondensert kromatin form.\n\t4. Cellekjernen fomrest igjen.\n\t5. Nå har dei blitt 4 haploide gameter.\n\t\t1. Ikkje homologe kromosomer i cellen, eller systerkromatider.\n\t\t2. Disse cellene er ikkje identitiske til kvarandre, fordi homologe kromosom par er ikkje identisk i genetikk men lik i posisiojener og gener, men ikkje genversjoner, og ikkje minst at det kan oppstå kromosom kryssover.\n\n\nVi kan oppsumere meiose 2 slik (på engelsk):\n![](https://cdn.kastatic.org/ka-perseus-images/9a74225bd24998f2c863366b8b57d238b9b9b653.png) ","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mekanisk-Energi":{"title":"","content":"   \n## Mekanisk Energi\nDen mekaniske energiene 3r summen av den [[Kinetisk energi.]] og den [[Potensiell Energi]]. \n\n$\\huge E=E_k+E_p$\n\n\n## Bevaring av Mekanisk energi\nSå **lenge** gravitasjonskraften er den **eneste** kraften som gjer eit arbeid på eit objekt er den mekaniske energien konstant då er det:\nOg er som regel konstant da den potensielle energien blir over til kinetisk energi ettersom objektet faller.\n\n$W_G=\\Delta E_k$\n$E=E_0$\n$\\huge E_{p0}+E_{k0}=E_k+E_p \\rightarrow$\n$\\huge \\frac{1}{2}m*v_f^2+m*g*h_f=\\frac{1}{2}m*v_i^2+m*g*h_i$\n\u003e[!INFO] This makes sense\n\u003eDette gir mening fordi det er berre ein kraft, og det er gravitasjonskraften, dermed vil energien bli bevart fordi all potensiell går over til kinetisk til slutten.\n\n\n## Endring av mekanisk energi.\nDersom det er to eller fleire krefter som påverker eit objekt, så vil det vere ein endring i mekaniske energi då disse kreftene utfører eit [[Arbeid]] og vi veit i frå setninga om [[Arbeid#Setningen om Kinetisk energi.]] at den mekaniske energien vil forandre seg. Kreftene gjer eit arbeid viss det ikkje er vinkelrett på bevegelsen, husk [[Arbeid]] definisjon: ($F\\times cos\\theta \\times \\Delta x$). \n\nViss vi har friksjon eller luftmostand som verker mot beveglsen vil den mekaniske energien til slutt væere mindre nn den mekaniske energien, dersom det ikkje er ein anna kraft som motverkar denne kreften.\nViss det verker krefter med beveglsen vil dei gjere eit positivt arbeid go den mekaniske energien auker, dersom i mot vil den gjere eit negativt arbeid og den mekaniske energien minsker.\n\nDette tillét oss å sjekke om det er andre krefter som påverkar objektet enn [[Newtons andre lov, vekt|gravitasjonskraften]].\n\nUt i frå dette kan vi videreutvikle setninga som bevarer mekaniskenergi.\n\nDette er som følgende\n$\\huge E_f = E_i + W_A$.\n$\\frac{1}{2}m*v_f^2+m*g*h_f=\\frac{1}{2}m*v_i^2+m*g*h_i+W_a$\nog $W_a$ er $\\sum F \\times \\Delta x$\n\nVi får altså ein ekstra energi skapt av dei andre kreftene som verkar i distansen som objektet beveg seg.\n\nVi pleier å notere [[Arbeid]]et utført av dei andre krefter som $W_A$, og dette tillét oss å rekne ut sluttfart dersom vi veit kva den sumkraften er og distansen den beveger seg.\n\nDette gjer også at den mekaniske energien når det er andre krefter involvert:\n\n$\\huge E_f = E_i + W_A$.\n\n$\\huge W_A=E_f-E_i$\n\n\nHusk i frå  [[Arbeid]] at $W=F\\times cos(\\theta)\\times \\Delta Strekning$\nFordi dei andre kreftene lager ein sum arbeid kan vi finne sum kreften.\n\n$\\LARGE \\vec{F}=\\frac{E-E_i}{cos(\\theta)\\times \\Delta Strekning}$.\n\nDersom F er berre [[Statisk og kinematisk friksjon.]] kan vi også seie at\n$\\large \\vec{R}=\\frac{E-E_i}{-\\Delta Strekning}$\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Melkesyregj%C3%A6ring.":{"title":"","content":"# Melkesyregjæring.\n\nEin av dei fleire ulike rutene som kan oppstå dersom det er ein mangel oksygen under [[Cellulær respirasjon.#Glykolyse|glykolyse]]. Det er mange ulike organismer som lever reint av melkysyregjæring og får sin energi derifrå så vi burde ta ein liten titt på korleis melkesyregjæring fungerer og kvifor eit organisme kanskje vil få sin energi derifrå.\n\nI melkesyregjæring blir pruvatene brukt til å oksidere $NADH$ slik at det blir $NAD^+$ igjen (som kan bli brukt igjen i glykolyse og deretter melkesyregæring). Dette gjer at ein organisme kan bruke melkesyregjæring til å skape $2ATP$ om gangen slik at den får energi, utan å krever oksygen. Men etter prosessen blir jo sjølvsagt pryuvatene skiftet i struktur, dei går over frå pyruvat syre over til det som vi generellt kjenner som \"Melkesyre\". 🤯\n\n\u003e[!INFO] Fun fact.\n\u003e Det er nokre [[Prokaryote celler.|laktobakterier]] som bruker melkesyregjæring til å skaffe seg ATP. Dette er grunnen til at joghurt smaker som den gjer.\n\nI denne prosesen blir eit $H$ frigjort i frå $NADH$-et slik at det blir $NAD^+$. Som konsekvent vil gjere at pyruvat syren får tak i eit ekstra $H$ atom, men det trenger ikkje å vere samme $H$ atomet, det kan men må ikkje. Dette ekstra $H$ atomet gjer at pyruvaten blir over til det som vi kjenner som $Melkesyre$.\n\n\u003e[!INFO] Note.\n\u003eDette skjer ofte med hjelp av [[Enzymer]], det pryvatsyren og $NADH$ fester seg nærme kvarandre i den aktive sonen.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mergesort":{"title":"","content":"# Merge sort - sorterings algoritmen.\nMerge sort er ein [[Rekurisve algoritmer.|rekursiv algortime]] basert på [[Divide and Conquer.]] teknikken, den sorterer ein array ganske enkelt. \n\nVed å bruke divide and conquer til å sortere trenger vi først å vite korleis våre subproblemer vil se ut som. Det fulle problemet er å sortere ein heil array så la oss si at vår subproblem er å sortere ein subarray. La oss starte subarrayen med index $p$ og slutte på index $r$. La oss gi arreyn ein notasjonen $array[p..r]$ . (Berre psuedocode). Originalt problem sorter : $array[0..n-1]$. \n\nMerge sort teknikk:\n1. Divide ved å finne nummeret \"q\" ut av posisjonen midt mellom $p$ og $r$. Gjer dette likt som binary search, adder $p$ og $r$, divider med $2$, rund ned til nærast integer.\n2. Conquer med å rekursivt sortere kvar subarray i kvar av dei to subproblemene/subarrayene, skapt av den originale divide steget. Sorter $array[p..q]$ og $array[q+1..r]$. \n3. Combine ved å \"merge\" dei to ulike sortertere subarrayene tilbake til ein singel sortert array $array[p..r]$.\n\nBase case er subarrayen har to eller mindre elementer. Når $p\\le r$ siden arrayen med null elementer eller berre ein er allerie sortert. Så dividerer og konkurerer berre når $p\\lt r$. Steget av å dividerer og konkurere skjer rekurisvt  - fleire ganger.\n\n\nVi tester ut eit eksempel:\nVi har ein $array[14, 7, 3, 12, 9, 11, 6, 2]$. \nI første iterasjon er det heile arrayen vi driver med $p=0,r=7$. Denne arrayen er meir enn to elementer så det er ikkje ein basecase.\n\n1. I divide steget settjer vi $q=3$, $\\lfloor \\frac{7}{2}\\rfloor = 3$.\n2. I conquer steget sorterere vi arrayen mellom $array[0..3]$ og $array[4..7]$ . \n\t1. $array[0..3]$ blir over til $[3,7,12,14]$ \n\t2. $array[4..7]$ blir over til $[2,6,9,11]$.\n3. I combine steget drar vi disse to sorterte arrayene sammen. Slik at resultatet blir til slutt.\n\t1. Slik at $array[0..7]$ blir til $2,3,6,7,9,11,12,14$.\n\nMåten vi sorterer dei to subarrayene skjer på samme metode vi divide og conquere den. \nSå lenge dei ikkje er ein basecase.\n\nHer er ein visualisering over korleis mergesort sortere denne arrayen.\n\n![](https://cdn.kastatic.org/ka-perseus-images/ace963383bea8d154f6abd1322a06a73b56b4628.png)\n\nDei fleste stegene i mergesort er ganske lette, vi kan lett dividere, og ganske lett finne midpointet. Den vanskelege delen er å merge dei ulike subarrayene når det trengst.\n\n\n## Merge to subarrays, aka linear time merging.\nDen igjenstående delen av mergesort er å merge subarrayer. \nÅ merge to subarrayer kan vi gjere i linear-time som tyder den har ein $\\theta(n)$.\n\nDet første vi gjer å kopiere dei ulike subarrayene inn i nye variabeler slik at vi kan tulle med subarrayene for å merge dei sammen.\n\nFørst: \n1. Alloker to midlertidige arrayer: laveHalve, høgeHalve.\n2. Kopier $array[p..q]$ inn i laveHalve, og $array[q+1..r]$ inn i høgeHalve.\n\t1. I vårt tidligere eksempel tyder dette av laveHalve har ein verdi av $[3,7,12,14]$ og høgeHalve $[2,6,9,11]$.\n3. Så merger vi dei!\n\t1. Vi itererer over antallet elementer som skal vere\n\t2. Vi tar den minste verdien av index $i$ på laveHalve og index $j$ på høgeHalve og settjer den minste inn i vår aktuelle nye array.\n\n\n\n\n# Analyse av mergesort.\n\nMe veit at merge funksjonen kjører i $\\theta(n)$ når vi merger $n$ elementer, men kvifor er da mergeSort i $\\theta(n\\times \\log_2(n))$. Vi kan starte ved å sjå på runningtimen til dei tre ulike stegene i [[Divide and Conquer.]]. Vi ser litt nærmere:\n1. Divide - divider steget tar ein konstant tid, uansett kva størrelsen av subarrayen er. Etter alt så er det einaste divider steget gjer å komputere midpunkt verdien $q$ av indexene $p$ og $r$. I [[Big theta]] indikerer vi ein konstant tid av $\\theta(1)$.\n2. I conquer steget gjer vi ein rekursiv sorterting av to subbarrays av omtrent $\\frac{n}{2}$ elementer. Det tar litt tid, men vi tar hensyn til den tiden når vi holder på med subproblemene.\n3. Når vi merger eit totalt av $n$ elementer gjennom vår merge funksjon tar det $\\theta(n)$\n\nNår vi tenker på divider og kombiner stegene sammen, vil den $\\theta(1)$ running-timen for divider steget vere ein lav order term i forhold til $\\theta(n)$ av running-timen til kombiner steget. Så la oss tenke at divider og kombiner stegene sin running time kombinert er $\\theta(n)$. Litt meir konkret tar dei ein total running-time av $c\\times n$ for ein eller anna konstant verdi av $c$.\n\nViss vi halder det simpelt og sier at viss $n\\lt1$ da er $n$ alltid eit partall, så det gjer at vi kan tenke at $\\frac{n}{2}$ er òg ein integer. (Og partall). Tilfellet der $n$ er eit oddetall skifter ikkje [[Big theta|Big Theta]] av funksjonen. Så vi kan tenke at runnningtimen for mergeSort er summen av of 2 gange runningtimen av mergeSort på ein subarray av $\\frac{n}{2}$ størrelse (for conquer seget), $+cn$. (for divide and combine stegene).\n\nNå må vi finne ut runningtimen av to rekursive tilkalling på $\\frac{n}{2}$ elementer. kvar av disser rekursive tilkallingene tar dobbelt så lang tid av running timen av mergeSort på ein array av $\\frac{n}{4}$ størrelse (vi halverer $\\frac{n}{2}$ blir til $\\frac{n}{4}$), plus $\\frac{cn}{2}$ til å merge. VI dermed har to subproblemer av størrelse $\\frac{n}{2}$ som begge tar $\\frac{cn}{2}$ tid til å merge. Så vi kan sie at den totale tiden for å merge alle subproblemene hittil av størrelse $\\frac{n}{2}$ er det same som $\\frac{cn}{2}\\times 2$. \n\nVi kanteikne ut merging tidene i eit tre.\n![](https://cdn.kastatic.org/ka-perseus-images/808e1b1b992aef56270b3fc2b9ecc1a68eba8988.png)\n\n\nInformatikk vitskapsmenn teikner trer oppned frå korleis trer normalt vokser. Eit tre er ein graf utan nokon sykluser (sykluser er veger som starte og slutte på samme sted). Dei ulike delene av eit kaller vi for treets nodes. Root node-n er på toppen, her er root-noden merket med $n$ for arrayen sin originale størrelse. Under finner vi nodesene som har ein subarray størrelse av $\\frac{n}{2}$.\n\nkvart av subproblemene av størrelse $\\frac{n}{2}$ rekursivt sorterer to subarrayer av størrelse $\\frac{n}{4}$. Fordi vi har to subproblemer av størrelse $\\frac{n}{2}$ så har vi fire subproblemer av størrelse $\\frac{n}{4}$. \nOg merge tiden for kvar av disse subproblemene av størrelse $\\frac{n}{4}$ er det samme som $\\frac{cn}{4}$ og summert blir dei til saman $4\\times \\frac{cn}{4}=cn$. \n\n![](https://cdn.kastatic.org/ka-perseus-images/6a59f0e9973778cd9a157d8f92d5301dcf619417.png)\n\nVi fortsetter slik heilt til $n==1 || n==0$ . Etter hvert som subproblemene blir mindre blir nummeret av subproblmer dobblet kvar gang det går ein iterasjon nedover i rekursjonen. Dobblingen og halvering kanselerer seg ut og gjer at vi får ein total merging time kvar gang av $cn$. Til slutt kjemer vi til base casen, der $n==1$, og fordi vi om vi er komt til base casen eller ikkje gjennom $p\\le r$ så tar dette litt tid. Kor mange subarrayer av størrelse 1 er det. Siden vi starter med ein array av størrelse $n$ så gjer det at vi ein mengde $n$ subproblemer med ein størrelse av subarray 1. SIden kvar basecase tar tid $\\theta(1)$ så kan vi si at alle base casene tar til sammen $cn$ tid.\n![](https://cdn.kastatic.org/ka-perseus-images/5fcbebf66560d8fc490de2a0d8a0e5b1d65c5c54.png)\n\n\nNå som vi veit kor lang tid merging tar for kvart subproblem. Den totale tiden for mergeSort til å kjøre er den totale mengden merging tider for alle levelene. Viss det er $l$ leveler i treet så er tiden $l\\times cn$. Viss vi skal finne ut kva $l$ er så må vi så på korleis vi går nedover, kvar gang vi går nedover så halverer vi i størrelse, nett likt som vi gjer når vi har binary-search, derfor kan vi si at tiden er $l=log_2(n)+1$, akkurat som i binary search. Siden 1 er eit uviktig tall så kan vi ignorere denne når det kjemer til den endelige running tiden, i tillegg fordi $c$ er konstant så kan vi òg ignorere denne.\nDette gjer at vår running time dermed er $\\theta(n\\times \\log_2(n))$.\n\nEin anna ting om mergeSort som er viktig å legge merke til, den tar å kopierer ein kopi of heile mens den blir sortert, med den eine delen i lowHalf og den eine delen i highhalf. Fordi den kopierer meir enn ein konstant nummer av elementer samtidig, så sier vi at mergeSort jobber ikkje \"in place\". derimot både [[Selection sort.]] og [[Insertion sort.]] jobbe in place, siden dei aldri lager ein kopi av ein størrelse som ikkje er konstant. Fordi nokre systemer er det ikkje stor mengde fri plass av memory så liker vi ofte å ta dette i hensyn og bruke heller in-place algoritmer når dette er scenearioet.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Metabolisme.":{"title":"","content":"# Metabolisme.\nFor at eit organisme skal overleve må den ta i bruk noko som heiter metabolisme for å skape og bruke energi. Dette skjer gjennom å forandre strukturen, sammensettje, bryte i frå kvarandre strukturene til molekyler. Alle disse reaksjonene som skjer med molekylene heiter metabolisme.\n\nVi har to ulike deler som metabolisme går ut på:\n1. Anabolisme.\n2. Katabolisme.\n\nAnabolisme og katabolisme er nesten som det motvendte av kvarandre. \n\n\nMetabolisme er ein svært kompleks ting det er ikkje så simpelt som ein kanskje trur, dette er fordi det skjer svært mange ulike reaksjoner, med svært mange ulike stoffer.\n\nHer er eit diagram som viser alle dei viktigste ulike vegene for metabolisme av ein eukaryote celle. \nKvar linje er ein reaksjon, og kvar sirkel er produktene eller reaktantene. \n![](https://cdn.kastatic.org/ka-perseus-images/0ae86cada9d61fc05a6811ae3d16b0da2d7fcc73.png)\n\n\n\nI metabolisme gir nokre av reaksjonene ut energi og kan skje heilt spontant, og nokre trenger energi for å skje. Dette er grunnen til at vi eter, det er disse reaksjonene trenger energi. Ein kan kanskje tru at ein kan berre bruke energien som kommer frå dei andre reaksjonene, men dette er ikkje sant fordi kroppen trenger energi til å vokse så den krever eit overskudd av energi.\n\n### Bryte ned glukose. [[Cellulær respirasjon.]].\nCellulær respirasjon som vi finner i [[Mitokondria]] er ansvarleg for å bryte ned bla. glukose, eit [[Karbohydrater.|monosakkarid]]. \n\nDei aller fleste cellene dine i kroppen din får energien sin i frå glukose ($C_6H_{12}O_6$) gjennom prosessen kalt \"cellulær respirasjon\". I løpet av denne prosessen blir glukose gradvis over tid brytt ned og undervegs gir ut energi.\nDen overalle reaksjonen etter alle stegene ser slik ut:\n$C_{6}H_{12}O_6 \\rightarrow 6CO_2+6H_2O+energi$.\n\n\nÅ bryte ned glukose gir ut energi, som oftast blir lagret i formen av [[ATP]]. Adenosintrifosfat. Som gir cellen ein rask tilgang til energi. \n\nNår ATP-en er blitt skapt kan andre reaksjoner bruken den som energi kjelde. Mykje likt som mennesker har ein valuta, er ATP på ein slags måte valuta-en for energi i celler.\n\n\n## Bygge opp glukose. Fotosyntesen.\nFor å sjå korleis ein energi-krevende metabolisk veg kan sjå ut kan vi ta i bruk den omvendte reaksjonen. For å skape monosakkaridet glukose kan vi sjå på [[Fotosyntesen]]. Ein reaksjon som skjer i [[Kloroplast.]] i planteceller.\n\nSakkarider som glukose er lagt i planter i gjennom ein prosess som heiter fotosyntesen. I fotosyntesen bruker planter energien i frå solen og $CO_2\\space \\\u0026 \\space H_2O$ til å skape sakkaridene.\n\n$6CO_2+6H_2O+energi(sol)\\rightarrow C_6H_{12}O_6$.\n\nAkkurat som dyr krever planter energi for mange av dens cellulære prosesser. Dei kan òg vere ein energikjelde for dyr til å spise, som eit ekorn som spiser ein nøtt.🐿. I begge scenario-ene vil glukosen frå denne prosessen bli brytt ned til [[ATP]] i [[Cellulær respirasjon.]]. Entens i planten, eller i ekornet ⚡️.   \n\n\n\n\n## Metaboliske veger.\nI begge dømene av å bygge og bryte ned glukose er disse begge **metaboliske veger** . Ein metabolisk bane er eit sett med reaksjoner som går inn i kvarandre. Vegen starter i frå eit eller fleire molekyler som går igjennom fleire reaksjoner og ender opp med eit slutt produkt.\n\nVi kan dele dei metaboliske vegene inn i to hovudkategorier: anabolisme, og katabolisme. Anabolisme betyr at dei bygger opp molekyler som i [[Fotosyntesen]]. I mens katabolisme betyr at dei bryter ned molekyler som i cellulær respirasjon.\n\n\nHer er eit døme på ein metabolisk veg:\n![](https://cdn.kastatic.org/ka-perseus-images/4e99093daa6d6ad71223944713088e8a6c6e614e.png)\n\n### Anabolisme.\nAnaboliske veger bygger komplekse molekyler i frå simplere molekyler, og trenger generelet energi for å utføre reaksjonene. Å bygge glukose i frå karbondioksid og hydrogendioksid er eit godt døme på anabolisme. andre dømer inkluderer syntesen av [[Proteiner og aminosyrer.|proteiner i frå aminosyrer]]. Eller å bygge [[Nukleotider og nukleinsyrer.#DNA|DNA i frå nukleotider]]. Disse biosyntetiske prosessen er nødvendige for livet av ein celle og tar konstant plass, ofte bruk av [[ATP]] eller andre kortvarige energi kjelde molekyler.\n\n### Katabolisme.\nKataboliske veger involverer nedbrytingen av komplekse molekyler inn i simplere molekyler og oftast gir ut energi. Energi-en lagret i disse komplekse molekylene, som glukose og fettysrer, er løsgitt i dei katboliske vegene. Dei er deretter høstet i andre former som cellen kan bruke som energi-kjelde. (Til dømes gjennom syntesen av ATP).\n\n\n## Viktig.\nDei kjemiske reaksjonene i metaboliske veger skjer ikkje atuomatisk uten veiledning. Dei i staden gjennom kvar reaksjons steg i den metaboliske vegen er tilrettelagt eller katalysert av eit protein som heiter eit [[Enzymer|enzyme]]. Enzymer hjelper å kontrollere biokjemiske reaksjoner. \n\n\n\nEin reaksjon som gir ut energi blir kalt: **Eksergonisk reaksjon**.\nOg ein som krever energi blir kalt: **Endergonisk reaksjon**.\n\n\n\n\n\u003e[!INFO] Huskeregel.\n\u003eKatabolisme kan ein huske ved kannablisme, som er nesten det katabolisme gjer den bryter ned stoffer for å utgi kjemisk energi. Anabolisme er det omvendte som tyder dei settjer saman stoffer. \n\n\nDet skjer fleire tusen av metaboliske reaksjon samtidig i kroppen. Alle er kordinert med kvarandre og regulert forsiktig til å hale organismen funksjonerende korrekt.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mikrobielle-sykdommer":{"title":"","content":"## Mikrobielle sykdommer\n\nMikrobielle betyr [[Bakteriar]], [[Sopper]], [[Protister]] i [[Planter]] og [[Dyr]].\n\n\n### Forløp i mikrobiell sykdom med bakterier.\n\nBakterier er avhengig av å feste seg til ein overflate for å kunne danne ein koloni, som huden til eit [[Dyr]]. [[Bakteriar]] [[Prokaryote celler.]], strukturer som [[Flimmerhår, flageller og psuedopoder.|flimmerhår, cilier]] hjelper den å halde seg fast til overflaten.\n\n1. Endocytose \n\t1.  Den lurer cellemembranen til å tillate organismet å gå inn.\n2. Formering\n\t1. Den formeirer seg imens den er i organismet.\n3. Spreiing\n\t1. Eksocytose.\n\t\t1. Den lurer organismet til å la den gå videre ved å la den ut gjennom eksocytose.\n\n\n### Korleis oppstår nye mikrobielle sykdommer.\n[[Ulike typer reproduksjon.#Binær fisjon.|Binær fissjon]]\nMutasjoner\nOVerføring av [[DNA]]\n* Gjennom Konjugering\n* Gjennom tranduksjon\n* Gjennom transformasjon\n\nI bakterier er det tre mekanismer av horisontal gen overføring dette er transformasjon, transduksjon og konjugering. Transformasjon fungerer ved at en bakterie tar opp DNA fra en dø degradert bakterie og bruker denne nye biten med DNA til å bytte ut en bit den allerede har. transduksjon involverer overføring av en bit med DNA fra en bakterie til en anna gjennom et bakteriofag. Konjugering koder gjennom plasmid eller transposoner. Det involverer en donor bakterie som inneholder et konjugerende plasmid og en mottaker som ikke har det. Plasmidet er selv overførbar og har alle genene til å klare å overføre seg til en ny bakterie.\n\n[[Naturleg seleksjon]]\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mikroskopi":{"title":"","content":"# Mikroskopi\nAlle biologer har ein rar fascinerende kink for mikroskoper, og spesielt å se å celler under dei. LOL.\n\nMange celler samlet kan ha ulike strukturer i eit levende objekt. Til dømes: strukturen til planteceller i eit blad liknar litt rektangler. Celler er overalt, det er celler i roser, gress, hånden din, augene dine, ……, etc. Og ofte ligg dei i lag som på huden din, og gjennom mikroskopi kan vi studere celler.\n\n## Mikroskoper og linser.\n\nLikevel celler varierer i størrelse er dei generellt jævlig små. Til dømes er er ein raud blodcelle omtrent $0,008 millimeter$, og auget til ein nål er $1millimeter$. Så i auget til ein nåø kan du ha 125 raude blodceller på rad. Det er ikkje mogleg å sjå celler individuellt med auget da trenger du eit mikroskop (Mikro=liten, skop= å sjå på). Mikroskop gjer små ting store gjennom ein lisne og dette kan lagrast biletet kan lagrest som eit bilete som heiter mikrofotografier.\n\nMikroskop kan òg ha fleire linser, disse mirkoskopene kan forsterke bilete/gjeer det mykje større. Dise mikroskopene heiter sammensatte mikroskop. \n\nEit mikroskop som består av berre ein linse heiter simple mikroskop. I eit sammensett mikroskop pga. linsene blir bilete ofte omvendt eller oppned. Mange dyre sammensatte mikroskop har eksta linser uten styrke som drar bilete tilbake til rett retning.\n\nDet er to ting som differerer enkle mikroskop og forskningsmikroskop. \n* Forstørrelsen er kor større eit objekt blir på bilete i forhold til den normale størrelsen. Til dømes: enkle mikroskop kan ofte forstørre maks $400$ ganger i forhold til ekte størrelse.\n* Oppløysinga av eit mikroskop eller ein linse  er den minste avstanden to objekt kan vere i frå kvarandre og fortsatt kunne bli sett som to egne objekt. Lavere oppløsning gir betre, klarere bilete av mikroskopet/linsen.\n\nEin vil ha både høg forstørrelse og lav oppløsning viss me vil ha gode bileter.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mitokondria":{"title":"","content":"# Mitokondria.\n\nMitokondria (Eintall:\"Mitokondrion\") er ofte kalt straumfabrikken til ein celle pga. dens oppgåve. Oppgåven til die er å gi stødig mengde av ATP (Adenosintrifosfat). Cellens hovudenergi molekyl. Prosessen av å lage ATP gjennom kjemiske energi frå stoffer som [[Karbohydrater.|sakkarider]] heiter \"[[Metabolisme.#Bryte ned glukose Cellulær respirasjon|cellulær respirasjon]]\", [[Cellulær respirasjon.]]. \n\nMitokondria er lokalisert i cytosylet av [[Introduksjon til cellen.| den eukaryotiske cellen]] og har ein ovalliknande form, ikkje minst har dei òg to [[Introduksjon til cellemembranen|membraner]].\nEin yttermembran og ein indremembran. Den yttermembranen omringer heile [[Kva er organeller - organeller i eukaryotiske celler.|organellen]] imens den indre membranen har mange små innover stikkende fremspring kalt \"Cristae\" som auker overflateareaelet. \"Cristae\" var trudd til å vere mange lange lag men det er nå oppdaget at dei har ein anna fomrasjon som liknar lange huler. \n\nRommet mellom membranene kalles \"intermembran rommet\". Har eit kompratament gjømt vekk under den indre membranen kalt \"Mitokondriell amtrise\". Denne matrisen inneholder organellens [[Nukleotider og nukleinsyrer.#DNA|DNA]] og [[Kva er organeller - organeller i eukaryotiske celler.|ribosomer]]. \n\nDen multi-kompartamente strukturen av eit mitokondrion ser ganske komplisert ut. Den er komplisert for god grunn, det er nemleg srdeles bra for cellulær respirasjon å tillate organellen å bli holdt i frå kvarandre med ulike forskjellige kondisjon og konsentrasjonen av molekyler i dei ulike \"rommene\". \n\nLikevel mitokondria er funnet i alle eukaryote celler varierer mengden av dei og viktigeten til dei drastisk baset på energi kravene til cellen og rollen til cellen. Til dømes:\nMuskelceller har høge energi krav og dermed store mengde mitokondria.\n\n\nHer er eit tradisjonell modell av mitkondria på engelsk:\n![](https://cdn.kastatic.org/ka-perseus-images/0b8cf9cb96f71e397635d22f67c6c6b1e2cc23be.png)\n\n\nHer er ein 3D moderne modell:\n![](https://cdn.kastatic.org/ka-perseus-images/c46f84a55b8f6777c9b1730c50a04e1f2db2d8bd.jpg)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mitokondria-og-Kloroplast":{"title":"","content":"# Mitokondria og kloroplast.\n\n\nKey points:\n* [[Mitokondria]] er \"powerhouse\"/straumfabrikken til [[Introduksjon til cellen.|celler]], og den bryter ned stoffer (sakkarider) og omdanner det til ATP energi som cellen kan bruke.\n* [[Kloroplast.]] er funnet i planter og alger. Dei er ansvarleg for å omdanne stoffer med hjelp av solenergi til [[Karbohydrater.|sakkarider]] i gjennom [[Fotosyntesen]].\n* Mitokondria og kloroplast begynte antagenteligvis som bakterier som beli oppslukt av større celler ([[Introduksjon til eukaryote celler.|eukaryote]]) gjennom prossesen \"Endosymbiose\", (Endosymbionteori).\n\n\n## Introduksjon.\nKroppen din er lagt opp av mange billioner av celler. grunnen til at du spiser er slik at du kan få tak i energi. Men korleis er det energi i planter i det første? Disse spørsmåla blir svart på av to [[Kva er organeller - organeller i eukaryotiske celler.|organeller]] sine funskjoner. Mitokondria og kloroplast. \n* Kloroplast er organellen funnet inne i planteceller. Disse fanger lysenergi og gjennom [[Fotosyntesen]] omdanner dei til energi-brukbare stoffer for mitokondriaet.\n* Mitokondria er funnet inne i alle eukaryote celler. Disse omdanner energien lagret i molekyler (som bla. frå klorplast) om til ein energi form callen kan bruke (ATP).\n\n[[Mitokondria]]\n[[Kloroplast.]]\n\n\n## Dannelsen av mitokondria og kloroplast.\n\nBåde mitokondria og kloroplast har sine eigne [[Nukleotider og nukleinsyrer.#DNA|DNA]] og [[Prokaryote og eukaryote celler|ribosomer]]. Dette er rart fordi det er jo [[DNA]] inne i cellekjernen av cellen.\n\nSterk bevis viser til at der har vore *endosymbiose* som har vært opphavet til disse [[Kva er organeller - organeller i eukaryotiske celler.|organellene]]. Symbiose er eit forhold der to ulike organismer lever nært og tett kvarandre, endosymbiose er når den eine organisme lever inne i den andre.\n\nBakteria, mitokondria og kloroplast er likande i størrelse. Bakterier har òg DNA og ribosomer liknande til dei i mitokondria og kloroplast. Basert på dette og andre bevis trur òg forskere at vertceller og bakterier skapte eit endosymbiotisk forhold for lenge siden. Når den individuelle vertcellen tok in aerobisk og fortosynetese brukende bakterier som ikkje øydela vertcellen kan den aerobiske bakterien over tid blitt til mitokondria, og den fotosyntiserende bakterien blitt til kloroplast.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Mitose.":{"title":"","content":"# Mitose.\nEtter [[Interfase.]] i [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuell reproduksjon]] av ein [[Introduksjon til cellen.|celle]], i andre ord celledivisjon, så er det mitose som driver denne divisjonen. Mitose er den [[Introduksjon til eukaryote celler.|eukaryote ]] versjonen av [[Prokaryote celler.|prokaryoter]] sin binær fisjon celle divisjon. Mitose liknar ganske mykje på interfase i at den fungerer i steg. Her blir òg brukt [[Kromosomer, Kromatider, Kromatiner.|kromatidene]] som blir skapt under interfase. \n\nI interfase vekser cellen, og skaper kromatider. For at cellen skal undergå mitose er disse nokre krav som må vere til staden.\n\nDen første fasen i mitose heiter *profase*. Her vil dei ukondenserte kromatinene bli over til kondenserte kromatiner og vi kan under [[Lysmikroskop.]] sjå dei ulike kromosomene. Her vil òg sentrosomene gå til kvar sin side av cellen. \n\nDen neste fasen heiter *metafase*, og handler ikkje om facebook. I denne fasen vil sentrosomene bruker det som heiter for mikotubolet til å strekke seg og feste seg på kromatidene på dei ulike kromosomene. Her vil òg sjølvsagt [[Introduksjon til cellemembranen|plasmembranen]] til cellekjernen bli fjernet slik at dei kan gå til kvar sin side.\n\nDen neste fasen heiter *anafase*. Her blir kromatidene splittet i frå kvarandre dratt til kvar sin eigen side av cellen, og kromatidene vil nå bli ansett som egne kromosomer. Det òg begynner litt *cytokinese*, som gjer at cellen former seg meir og meir til to individuelle celler. \n\nDen neste fasen heiter *telofase*. I telofase vil kromosomene ha nådd kvar sin side av cellene. Og nye [[Introduksjon til cellemembranen|cellemembranener]] begynner å bli dannet rundt kvar side av cellen slik at dei er klar til å vere nye celler. Her begynner cytokinese å runde seg av, slik at cellen blir inn i to nye indivduelle celler. \n\nVi kan altså visualisere mitose slik:\n![400](https://media.snl.no/media/146680/standard_1_celledeling-1.png)\n\nEller meir simpelt:\n![[Mitose. 2022-07-27 15.50.50.excalidraw|1500]]\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Momentan-vekstfart":{"title":"","content":"# Momentan Vekstfart\n\n## Kva er momentan vekstfart?\nMomentan vekstfart er nesten som [[Gjennomsnittleg vekstfart]]. Men er forskjellig på ein stor sektor. Momentan vekstfart er vekstfarten til eit spesifikt punkt på ein graf, ikkje ein gjennomsnittleg vekstfart mellom to ulike punkter. \nDet er simpelt sagt vekstfarten til det spesifike punktet. Eit anna namn for momentan vekstfart er [[Derivanter|Den deriverte]]. Å derivere er altså berre å lage ein funksjon for den momentane vekstfarten over $x$ verdiene i grafen. \n\n\n\n**REFERER TIL [[Derivanter]] FOR MEIR INDYBDE; DERIVANTER OG MOMENTAN VEKSTFART ER DET SAMME.**\n\n\n\n## Korleis rekne ut momentan vekstfart.\n\n### Ved [[Derivanter#Korleis finne den deriverte funksjonen|derivering]]:\nDette er den letteste metoden for å finne den momentane vekstfarten til eit punkt når vi har gitt den originale, eller den deriverte funksjonen. Viss vi har den originale kan vi [[Derivanter#Derivasjons regelen 1|derivere]] den til å få den deriverte funksjonen.\nVed den deriverte funksjonen kan vi berre settje inn $x$ verdien vi ønsker å finne den momentane vekstfarten til. \n![[Derivanter#Derivasjons regelen 1]]\n\n### Gjennomsnittleg vekstfart med svært lav $\\Delta x$.\n![[Derivanter#Gjennomsnittleg vekstfart med lav Delta space x Delta x]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Momentane-farter-Akselreasjoner-etc.":{"title":"","content":"# Momentane farter, akselerasjoner, etc.\n[[Fart]] [[Hastighet]] [[Hastighet(v) vs tid (s).]]\nÅ rekne ut dei ulike momentane fartene, og akselerasjoner og likt dersom vi har ein gjennomsnitt formel basert på tid.\nSå trenger vi berre å ta $\\lim_{\\Delta t\\rightarrow 0}$ av denne funksjonen.\n\nHusk at $a(s) = \\lim_{\\Delta t\\rightarrow 0}\\frac{V(s+\\Delta t)-V(s)}{\\Delta t} = v'(s)$\n\nOg $v(s)=\\lim_{\\Delta t\\rightarrow 0}\\frac{S(s+\\Delta t)-S(s)}{\\Delta t}=S'(s)$.\n\nDer $S$ er strekningen over tid.\nog $s$ er sekunder.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Momentum":{"title":"","content":"Momentumet til eit objekt forklarer dens fart med hensyn til dens vekt. Vi har samme teikn på momentum som vi har ved [[Newtons første lov - masse og treghet]] krafter. Momentum har ikkje ein eiga symbol direkte men blir som regel forklart gjennom dens forhald til krefter. Symbolet er nemleg $N\\times s$ som er det samme som $kg\\times \\frac{m}{s^2}\\times s$\nsom er $kg\\times \\frac{m}{s}$\n\n\nFormel for momentum:\n\n$\\large \\vec{P}=m\\times \\vec{v}$, der $m$ er massen og $\\vec{v}$ er [[Hastighet|hastigheten]].\n\nVi bruker momentum og ikkje hastighet som regel fordi momentum forklarer korleis ulike masser på objekter forandrer farten den beveger seg i.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Multiple-recursion-with-the-serpinski-gasket.":{"title":"","content":"# Multiple recursion with the serpinski gasket.\n\nSo for, the examples of [[Rekurisve algoritmer.|recursion]] that we've taken alook at requires you to make one recursive call each time. But sometimes multiple calls are required. \nA good example is the mathematical fractal known as sierpinksi gasket.\n\nThe way the sierpinski gasket works is by dividing a square into multiple smaller squares and choosing the top right top left and bottom right corners and then doing the same recursive call in there. Heres the approach more simplified.\n\nDivide into four squares, and mark the top right, top left and bottom right corners.\nLike so:\n![250](https://cdn.kastatic.org/ka-perseus-images/3245c7f409cc2b05db1d793a37ec46b9084e6a7a.jpg)\n\nNow continue and do it once more with the crossed out squares.\n![250](https://cdn.kastatic.org/ka-perseus-images/5a9680906f1a9b37ebb26630d612841df8295bbf.jpg)\n\nAnd do it more:\n![250](https://cdn.kastatic.org/ka-perseus-images/1ea1273d2a05dc8c5e71e071faac2c768d3b7389.jpg)\n\nPerhaps once more?:\n![250](https://cdn.kastatic.org/ka-perseus-images/5ef0e024c7157e8a5772f0277d49d65e62c51da4.jpg)\n\nAnd we continue so forth until we reach a minimum size for the squares which we decide ourselves. Lets stop here, and of course some colouring would be nice:\n![250](https://cdn.kastatic.org/ka-perseus-images/dfd834ca82cc24414aec63f2c86dc9690b19d840.jpg)\n\nWe call the same recursive call for each crossed out square which means for each level of depth we go we have to call the recursive function three times for :\n* Call for the top left corner\n* Call for the top right corner\n* Call for bottom right corner.\n\nThe multiple recursion calls at the same time makes it multiple recursive.\n\nHeres how we can put this multiple recursion algorithm into psuedocode.\n* Determine how small the current square is.\n\t* If it is below the minmum size we set fill in the cube with colour.\n* Otherwise divide the square into uppoer left, upper right, bottom right.\n\t* recursively solve\n\t\t* Draw sierpinski gasket in upper right\n\t\t* Draw sierpinski gasket in upper left\n\t\t* Draw sierpinski gasket in bottom right\n\nBecause you call three recursive calls. It is considered a multiple recursive algorithm.\n\nHere's how to put this algorithm into javascript code.\n```js\nvar dim = 240;\nvar min = 8;\nvar drawgasket = function(x,y,dim)\n{\n\tif(dim\u003c=min){\n\trect(x,y,dim,dim)\n\t};\n\telse {\n\t\tvar newdim = dim/2;\n\t\tdrawgasket(x,y,newdim);\n\t\tdrawgasket(x+newdim,y,newdim);\n\t\tdrawgasket(x+newdim,y+newdim,newdim);\n\t\t}\n};\n```\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/N%C3%A6ringskjede.":{"title":"","content":"# Næringskjede\n\n[[Mangfald]], [[Økologi.]].\n\nNæringskjede:\nEin serie organismer/arter, der kvar art spiser arten som ligger under den i næringskjeden, og blir spist av arten som ligger over.\n\n\nTrofisk nivå viser kor mykje energi som blir tapt for kvart organisme som spiser dyrene før.\n\nFor omtrent kvart dyr blir det tapt omtrent 90% av energiet frå det forrige dyret i næringskjeden. Dette leder til at dei største dyrene og dei høgste på det trofiske nivåene ofte er i små populasjoner fordi det ikkje er nok energi.\n\nDet er ofte berre 4 steg i det trofiske nivåene.\n\nDet er mindre okser enn det er planter.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/NOREG-BLIR-meir-RELIGI%C3%98S.":{"title":"","content":"\nHøvdingene hadde religiøs makt og dermed også politisk makt, når det var innflytelse av kristendommen som ville dette gjere at disse høvdingene var imot dei nye kristne kongene.\n\n* Olav Tryggvason (konge. 995-1000)\n* Olav Haraldsson \n\n\n\n\n## Norrøn mytologi\n\n* Religion spelte ei viktig rolle i viktingtida\n* Religionen forklarte naturens gang og menneska sin plass i universet\n* Gudane var tilstade overalt - makter som menneska måtte ta omsyn til og alliere seg med.\n* Det var mange guder\n\t* Frøya\n\t* Odin\n* Det viktigaste rituale var blodofring, ein ofret menneske og dyr.\n\t* Dette var kjent som blodte.\n\n* Samtidig:\n\t* Påverkan frå den kristne religionen frå så tidleg som 700-tallet - aktiv misjon frå midten av 900-tallet.\n\t\t* Den kristne trua og den gamle norrøne gudelære eksistere side om side i lang tid (fleire hundre år) utan store spenningar.\n\n\n\n\n## Religionen til kongane\n\n* Kristendommen kunne fungere som ein politisk reiskap i kampen for å utbreie kongemakta\n* $\\rightarrow$ Var viktig for kongane å få landet kristna\n\t* I europa utfylte kyrkjemakta og kongemakta kvarandre:\n\t\t* Kongen si makt var bestemt av den allemktige Gud\n\t\t\t* $\\rightarrow$ autoriteten og prestisjen til kongen blir ikkje stilt spørsmål ved\n\t\t* Kyrkja blei støtta økonomisk av kongen, samt at kongen sørgjer for ro og fred i samfunnet.\n\n\n\nBåde Olav tryggvason og Olav Haraldsson hadde levd i kristne miljø i Europa og kjente til korleis kristendommen kunne fungere som ein politisk reiskap i kampen for å utbreie kongemakta.\n\n**Maktpolitisk lurt å kristne landet**\nMetode: Å kristne høvdingane i dei ulike landsdelane, så ville folket følgje etter på grunn av lojalitets bandet mellom stormenn og bønder.\n\nTap av eigendom tortur og drap kunne vente dei som nekta.\n\nMange bønder var i mot kristendommen, fordi dei kunne entens være sterkttruane eller det kan vere andre motiv.\n\n\n\n## Motstand frå høvdingane\n\nHøvdingane hadde noko å tape ved å bli kristne:\n* Dei måtte underordne seg kongen $\\rightarrow$ Svekka deira posisjon som leiarar for området sitt.\n* Dei ville miste dei religiøse oppgåvene dei hadde hatt $\\rightarrow$ Svekka makta deira\n$\\rightarrow$ Tvangskristninga møtte motstand.\n\n\n* Olva Tryggvason blei drepen i slaget ved Svolder i år 1000.\n* Olav Haraldsson blei drepne i slaget ved Stiklestad i  år 1030.\n\n\n\n\n## Etter stiklestad\n* Olav Haraldsson blir Olav den heilage\n\t* Gjennom han fikk kongedømmet ein dominerande posisjon i bevisstheita til folk.\n\t* Etterkommarane hans tok del i heilagdommen hans $\\rightarrow$ styrkte prestisjen til framtidige kongar.\n* Høvingane hadde vunne ein kortsiktig siger, i samarbeid med den danske kongen Knut\n* Fem år etter at Olav døydde samla dei norske stormennene seg om Magnus Olavvson (sønnen til Olav) og ville ha han til konge.\n* Det var betre å ha ein innandlandsk konge som dei kunne ha kontroll med.\n\n\n\n\n1. Kva Skil kristendommen frå den norrøne mytologien.\n2. Korleis kunne kristendommen brukast i samlinga av Noreg\n3. Kven var Olav Tryggvasson\n4. Kven var Olav Haraldsson\n5. Kva kjenneteikna styret til Olav Haraldsson og korleis skil det seg frå styret til harald Hårfagre.\n6. Kvifor var mange høvdingar mostandarar av Olav Haraldsson.\n\n\n\n\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Natrium-kalium-pumpe.":{"title":"","content":"# Natrium-kalium pumpe.\n[[Kva er grunnstoffer og atomer.]]\n\nEin natrium-kalium pump er ein transmembran protein struktur som tillater ein konstant flyt av $Na^+$ og $K^+$ noko som er ioniske og dermed ikkje kan gå igjennom sjølve cellemembranen, dermed krevest ein natrium-kalium pumpe.\n\n## Oppførselen til pumpen.\n\nEin natrium-kalium pumpe transporterer natrium og kalium i gjennom [[Strukturen til cellemembranen.|cellemembranen]]. Den fungerer ved å ta inn 3$Na^+$ atomer og gjennom [[ATP]]  omformulerer den strukturen til det [[Proteiner og aminosyrer.|transmembrane proteiner]] som gjer at den kan sleppe ut dei $3Na^+$ og dermed pumpe ut $Na^+$ til den andre siden av membranen, deretter når den har gjort det kan den ta inn $2K^+$ på den nye siden og gjennom ein til ATP kan den omformulere strukturen og sleppe disse $2K^+$ til den andre siden av membranen igjen, slik repeterst det slik at ein konstant [[Diffusjon]] av dei ulike stoffene kan skje gjennom membranen. Små nok stoffer kan gå gjennom, men ikkje stoffer som $Na^+$ og $K^+$ derfor krevjast ein natrium-kaliumpumpe.\n[[Konsentrasjonsgradient]] stoffene beveger seg i ein slik graf.\nAt bevegene stoffene blir fordelt likt på begge sidene av membranen gjer at den holder eit osmotisk likevekt.\nDette er også dermed [[Passiv og aktiv transport.#Aktiv transport|Aktiv transport]].\n\n\n\nVi har òg ein anna type transmembran protein struktur som heiter [[Strukturen til cellemembranen.#Proteiner|kanalproteiner]], disse tillater bla. nokre $K^+$ å bevege seg i gjennom med bruken av ein konstant [[Passiv og aktiv transport.#Passiv transport|passiv transport]].\n\nHer er eit diagram som viser oppførselen av ein Natrium-Kalium pumpe:\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Scheme_sodium-potassium_pump-en.svg/2560px-Scheme_sodium-potassium_pump-en.svg.png)\n\n### Kvifor vil gå i mot ladningen?\nFor å oppnå ein konstant flyt av stoffer, og ein konstant diffusjon som tillater dei nødvendige stoffene å gå igjennom sidene av membranen krever ofte dette at dei ulike ionene går i mot sin eigen ladning, noko som dei ikkje normalt ønsker å gjere. Derfor for å oppnå ein konstant flyt av inntaksstoffer, og avfallsstoffer, (som $Na^+$ og $K^+$) og ein konstant diffusjon er nemleg ein natrium-kalium pumpe ganske nødvendig.\n\n## Viktigheten.\nEin natrium-kalium pumpe er ein svært viktig del i celler, spesiellt nerveceller. Dette er fordi den tilatter cellemembranen å halde ein høg potensiell energi, som dermed kan bli brukt når nervecellen trenger å gi ut mykje energi for å sende ut signaler.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Naturleg-logaritme":{"title":"","content":"# Naturleg logaritme.\n\nSom nemnt i [[Naturleg vekst. Konstant e-]] er $e$ så ofte brukt i [[Logaritmer|logaritme]] at vi har ein egen notasjon for naturleg logaritme. Vi har nemleg $\\log_e(x)=\\ln(x)$. \n\nDette betyr at dei følgende dømene er heilt like:\n$\\log_e(5)=\\ln(5)$\n$\\log_e(10)=\\ln(10)$\n\n\u003e[!INFO] Funny note.\n\u003eNamnet naturleg logaritme kjemer i frå faktumet at tallet $e$ oppstår så ofte i naturen at vi har oppkalt det (\"naturleg vekst\") i frå det. Dette er òg der naturleg logaritme sitt namn kjemer i frå. Det er trudd at namnet naturleg logaritme som i $\\ln$ kjemer i frå fransk \"logaritme natural\" oversett til norsk her da 😂.\n\nHer er eit bilete som viser veksten til naturleg logaritme:\n![[Screenshot 2022-07-08 at 21.06.51.png]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Naturleg-seleksjon":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Naturleg-vekst.-Konstant-e":{"title":"","content":"# Naturleg vekst - konstanten e.\n\n$e$ er eit spesiellt tall i matematikk. Den har ein verdi som er omtrent $e=2.718………$, men det er ikkje det som er interesannt om den.\n$e$ er eit tall likt som $\\pi$ . Den oppstår på steder ein ikkje forventar. \nViss vi tar ein faktor som er $1+\\frac{100\\%}{\\infty}$ og setter den til den $\\infty$ graden. Så får vi $e$. \n\n\n## Funksjon for $e$.\n\n$e=\\lim_{n\\rightarrow\\infty}(1+\\frac{1}{n})^n$.\n\n### Forklaring / bevis for $e$.\n\nEit godt eksempel der $e$ oppstår er når vi driver med renter til ein bank.\nLa oss si at vi har ein høg rente på $100\\%$ kvart år som tyder at etter eit år må har vi $2$ kroner. Men viss vi heller vil ha $50\\%$ kvart halvår og då få pengene våre kvart halvår 2 ganger i året så får vi plutseleg $(1.5)^2$, eller omformulert til $(1+\\frac{100\\%}{2})^2$, då etter 2 ganger så får vi plutseleg $1.5\\times1.5$ som er $2.25$ i verdier. $2.25$ er høgere enn $2$ som vi fekk når vi gjorde $100\\%$ per år i staden for $50\\%$ kvart halvår. Når vi gjer dette fleire gonger la oss si vi vil ha $\\frac{100\\%}{12}$ altså vi vil ha renten vår kvart månad, så kan vi skrive vår slutt verdi som $(1+\\frac{100\\%}{12})^{12}$ . Denne verdien er plutseleg $2.61303529…$ noko som er mykje høgere enn den originale $2$ vi hadde fått viss vi hadde heller gjort $100\\%$ kvart år. \n\nDet vi legger merke til at vi går nærmere og nærmere ein verdi når vi multipliserer $(1+\\frac{100\\%}{\\infty})^{\\infty}$. Denne verdien er $e$.\n\nVi kan nærmest seie at $e$ er verdien vi får viss vi har ein rente faktor som går $\\infty$ i mot $1$, utover perioden og gjer dette $\\infty$ ganger over perioden. \n\nDermed kan vi seie at $e$ er det samme som:\n$e=\\lim_{n\\rightarrow\\infty}(1+\\frac{1}{n})^n$. \n\n\n\nHer er ein tabell som viser utviklingen til $e$ gjennom prøver.\n\n| Antall ganger vi gjer det | Rente verdi            | $e$ tilnærming                         |\n|---------------------------|------------------------|----------------------------------------|\n| 1                         | $(1+\\frac{1}{1})$      | $(1+\\frac{1}{1})^1=2$                  |\n| 2                         | $(1+\\frac{1}{2})$      | $(1+\\frac{1}{2})^2=2.25$               |\n| 3                         | $(1+\\frac{1}{3})$      | $(1+\\frac{1}{3})^3=2.37$               |\n| 4                         | $(1+\\frac{1}{4})$      | $(1+\\frac{1}{4})^4=2.44$               |\n| 100000                    | $(1+\\frac{1}{100000})$ | $(1+\\frac{1}{100000})^{100000}=2.718268$ |\n\n\n\u003e[!INFO] Andre steder $e$ oppstår.\n\u003eDet er svært mange steder $e$ oppstår dette dømet er berre ein av staden til dømes $e^{i\\pi}=-1$ noko som hørest heilt feil ut fordi vi ser ingen klar $\\%$ i opphavet til denne funksjonen.\n\n\nHer er eit bilete som viser funksjonen som nærmer seg $e$ i verdi:\n\n![[Screenshot 2022-07-08 at 21.10.52.png]]\n\n\nOg her er eit bilete som viser $e^x$\n\n![[Screenshot 2022-07-08 at 21.11.27.png]]\n\n\n## Naturleg logaritme\nFordi $e$ oppstår så ofte i matte problemer, og i naturen så har vi det som kalles  [[Naturleg logaritme]], dette er ein egen [[Logaritmer|logartime funksjon]] for tallet $e$. \n\nNotasjon for naturleg logaritme:\n$\\log_e(x)=\\ln(x)$.\nVi pleier å bruke $\\ln(x)$ i staden for $\\log_e(x)$ fordi $e$ oppstår så ofte.\n\n\n\n## Deriverte av $e$.\n[[Derivanter]], tallet $e$  er ein liten special kid når det angår derivanter.\nFordi \n$\\large f(x)=e^{k\\times x}$ sin derivert er det samme som $f'(x)=k\\times e^{k\\times x}$\n\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Naturlig-frekvens":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Newton-gravittet.":{"title":"","content":"# Newton gravitet.\nEin liten gøyal, men fake, historie om Newton handlar om korleis han formelerte eit svar for kvifor ting faller nedover. Nemleg gravitet! Historien starter med at Newton satt og såg på eit epletre i Cambridge Universitet, der han studerte. Historien er at han såg eplet falle ned, og han begynnte å lure på kvifor ting falt nedover, kva kan vere grunnen? \n\nEtter ein stund klarte han å formulere det som ein kraft som består av den følgende funksjonen: \n$F_g=W=G\\frac{m_1\\times m_2}{r^2}$.\n\nHer er $r$ distansen mellom objektene, $G$ den gravitisjonelle konstanten, og $m_{1,2}$ er massene på objektene.\n\nUt i frå dette klarte han å skape nokre av hans egne naturlover, som nå er kjent som [[Newtons andre lov, vekt#Kva er vekt|newton lovene]]. \n\n\nNewton var ikkje like \"korrekt\" som Einstein's generell og spesiell relativitet. Men skapte grunnlaget for klassisk fysikk. \n\n# Ein fjær faller like raskt som ein murstein.\n\nDu lurer kanskje litt på korleis to objektet vil fungere med kvarandre, når det angår med gravitet. \n\nVi kan ta ein titt på litt matematikk og fine reknestykker.\n\nLa oss ha eit døme:\nVi har to ulike objekter, ein fjær og ein murstein.\n![[Newton gravittet. 2022-07-27 19.25.23.excalidraw]]\n\nVi kan rekne ut dei to ulike gravitet kreftene/vektene på objektene ved å ta i bruk formelene vist overfor:\n\n$Murstein_{vekt}=G\\frac{m_1\\times 10kg}{r^2}$.\n$Fjær_{vekt}=G\\frac{m_1\\times 0.05kg}{r^2}$\n\nVi kan omskrive dette slik:\n$G\\frac{m_1}{r^2}=g$, der $g$ er gravitet akselerasjonen.\n\nDa får vi at $Murstein_{vekt}=g\\times 10kg$.\nog $Fjær_{vekt}=g\\times 0.05kg$\n\nDu leggjer kanskje merke til at $Murstein_{vekt}\\gt Fjær_{vekt}$. \nOg du vil kanskje si at mursteinen har ein raskere bane mot jordkloden enn fjæren. Men dette er heilt feil. Her reknet vi ut kva vektene var, i andre ord kva graviteten sine krefter på objektene er, ikkje kva graviteten sin akselerasjoner sjølv er.\n\nVi tar utgangspunkt i [[Newtons andre lov, vekt]]\n$g=\\frac{Murstein_{vekt}}{10kg}$\n$g=\\frac{g\\times 10kg}{10kg}$\n$g=\\frac{Fjær_{vekt}}{0.05kg}$\n$g=\\frac{g\\times 0.05kg}{0.05kg}$\n\nFordi dei begge objektene har ein lik akselerasjon påført av gravitet vil dei nå bakkene samtidig, dersom dei har lik start\n hastighet. Dei har forskjellige gravitetkrefter, men massen vil \"kanselere\" ut kraften sin gravitet på ein måte. Basically dei har lik gravitet, men forskjellige krefter fordi dei har lik gravitet akselerasjon men forskjellig masse. Husk at akselerasjon er det som påverkar hastighet, masse har ingen forskjell i hastighet.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Newtons-andre-lov-vekt":{"title":"","content":"# Newtons andre lov.\n\nNewtons andre lov bygger på konseptene i frå [[Newtons første lov - masse og treghet]] og grunnleggjer dei i ein formeler. Formelen forklarer at den summerte kraften / nettokraften av eit objekt er det samme som objektets masse mulitplisert med dens gjennomsnittlegakselerasjon.\n\nLoven er dermed som følgende:\n\n$\\LARGE \\vec{F_{netto}}=\\sum \\vec{F}=m\\times \\vec{\\overline a}$\n\n\n\u003e[!WARNING] Mistolkning\n\u003eMange trur at fordi summerte kraften til eit objekt er det samme som dens masse multiplisert med akselerasjonen, så trur dei òg at $masse\\times akselerasjon$ er ein kraft òg, men dette er ikkje sant. Det er berre ein ting til felles.\n\nVi kan òg dermed determinere at $\\LARGE a=\\frac{\\Sigma F}{m}$, og    $\\LARGE m=\\frac{\\Sigma F}{a}$.\n\n\n# Kva er vekt?\nMange trur dei veier kanskje 80Kilo, men dei tar heilt feil! Dei har ein masse på 80kilo, ikkje ein vekt, dette er fordi vekt er gravitetens kraft på eit objekt, dei (tyngdekraften på eit objekt, og vekt) er simpelt sagt berre synonymer. \n\nMasse er det samme som mengden stoff det er i eit objekt, i mens vekt er det same som mengden graviteten drar på massen. \n\n\nVi kan dermed determinere at vekt er det samme som den følgende formelen:\n\n$\\LARGE W=F_{gravitet}=masse\\times gravitet$.\n\nPå jordkloden er det:\n\n$\\LARGE W=F_{gravitet}=masse\\times 9.8\\frac{m}{s^2}$\n\nTil dømes er min vekt rundt:\n$\\text{Vekten min}=63Kg\\times 9.8\\frac{m}{s^2}\\rightarrow 617.4N$\n\n\u003e[!WARNING] Mistolkning\n\u003eMange trur at vekt og masse er det same, men dei er to heil forskjellige ting. Masse er mengden av stoff det er i objektet, og vekt er mengden graviteten trekker på det objektet gjennom massen. Husk $W=F_g=masse\\times gravitet$\n\n\n# I dybde om andre loven / Loven i to dimensjoner.\n\n\nNår vi driver med Newtons andre lov i to dimensjoner blir alt plutseleg ein del meir komplisert, men det er framleis ganske greit å arbeide med viss ein forstå godt korleis dette faktisk fungerer.\n\n## Generelt om loven i to dimensjoner.\nNår vi driver med krafter i to dimensjoner så må vi dele opp dei ulike aksene sine krafter. Vi kan ikkje ha berre ein retning for to akser da blir alt berre feil.\nDermed må vi dele opp kreftene i $y$, og $x$, akser, eventuellt $x$,$y$,$z$, viss vi driver med tre dimensjoner.\n\n$x$ akse kraftene vil dermed sjå slike ut:\n$\\huge F_{n,x}$\nog $y$ akse kraftene vil dermed sjå slike ut:\n$\\huge F_{n,y}$\n\nDer $n$ viser kva for ein kraft det er prat om, indeksen til kraftene av alle kraftene.\n\nDa blir òg loven litt annelis fordi vi må ha netto-kraften for kvar akse.\nDen blir dermed slik:\n$\\LARGE F_{netto, x \\space akse}=\\sum F_x=m\\times a_x$\n$\\LARGE F_{netto, y \\space akse}=\\sum F_y=m\\times a_y$\n\n\u003e[!INFO] NB!\n\u003e Alt som blir nemnt her med to dimensjoner skal òg gå med tre dimensjoner, det blir berre meir kompliserte, men tankene og teknikke fungerer likt. Vi må finne tre akser sine verdier, ikkje berre to.\n## Skråe krafter.\nNår vi har skråe krafter på eit objekt så må vi finne alle aksene sine verdier til denne kraften, dette kan gjørest gjennom standard trigonometri. \nDette kan ofte når vi er i to dimensjoner bare bruke definisjonene av sinus og cosinus.\nAltså\n$sin(\\theta)=\\frac{opposite}{hypotenuse}$, og $cos(\\theta)=\\frac{adjacent}{hypotenuse}$.\n\nNår vi har ein vinkel til kraften frå $x$ aksen på $30\\deg$ så kan vi finne dens $x$ akse verdi og $y$ akse verdi. Vi må allereie vite kva retning kraften går i på begge aksene da, og må formulere svarene med rett akse.\n\n![[newtonsandrelovskrå.svg|750]]\nHer kan vi sjå eit døme, vi vil finne $x$ krfaten, $y$ kraften i frå denne skråe kraften.\nDet vi kan da gjere er å bruke sinus og cosinus definisjonene\n1. Y AKSE-\n\t1. $\\large\\sin(\\theta)=\\frac{motstående}{hypotenus}$\n\t2. $\\sin(30\\deg)=\\frac{F_y}{45N}$\n\t3. $\\sin(30\\deg)\\times 45N = F_y$\n2. X AKSE-\n\t1. $\\cos(\\theta)=\\frac{hosliggende}{hypotenus}$\n\t2. $\\cos(30\\deg)=\\frac{F_x}{45N}$\n\t3. $\\cos(30\\deg)\\times 45N=F_x$\n\nVi kan dermed etterpå bruke disse ulike kraft verdiene til å rekne ut det vi ønsker av ulike akse nettokrafter, eventuellt den totale størrelsen av nettokraften (utan retning).\n\n\n## Finne størrelsen av den netto-kraften. (Ingen retning).\nVi kan finne den totale størrelsen av den netto-kraften når vi driver med to dimensjoner, må vi bruke pytagoras læresetning, med nettokraften($x$ akse) for $x$ aksen, og nettokraften($y$ akse) for $y$ aksen. \n\nVi kan altså skrive at størrelsen på den totale nettokraften til objektet er som følgende:\n\nPytagoras læresetning:\n$a^2+b^2=c^2$\n\nVår formel for størrelse av totale nettokraft:\n$\\LARGE \\sum F_x^2+\\sum F_y^2=\\sum F_{x,y}^2$\n\nDette viser sjølvsagt ikkje retning då vi kan ha to ulike retninger når vi finner størrelsen på netto kraften dette er fordi vi kan ha ein negativ $y$ verdi eller ein negativ $x$ verdi, og når vi settjer disse i andregrad vil disse bli positive, dette gjer at vi mister aksen her, og gjer at vi har absolutt ingen aning kva retning det er i.\nHer er ein visning:\n$(-10)^2+10^2=200$. (Vi mister $x$ akse retningen som er negativ!)\n\n![[Newtons andre lov, vekt 2022-07-06 18.53.52.excalidraw]]\n\n\u003e[!WARNING] VIKTIG!\n\u003eHer har vi **ikkje** retningen til den totale nettokraften, det går ikkje ann å få tak i!\n\u003eHusk dette!\n\u003eSVÆRT VIKTIG.\n\n\n\n\n---------------------------\n\n## Ekstra ting å vite om Newtons andre lov.\n\n1. Balanserte krefter kan få eit objekt til å ha ein nettokraft av $0$. Berre fordi nettokraften er $0$ tyder det ikkje at det er ingen kraft som påvirker den.\n2. Newtons lover, blant anna newtons andre lov, er ganske gode til å modellere vår opplevelese av verdenen, men når vi kjemer opp til hastigheter nær lysens hastighet vil disse lovene bli ganske upresise da blir det betre å ta i bruk generell relativitet og spesiell relativitet, men disse er det nokre forskere som meiner er òg ikkje heilt presise når det kjemer til ting som darkmatter.\n\t1. Det du kan ta ut av dette er at ingen modeller kommer sikkert nokon gang til å klare å perfekt beskrive korleis verden oppfører seg.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Newtons-f%C3%B8rste-lov-masse-og-treghet":{"title":"","content":"# Newtons første lov.\n\nNewtons første lov: masse og treghet.\nNewtons første lov forteljar om korleis objekt beveger seg når dei er i ro, og når dei bevegar seg.\n\nLoven er som følgende:\n\n*Viss nettokraften til eit objekt er 0 så vil ikkje objektet bevege seg, dersom objektet beveger seg og det ikkje er ein motvirkende kraft på objektet vil den fortsette i evighet.*\n\nI matematiske teikn\n$\\sum \\vec{F}=0$ då er $'\\vec{P}=0$.\nDersom kraften er null er forandringen i momentumet vil det ikkje vere ein forandring. Dette er fordi kraft forklarer akselerasjonen som påvirker eit objekt, og [[Momentum]] er farten til den.\n\nDen simpelt sagt sier at så lengde det ikkje er ein motvirkende kraft på objektet vil objektet forsette å halde den nåværende hastighet og mosjon.\n\n\nEit døme: \nEit objekt som beveger seg på ein overflate fremover vil i følge loven stanse fordi den har motvirkende krefter, nokre av dei motvirkende kreftene er luftresistanse, friksjon.\n\n\u003e[!WARNING] Mistolkinger\n\u003eMange trur at ein ubalansert kraft på eit objekt vil alltid ha ein effekt på objektets retning. Men dette er heilt feil, berre tenk igjennom kva viss kraften er på objektet i samme retning som den allereie går i.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Newtons-tredje-lov":{"title":"","content":"# Newtons tredje lov.\n\n## Introduksjon. \nNewtons tredje lov bygger litt på dette med krefter som gitt i frå [[Newtons andre lov, vekt]]. Og viser korleis krefter blir skapt når vi dytter og drar på legemer.\n\nNewtons lov sier ein ting, og det er at når et legeme virker på et annet legeme med ein kraft, vil det andre legemet virke tilbake på det første med en like stor kraft i motsatt retning. De to kreftene heiter *kraft*, og *motkraft*.\n\nDen beste måten å forstå Newtons tredjelov er dette med å stå på noe. Viss du står på noe skal graviteten gjere at du beveger deg nedover, og ha dermed ein negativ akselerasjon på hastigheten din. Men dette skjer ikkje fordi det du står på gir ein likestor motkraft på deg som gjer at du ikkje går nedover og plutseleg har gått igjennom bakken.\n\n\nNewtons tredje lov er direkte som følgende:\n\"*Når det virker en kraft på et legeme, vil det alltid virke en like stor kraft tilbake fra legemet.*\".\n\nVirkelig tenk på det kvar gang du tar på ein ting så beveger den seg ikkje plutseleg i samme hastighet som du din finger når du tar på den. Grunnen til at det eine objektet vil bevege seg er fordi den har ein anna masse som tyder til at den har ein anna akselerasjon, fordi dette vil den minste bli dyttet. Dei har like store krefter, men forskjellige akselerasjoner.\n\nDømer:\n1. Viss du har ein boks og du prøver å dytte den fremover med ein kraft dermed, utan å ta hensyn til friksjon, når du tar på objektet vil den gi ein like stor motkraft som når du tar på den. \n2. Viss du presser handa di hardt ned på eit bord vil du kjenne at bordet presser like hardt tilbake på deg, dette er motkraft.\n3. Viss du går på ein strand og går på sanden, vil du dytte ein kraft på sanden som er jo vekten din, [[Newtons andre lov, vekt]].  Sanden vil dytte seg for foten din, men sanden vil og gi ein likestor motkraft på deg.\n4. Grunnen til at raketter kan fyke oppover er fordi at dei skyter ned stoffer og denne hastigheten til stoffene vil gi ein motkraft som får din rakett til å gå oppover. Denne motkraften er kraftigere enn gravitet som gjer at den flyr oppover.\n5. Viss du er i verdensrommet og flyter fritt så kan du finne det objektet som har størst masse så kaster du den i motsatt retning slik at motkraften du får frå når du holder på å kaste objektet får deg til å gå i rett retning.\n6. Viss du er i eit badebasseng og sparker i frå veggen vil du bevege deg fremover fordi du gir ein kraft på veggen, og motkraften i frå veggen vil gi deg ein kraft som drar deg fremover. \n\n\n\u003e[!INFO] P.S\n\u003eKraften som motvirker, som er i andre ord berre ein normal kraft, kaller vi for motstandskraften, og har symbolet $F*$ eg referer til det som berre normalkraften skapt av newtons-tredjelov. Denne kraften er berre lik når i det momentet dei treffer kvarandre.\n\n\n\n## Meir om Newtons tredje lov.\n\nFor kvar kraft er det slik:\n$\\LARGE F_{AB}=-F_{BA}$,\n(Venstre bokstav betyr på, høgre bokstav betyr av).\n\n\n**men** dette er litt vanskeleg å forstå, fordi dette sier at kvar kraft er alltid ein nettoverdi av $0$ viss det er eit objekt. Men dette blir lettere å forstå når vi sier at kvar av kreftene på kvar side av likheitsteiknet er for forskjellige objekt. Og dei kan ikkje kanslere fordi dei er ikkje på same objekt, viss dei skal vere skal kanselere må kreftene vere på berre eit objekt. \n\n#### Her er ein visualisering:\n\n![[Newtons tredje lov 2022-07-07 18.16.37.excalidraw]]\n\nViss kreftene er like i størrelse, men til dømes massen til objektene er forskjellige. Så må akselerasjonen til kvart objekt vere forskjellig. Berre fordi kreftene har samme verdi betyr ikkje at dei har samme likning for kraften.\n$\\large a=\\frac{\\sum F}{m}$. Netto kraft er lik på begge, men motsatte retninger. Men masse og akselerasjon kan variere fritt.\n\n\n\u003e[!INFO] Unngå tredje loven?\n\u003e Det er aldri ein delay i kraften du kan aldri unngå den. Den er universiell\n\u003e Fordi den er universiell er den alltid i effekt normalt er den ikkje synleg fordi det er ikkje to objekt i kontakt. DEN ER UANNGÅELIG.\n\n\nDøme (**DETTE ER IKKJE HEILT RETT** fordi vi har andre krefter til staden òg): \n![[Newtons tredje lov 2022-07-07 18.29.05.excalidraw]]\n\nDet ser kanskje ut som at dette er tredje loven, **men dette er ein felle**, og det er svært vanskelig felle å sjå. Dette skjer ikkje fordi det ein tredje lov til staden, men dette er faktisk [[Newtons andre lov, vekt]], som vi veit at sier:\n$a=\\frac{\\sum F}{m}$, vi veit at det skjer ingen mosjon eller bevegelse på objektet som betyr at $0=\\frac{0}{m}$. Vi kan ikkje dele på $0$ så det må vere kreftene. Netto kraften er på $0$.\nGrunnen til at det ikkje er tredje loven sine motkrefter er fordi dette skjer **berre** på eit objekt ikkje to. Viss det hadde vore newtons tredje lov hadde det vore to ulike objekt som hadde hatt kreftene sine i mot kvarandre som vist på [[Newtons tredje lov#Her er ein visualisering|bilete ovenfor]]. Objekt A har altså ein akselerasjon som motvirker graviteten, men det er ikkje fordi Newtons tredje Lov.\n\nLa oss gå tilbake til dømet og gjere det meir synleg, fordi normalt hadde faktisk tredjeloven vore til staden berre med det bilete og dei nøyaktige kreftene vist tidligere er ikkje tredjeloven. \n\n![[Newtons tredje lov 2022-07-07 18.39.27.excalidraw]]\n\nHer har vi ein kraft som kjemer i frå Jordkloden som går på objekt A. Dette er gravitet, ($F_{AE}$) og fordi objekt A får ein kraft på seg av jordkloden, så betyr det at objekt A har ein like stor motkraft på jordkloden ($F_{EA}$). Noko som vi kan sjå illustrert. Dette her **er** atlså Newtons Tredje Lov, denne er forskjellig i frå bilete ovenfor.\n\nNå bordet har òg ein motkraft på objekt A og objekt A har òg dermed ein kraft på bordet slik:\n\n![[Newtons tredje lov 2022-07-07 18.46.53.excalidraw]]\n\n\nDette liknar litt på det første bilete men det som er forskjellig er at her er det krefter på både bordet, og objektet A. Noko som [[Newtons tredje lov#Her er ein visualisering|bilete 1 ikkje har]], i bilete 1 er det berre krefter på objekt A. Det som var feil i bilete 1 er at den mistolket kraft $F_{AB}$ som ein motkraft av $F_{AB}$. Mens i realiteten så er motkraften av $F_{AB}$ er $F_{BA}$, og motkraften til $F_{AE}$ er $F_{EA}$. Simpel feil å gjere viss ein ikkje identifiserer alle kreften på objektet. Ikkje alltid er $F_{AB}$ den motsatte verdien av $F_{AE}$, som gjer at vi kan aldri si at det er motkraft.\n\n\nHER HAR VI EIN MOTKRAFT OG EIN KRAFT PÅ BORDET OG FRÅ BORDET. I TILLEGG TIL GRAVITASJONSKREFTENE. ","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Nukleotider-og-nukleinsyrer.":{"title":"","content":"# Nukleotider og nukleinsyrer.\n\n# Nukleinsyre.\n\nNukleinsyrer finnes i cellekjernen og har syreegenskaper, som nemnt i namnet til stoffet. Ein ganske kjent nukleinsyre er DNA. (Deoksyribonukleinsyre).\n\nDNA er eit makro-molekyl, som tyder dei er svært store.\nKromosom er svært lange DNA. \n\nNukleinsyrer er polymer. \nByggeblokkene til nukleinsyrer er nukleotider. \n\n\n\n## DNA.\nEit nukleotid døme: Deoksyadeninmonofosfat.\nDenne nukleotiden har ein fosfat gruppe, ein 5 karbon basert sukker (deoksyribase) , og ein nitrogenholdig base.\nBasen har syriske egenskaper og fosfat gruppen har syriske egenskaper.\nDenne nukleotiden bygger opp stavene på siden av DNA-et i alternerende rekkefølge, med fosfatet og det fem-karbon baserte [[Karbohydrater.|sukker]].Og den nitrogenholdige basen ligger innover og skaper deler av ytterkanten av stigene inni DNA-et. Måten DNa halder informasjon er ved kvar nitrogenholdigbase er det ein anna nitrogenholdigbase.\n1. Adenin passer Tiamin (A-T) (I RNA passer Adenin til Urasil A-U )\n2. Garmin passer Cytosin (G-C)\n\nDet finst fleire nitrogenholdige baser som tymidinmonofosfat eller cytidinmonofosfat. Det er den ulike rekkefølgen av disse nukletidene som enkoder informasjon i DNA.\n\nGrunnen til at DNa er ein syre er fordi [[pH, syrer og baser.|basene]] ligger innover i stigene og [[pH, syrer og baser.|syre]] fosfatet ligger utover, som gjer at stoffer DNA får meir syriske reaksjoner enn basisk.\n\nSlik ser DNA og RNA ut:\n![](https://cdn1.byjus.com/wp-content/uploads/2018/07/Nucleic-Acids-Classification-Function-of-Nucleic-Acids-700x566.png)","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Odd-og-even-polynomer":{"title":"","content":"# Odd, even [[Polynom grafer]].\n\nAt ein funksjon er odd eller even viser til korleis den er når det angår symmetri rundt $y$ aksen, **ikkje rundt** [[Symmetri linje.]] heilt forskjellige ting.\n\nVi sier ein graf er even viss den er lik på begge sider av $y$ aksen slik som:\n$x^2$\n```desmos-graph\ny=x^2\n```\n\n\n\n\nEin even graf kan vi dermed sie at er når denne likningen holder sann $f(x)=f(-x)$ for alle verdier av $x$. Slik som $x^2$, når $x=-1$ så har vi $1$ og når $x=1$ så har vi $1$.\n\n\n\nViss ein graf er odd så tyder det litt forskjellig i frå det å ere even, det tyder simpelt sagt at viss ein reflekterer grafen over $x$ aksen og $y$ aksen så for ein odd. [[Forksyvning og refleksjon av funksjoner.]]\n\nEit døme på ein odd graf:\n```desmos-graph\ny=x^3\n```\n\nHer er $x^3$ ein odd funksjon fordi viss reflekterer den under $x$ aksen og $y$ aksen så for vi dei negative tegnene.\nVi kan dermed si at algebraisk er ein funksjon odd viss denne likningen holder sann for alle verdier av $x$, $f(-x)=-f(x)$.\n\n\n\u003e[!INFO] Sidenotat.\n\u003eViss ein har ein funksjon som består av berre ein [[Polynom terminologi#Term ledd|term]], så kan vi berre sjå på dens eksponent.\n\u003eVi kan òg ha ein graf som ikkje er entens odd, eller even. Til dømes er ikkje $3x^3-2x^2$ even eller odd.\n\u003eVi kan òg si at ein graf er odd dersom alle termene innehalder ein $x$ reist til eit oddetall, og vi kan òg si at ein graf er even dersom alle termene innehalder ein $x$ reist til eit partall. \n\u003eUt av disse konklusjonene kan vi òg si at ein graf som inneholder både eksponenter i oddetall og partall for $x$ termer, er ikkje ein odd funksjon eller ein even funksjon.\n\n\n\n\n\n\u003e[!WARNING] VIKTIG\n\u003eIngen odd graff kan inneholde eit konstantledd, even grafer kan derimot gjere dette.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/One-time-pad.":{"title":"","content":"# One time pad.\nDen ultimate [[Kryptografi.|krypterings teknikken]]. I motsetning til [[Ceaser cipher]] og [[Polyalphabetic cipher]] har denne krypterings teknikken eit fingeravtrykk av null som gjer at den er umogleg å bruke nokon matematiske triks på for å kunne finne ut kva koden er.\nDenne krypteringsteknikken heiter one-time pad.\n\nI denne krypteringsteknikken skaper vi ein key som består av mange ulike tall som er valt av total tilfeldighet, og denne keyen er nøyaktig like lang som beskjeden slik at det er ingen repitisjon nokon sted som lager eit fingeravtrykk. Dette er nesten likt som [[Polyalphabetic cipher]] dersom vi tenker berre på tallene, men her er keyen like lang som beskjeden.\n\nFordi vi har ein total tilfeldighet vil mengden ganger ein bokstav oppstår i den enkrypterte beskjeden vere heilt tilfeldig.\n\nHer er eit døme på ein one time pad:\n$HALLO. Key:1,18,20,4,7 \\rightarrow ISFPV$. \n\n\n## Umogleg å løyse eit one time pad ?\nViss vi prøver å finne den lange keyen så blir det ganske tungt ganske raskt fordi vi **må** gjere dette gjennom brute-force. Likt må vi sjekke alle moglege shift verdier som kan vere, for kvar einaste bokstav.\n\nLa oss ta eit døme:\n$HALLO. Key:1,18,20,4,7 \\rightarrow ISFPV$. \n\nViss vi sier at vi berre kan ha bokstaver, og alfabetet vårt har ein lengde på 26, slik som i engelsk kan vi kalkulere alle moglege situasjoner for keyen:\n$(26)^n$. Dette vokser ganske raskt....\nFor ordet $HALLO$ er det $26^5=11881376$ moglege situasjoner som er ganske mangen.\nDersom beskjeden hadde vore kanskje $\\textit{HEI KVA HEITER DU}$ så hadde det vore $26^{14}=6.45099747\\times 10^{19}$ situsjoner og det er ganske jævlig mangen situasjoner, cirka $6$ følgt av 19 nuller.\n\nI [[Polyalphabetic cipher]] trenger ikkje keyen å ha ein lengde av beskjeden.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Oppgaver":{"title":"","content":"## titall system, du kan denna lmao\n## totall system, binær, du kan denna lmao\n\nyou already know how to count using this bullshit\n$\\huge 🤓$\n\n\n\n## Sekstentallsystemet\ngår frå\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nA\nB\nC\nD\nE\nF\n\n\nSo confusing lmao.\n\n## Bits og bytes\nLagrin skrivest i byte = 8bit som skrives med stor B for byte\nNettverk bruker bit per sekund = liten b / s\n\n4.07\n1 og 0\n4.08\na) Binørsystemet\nb) 22\n4.09\na)\n1\nb) 6\nc) 12\nd) 51\n4.10)\n256\n4.11)\na) 2^8 = 256\nb) ein byte er åtte bit\n4.12)\nDen laveste er teknisksett ein bit, men vi alltid lagrer i byte fordi da kan vi lagre bittelitt metadata og bruke hamming codes for å fikse opp i små feil.\n4.13)\nSuksess.\n4.14)\nEit bilete består av ulike farge verdier oftast oppgit i RGB verdier.\nDatamaskinen lagrer egenetelig bileter forskjellig enn det ein kanskje trur dette er fordi det som regel brukes ein fast fourier transform til å komprimere biletene ekstremt slik at den tar mindre plass på datamaskinen, dette gjer den oftast av seg sjølv og deretter når det oppnås blir det omgjort. Likt med vektorgrafikk meir eller mindre.\n4.15)\nRGB står for red green blue, ein kombinasjon som kan skape alle farger når det er felire piksler nær kvarandre. Vi kan bruke rgb(255,255,255) til å oppgi ein farge.\n4.16)\nTapfri komprisjon er komprisjon i form av png som regel taper svært lite av data. Tapfri. \n4.17)\nDestruktiv komprisjon er den andre formen av komrpisjon ofte i form av .jpeg og taper svært mykje informasjon, den gjer at vi ofte mister detalj.\n4.18)\n\n4.19)\nBing bong det er shittet og metoden den enkoderer teskten på whaaat??? no way fr fr fr.\n1fr.\n\n4.20)\n🔥💨 #420 blaze it!!!!!!!!!!!!!!!\nFor å bestemme kva for ein enkoderings metode vi skal bruke, normalt bruker nettlesere UTF-8.\n\n4.21)\nUnicode er eit system av ulike teiknsett, det er transformation format 8 til 32. Unicode er universiell og halder teikn for alle språk.🤯.\nDet er svært mangen ulike enkoderingssystem og ein anna som halder mindre teikn er ANSI.\n\n4.22)\n1) 61\n2) 64\n3) 7A\n\n\n4.23) \nUH 2 av dei har har ikkje B eller C, viss dåke trur det er dåke goofy motherfuckers.\nMen 3) har 1010 på slutten som er A. 🤯 \n\n4.24)\nVi filmer inn verdier gjennom å bounce ein film i ein mikrofon (invers høyytaller =) ) på 16 bit normalt i ein frekvens på omtrent 44.1kHz og vi ofte bruker stereo som tyder vi gjer dette for kvart øyre. Deretter komprimerer vi tingen for å spare data.\n\n4.25)\nVi har ein frekvens på 44.1kHz ein oppløsning på 16bit, og er stereo dermed $44100\\times16\\times2=1411200 bits per sekund$\nsom er omtrent 1.41 megabits per sekund / 0,1764 megabytes per sekund. Som raskt auker i størrelse når vi filmer eit klipp på nokre par minutt.\n\n\n4.27)\nEin video er ein samling av bileter som spiller i ein bestemt rekkefølge, og i ein bestemt hastighet og som regel har lyd.\n\n4.28) \nFor å rekne frem til dataraten tar du oppløsningen * 24 (dersom bruker rgb) * bildefrekvens. Så ein på 1920x1080 oppløsning, bruker rgb, og har ein bildefrekvens på 60 er : 1920* 1080 * 24 * 60 = 2 985 984 000 i bitrate.\n\n4.29)\nNøkkelbilete komrpimering fungerer ved å lagre små biter av kvar bilete til videon og gjenbruke dette videre, ved å samanlikne kan man lagre deler som forandrer seg svært lite og dei ser nett like ut når det spilles tilbake.\n\n4.30)\nFordi videoer blir ekstremt store i filstørrelser når det ikkje komprimerest, dersom vi ikkje komprimerer kan ein fil lett bli opp til fleire hundre gigabyte dersom den er lang.  For store databaser er dette svært ueffektivt. \n\n4.31)\nEit hjemmenettverk er eit system som datamaskiner nær kvaradnre kan vere tilknytttet kvarandre, men også til det store internettet dersom det er ein tilknytting til dette. Eit hjemmenettverk kan vere heilt isolert og ikkje ha kontakt med andre nettverk, dette gjer slike isolerte nettverk godt beskyttet mot hackerere og likt.\n\n4.32)\nNettverkskommunikasjon fungerer ved å sende ut av og på signaler om det er gjennom bølger i luften eller gjennom kabler. Det er ulike metoder for å sende slike bit signaler gjennom eit medium men det fungerer oppsummert slik.\n\n4.33)\nGjorde muntleg.\n\n4.34)\na)\nMobilnett fungerer ved at det er radioantenner som er koblet til ulike DNS-er som sender ut og tar inn bits gjennom radiobølger i luften.\n\nb)\nForskjellen  er at 5G har ein svært stor frekvens, mykje større enn 4G som gjer at den kan sende ut meir bits per sekund.\n\nc)\nI rekkefølge av kommunikasjon:\n3G, 2G, 1G, Modem, fax, brev, sendebud, røyksignaler.\n\n4.35)\nEg trur at digitalt utstyr vil påverke transportsektoren stort men også svært lite. Dette er fordi transport er noko som kan stort bli forbetra gjennom teknologi, men mange føler seg ukomfortabel når digital system kjører bilen deira så eg trur at det vil kanskje skape store forskjeller men systemene vil fortsatt bli dominert og kontrollert av menneske.\n\n\n4.36)\nIP også kjent som Internet Protocol er det som bestemmer inntak og utsending av informasjon og identifsere nettverk. Alle nettsider er koblet til gjennom IP adresser, og er oppsøkt gjennom DNS-er.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Orbit.":{"title":"","content":"# Orbit.\nÅ komme i orbit er det samme som å ha ein fart som skaper ein [[Sentripetale krefter.]] med [[Newton gravittet.]] som akselerasjonen dette i andre ord tyder at vi har ein gravitet som drar nedover likt med hastigheten vår oppover slik at vi gjevner oss ut til ein sirkulær bane.\n\nVi kan bruke dei sentripetal kreftene formelene for å finne ut kva hastigheter vi krever for å ha ein orbit.\n![[Orbit. 2022-07-29 18.14.13.excalidraw]]","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Osmose.":{"title":"","content":"# Osmose.\nOsmose  er ein effekt som kan oppstå med stoffer når det er prat om [[Diffusjon]]. Normalt er det prat om $H_2O$ når det angår osmose. I ein setning: Osmose er ein forskjell i sannsynlighet at eit stoff vil fordele seg til den ulike sidene av  ein [[Introduksjon til cellemembranen|semipermable cellemembran]] fordi det oppstår noko som hindrer fordelingen i diffusjonen. Osmose er ein [[Passiv og aktiv transport.#Passiv transport|passiv transport form]].\n\n## In depth.\nI ein semipermeable cellemembran (semi betyr at nokre stoffer går gjennom, og nokre ikkje) vil det ikkje alltid skje ein perfekt fordeling av stoffer fordi det er noko som hindrar det. Denne effekten blir kalt osmose. Det er fleire måter ein osmose kan oppstå, men det er hovudsakeleg to stykker. Her er dei med døme i ein semipermeable cellemembran.\n1. Det er ein høg konsentrasjon av eit altfor stort stoff (til å gå gjennom membranen) på den eine siden som stopper eit anna stoff (det som vi måler sannsynet til) til å kunne bevege seg gjennom. Det er altså mange hindringar som stanser dei andre stoffa.\n2. Det kan vere ein høg konsentrasjon av eit ionisk stoff som bindar seg til stoffet vi målet sannsynet til, dette gjer at stoffer vi måler sannsynet til ikkje vil like lett kunne gå å diffusere seg gjennom denne membranen. Her må òg stoffer vere altfor stort til å kunne gå gjennom membranen, slik at det opptår ein ujevn fordeling. Denne ladningen gjer også at stoffer ikkje kan direkte gå gjennom den indre negative ladet kjernen av det [[Strukturen til cellemembranen.#Fosfolilipid haler|fosfolilipid bilaget]]. \n\nHer er dei visualisert:\n1.\n![[Osmose. 2022-07-18 16.05.56.excalidraw]]\n2.\n![[Osmose. 2022-07-18 16.10.10.excalidraw]]\n\n\u003e[!INFO] Fun fact: drepe snegler.\n\u003eNår du tar salt på brunsnegler er dette grunnen til at dei dør\n\u003edei har normalt ein ganske vatnete overflate og når $Na^+\\\u0026 Cl^-$ (Som automatisk blir delt av [[Vatn som eit løsemiddel.|vatnet sin ladning]]) vil dei feste seg til vatnet, og dermed minske transporten av vatnet gjennom overflaten.\n\u003eSå let's go kill some snails.\n\n\nLES MEIR HER: [[Diffusjon]], [[Hypotoniske, isotoniske, hypertoniske - løsninger. OSMOTISK TRYKK.|OSMOTISK TRYKK]]. ","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Passiv-og-aktiv-transport.":{"title":"","content":"# Passiv og aktiv transport.\n\nPassiv og aktiv transport er dei to typene transport som vi finner biologi. Som namnene hintar til angår dette energi til å transportere. \n\n## Passiv transport.\nPassiv transport er ein transport form som ikkje krever energi\ntil å transpore stoffet. Dette er fordi det meir naturleg for stoffet å ha lyst til å gå denne spesifikke retningen. Vi kan sie at passiv transport er det same som å rulle ein stein nedover ein bakke, den vil naturleg ha lyst til å gå nedover. Eller å ha to ulike ladet ioner, dei vil naturlegvis gå i mot kvarandre. Her følger stoffene [[Konsentrasjonsgradient]] og krever dermed ingen energi.\n \n\n## Aktiv transport.\n\nAktiv transport som namnet hintar til er ein form av transport der energien krevest til å bevege seg igjennom mediumet. Dette er normalt fordi den går i mot flowen. Til dømes har vi det å rulle ein stein oppover ein bakke. Eller det med å dytte to like ladet ioner mot kvarandre, noko som dei ikkje vil.\n\nAktiv transport i biologiske systemer krever ofte energi, her kan energien i frå. [[ATP]] bli brukt til å gjere denne transporten.\n I aktiv transport kan ein dermed seie at den går i mot sin naturlege [[Konsentrasjonsgradient]], og dermed krever den energi.\n \n\n\n## Eit godt bilete.\n![](https://cdn.kastatic.org/ka-perseus-images/5df9f8ff679021542d26c0870701212a43c2a65f.svg)\n\nSlik er passiv transport den krever ikkje energi fordi det er naturleg for den å gå i mot den retningen.\nOg passiv transport er det motsatte vi går i mot det som føles naturleg ut og vi krever energi for det, som til dømes å rulle oppover ein bakke med ein stein.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Periode-frekvens.":{"title":"","content":"# Periode, frekvens, og [[Vinklet bevegelse + Vinklet kinematiske formeler.|vinklet mosjon]].\n\nDu har kanskje lært kva periode er i frå sinusformet grafer i matematikk , men viss du veit kva frekvens er så blir eg litt overrasket, viss ikkje du går elektro sjølvsagt :p.\nMen kva har dette med vinklet mosjon å gjere?\n\nLemm'e explaincus'.\n\n## Periode \nNår vi snakker om periode så snakker vi egenteleg berre om tiden det tar for ein syklus å skje i ein vinklet mosjon. Likt som i sinusformet grafer frå matematikken!\nDet betyr altså kor mykje tid går det før ein kommer tilbake til det nøyaktig samme stedet! I fysikk pleier vi å notere periode med notasjonen \"T\". \n\nSlik kan vi visualisere ein periode på to ulike måter.\n![[Periode, frekvens. 2022-07-22 18.44.45.excalidraw|800]]\nNår vi snakker om vinklet mosjon er det ofte godt å ta i bruk og vite vår periode dersom vi vil finne ut ulike faktorer, som distanse vi har gått, på ein tid, eller noko liknande.\n\nVi kan lage ein formel for å finne ut periode:\n$\\omega \\times \\Delta t = 2\\pi$\n$T = \\frac{2\\pi}{\\omega}$.\nEnhten vi bruker for perioden er jo dermed sjølvsagt $sekund=s$.\n## Frekvens.\nFrekvens er nesten det samme som periode, men litt det motsatte òg. Dette er fordi frekvens i staden for å vise kor mykje tid det tar for ein syklus, så viser den heller kor mange sykluser den kan gjere på eit sekund. Dette betyr dermed at frekvens er det samme som $\\frac{1}{T}$. Notasjonen vi bruker for frekvens er $f$, og enheten er det samme som $sekund^{-1}=Hz$. jepp Hertz er det samme som $\\frac{1}{s}$. \nOg fordi vi har ein formel for $T$ som er $\\frac{2\\pi}{\\omega}$, kan vi berre gjere $\\frac{1}{\\frac{2\\pi}{\\omega}}\\rightarrow \\frac{\\omega}{2\\pi}=f$.\n\n\n\n\u003e[!INFO] Fun facto.\n\u003eGrunnen til at Hertz er så ofte brukt i elektronikk terminologi er fordi straum ofte går i nærmast sinusformet grafer (AC, trur eg). Så haha fuck you elektro, karmsund, me som studere fysikk er grunnen til at dåke har straum. ME ER DEI EKTA STRAUM GUDENE, IKKJE THOR; VI ER. MUWAHAHAH.\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Planter":{"title":"","content":"# Planter\n## Kva er planter?\nPlanter (_Plantae_) er [[Introduksjon til eukaryote celler.|eukaryot]], ofte fleircella, organismar som skaffar seg energi gjennom [[Fotosyntesen]]. I dag er det kjent til omtrent 320.000 ulike [[Kva er ein art.|arter]] av planter, der 260-290 000 av dei produserer frø. Fordi planter skaffar seg [[Cellulær respirasjon.|energi]] gjennom fotosyntese betyr dette at dei er autotrofe, (fotoautotrofe). Planter er òg grunnlaget for at mykje anna liv kan ta staden, bla. nesten heile [[Dyr|dyreriket]]. Gjennom fotosyntesen blir det produsert oksygen som eit produkt, oksygen er noko mange andre arter er nødvendig av for å kunne [[Kva er liv?|leve]]. Planter er òg ein av dei grunnleggjande metodane for å få tak i næring, noko som alle organismar er nødvendig av. Nokre [[Dyr]] spis planter, og deretter jobbar næringen seg oppover næringskjeda. Derfor spiller òg planter ein enorm viktig [[Økologi.|økologisk]] rolle. \n\n\n## Kategorisering\n[[Taksonomi.]] av planteriket er kjent til å vere kaotisk og ha ein mangel på einigheit blant forskarar på korleis planter burde vere kategorisert. I dag er den mest grunnleggande divisjonen i planteriket [[Kva er ein art.#Ulike artsdefinisjoner|morfologisk]] basert på om planten har indre system og kanalar for å fordele vatn og mineral, disse plantene har namnet av _vaskulære planter_. Dei som ikkje har slike system har namnet av ikkje-vaskulære planter, og er ofte kjent med synonymet «_mosar»_. I staden for å ha indre kanalar og system for å fordele næringen er mosar ofte ganske lave og dermed kan bruke røter direkte som opptak av næring og vatn utan nauda av fordeling. Vaskulære planter er videre delt inn i planter som produserer frø, og dei som ikkje produserer frø. Dei vaskulære plantene som ikkje produserer frø er òg kjent som *karsporeplanter*. Karsporeplanter er planter som ikkje [[Ulike typer reproduksjon.#Aseksuell reproduksjon|reproduserer]] seg gjennom bruken av frø men heller gjennom sporar. Dei frø-produserande plantene blir videre delt inn i kategoriar som er basert på forma til frøa og kor frøa blir skapt. Frø-produserande planter som har frø på utsida av planten, har namnet av *gymnosperm*, eller det meir kjente namnet av «frø-dekkande planter». Frøplanter som produserer frø i eggstokkane i blomar har namnet av _angiosperma_.\n\n\n## Reproduksjon\nPlanter kan utføre både [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuelle]] og [[Ulike typer reproduksjon.#Seksuell reproduksjon|seksuell]] reproduksjon. Planter har faktisk nokre interessante og sære reproduksjonsmetoder. Nokre bruker berre aseksuell, nokre berre seksuell, og nokre kan gjere begge. Aseksuell reproduksjon kan skje på fleire ulike metodar bla. fragmentering, spiring og regenering. Seksuell reproduksjon for planter er annleis frå dyr fordi planter er immobile og kan ikkje bevege seg for å finne nokon å reprodusere med. Fordi planter ikkje kan bevege seg er det mange ulike reproduksjonsmetoder, men den mest funnet er *pollinering*. Nokre planter bruker vind til å vidareføre pollen (hankjønn gameter) til andre planter av same art. Mange planter har funnet ein anna overlegen metode for å vidareføre sin pollen, og den er basert på å bruke insekt til å transportere det, disse insekta er kjent som _pollinatorer_. For å få insekt til å ha lyst til å plukke opp pollen bruker planten ulike triks, som å gi området pollenet er produsert ein søt lukt.\n\n## Historie\nForskjellen på planter og [[Dyr]] har vore visst nesten heilt sidan menneske oppstod. Dette var noko som Aristoteles (382-322 f.Kr) blant anna prøvde å klassifisere òg skape ein systematikk bak. Han definerte planter som alle [[Kva er liv?|levande]] organismar som ikkje innehalde blod. Arisoteles klassifiserte nærare planter inn på miljøet dei levde i, som i vatn eller på land, og etter andre svært simple morfologiske trekk. ([[Kva er ein art.#Ulike artsdefinisjoner|morfologi]]). Etterfølgjaren til Aristoteles, Theophrastus (371-287 f.Kr), derimot var den første som klarte å lage eit skikkeleg hierarki som nokre moderne system i dag tar inspirasjon i frå. Hans nye system var basert på korleis plantene reproduserte for å skape nye generasjonar. I tillegg så skapte han mange plantebaserte vitskaplege funn innafor bla. medisin. For disse funna og systematiseringa er han ofte anerkjent som «faren av botanikk». \n\nLikevel pleier vi å si at Carl Von Linné (1707-1778) var den som skikkeleg moderniserte systematikken av planter (originalt: _Vegetabila_). Fordi det var mange problem med dei gamle systematisering hierarkia av planter, til òg med dei nye som blei skapt på 1600-tallet, bestemte Carl Von Linné å skape eit heilt nytt system som ville omfamne meir planter, og betre presisere kva ein plante er. Carl Von Linné òg systematisere basert på seksuell reproduksjonsmetode, men gjekk meir i djupne om alle dei ulike metodane enn Theophrastus. I etterkant har det blitt funne nokre problem med Linné sin definisjon da den inkluderte fleire ikkje-relaterte riker som sopp og fleire protister. Problema med definisjonen blei tillét på grunn av ny teknologi som oppdaga andre riker som [[Protister]] gjennom bla.[[Kva er ein art.#Ulike artsdefinisjoner|fylogenetisk analyse]].\n\n## Dømer på planter.\n### Polytrichum Commune\nPolytrichum Commune er ein art av mose som er funnet i mange regionar med høg fukt og regn, og er dermed ofte funnet i Noreg. Arten kan bli eksepsjonelt høgt for å vere ein mose art, med stenglar som ofte går over 30cm i høge, og sjeldan kan nå høgder av 70cm, men er oftast funnet i korte 5 til 10 cm stengel størrelse. Mosen er mørkegrøn i farge, men blir brunare med alder. Likevel mosar er anset som ikkje-vaskulære planter, er denne arten litt annleis då den viser differensiering av vev som frakter vatn.\n\n### Equisetum Telmateia\nEquisetum Telmateia, også kjent som den store kjerringrokk, er ein karsporeplante som tilhøyrar slekta Equisetum. I motsetning til mange andre planter har planten ein unormal fordeling, den har underarter som er heimehøyrande til Europa, vest Asia, nord-vest Afrika og Nord-Amerika. Planten har separate grøne fotosyntetiserande sterile stenglar, og gule ikkje-fotosyntetiserande stenglar som produserer sporar for reproduksjon. (Equisetum Telmateia, 2022). Det norske namnet «kjerringrokk» viser til at planten blei særleg nytta mot kvinnesjukdomar, og «rokk» fordi sporehuset til kjerringrokk liknar rokken på gamle spinnereiskaper. \n\n### Ricinus Communis\nRicinus Communis, også kjent som oljeplante, er ein tropisk angiosperm planteart som ligger i vortemjølk familien (_Euphorbiaceae_). Planten er spreia utover tropane og tar form som liknar på tre; den er treaktig. Frukta er ein piggete kapsel med tre giftige frø i størrelse av bønner. I frøa finner ein det mest giftige gifta på jordkloden; ricin. Ricin er eit protein som er svært daudeleg, å ete 80 milligram er nok til å drepe eit fullt vaksen menneske, og 2mg sprøytet inn er òg nok. Pga. gifta er planten kjent til i ulike media som bla. i bibelen (_Jona 4,6_).","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polis-den-greske-bystaten.":{"title":"","content":"# Polis - den greske bystaten.\n\n* Bystaten var ein by - med torg, teater, tempel, bymurar, andre bygningar som kjenneteiknar siviliasjoner, og vertfalle eit jordbruksområde rundt for matproduksjon.\n* Det var borgarane som utgjorde bystaten - dei bestemte saman korleis staten skulle styrast.\n\t* Det var samleting der folket direkte stemte, i staden for representanter.\n* Borgarane hadde militærplikt og fekk politiske rettar i retur.\n\t* Borgarane betalte sjølv for dei millitære væpna som tyder til at mange var bønder og krigerer.\n* Bystaten hadde ein slaveøkonomi som tillét økonomien og siviliasjonen å byggje seg opp.\n\n* Torget i bystaten blir kalt *agora* og her blei det diskutert ulike politiske sakar, opplæring, her var det ting som skjedde, sjølvsagt skjedde handel òg her. \n\n* Dei utvikla/store/rike bystater har som regel eit stadium det kultur, og sport kan ta sted, her var teater steder, idrettsstadium, etc. \n\n* Ein av dei viktigste stedene av ein stat var kalt *akropolis*, her var det omrigna av murar, og det var ofte der dei viktigste budde og styrte. Ikkje minst var det store tempel. \n\t* Her var det ekstra murar for å beskytte det aller viktigste dersom dei yttreste muren blei angripet.\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polyalphabetic-cipher":{"title":"","content":"# Polyalphabetic cipher\n\nFor å unngå at språket sin frekvens av bokstaver kan bli brukt til å [[Kryptografi.|dekryptere]] våre beskjeder slik som den kan i [[Ceaser cipher]] så kan prøve å minske fordelingen, altså gjere frekvensene i den enkrypterte meldingen sine tegn meir gjemne slik at det er mindre samanlignbart med språket sitt. Ein slik krypteringsmetode er polyalphabetic cipher, eller på norsk Polyalfabetisk cifer.\n\nEit slik polyalfabetisk cifer er egentelig berre mange ceaser cifere som er strukturert på ein måte som gjer det vanskeligere å kunne finne ut kva keyen er.\n\nEit polyalfabetisk cifer funger slikt:\nVi har eit ord som er vårt key: la oss ta eit døme av SNAKE, Engelsk for slange.\nEit polyalfabetisk cifer fungerer ved å leggje dette ordet under ein beskjed repiterende til beskjeden slutter. Deretter bruker vi nummeret på bokstaven som leggjer under beskjeden som ein shift key på bokstaven over. \n\nEin kan i andre ord visualisere det slik:\n$HALLO$\n$SNAKE$\n\n$HALLO$\n$19,14, 1, 11, 5$\n\nVi skifter bokstaven H over til bokstaven som er 19 bokstaver høgere i Alfabetet enn H.\nLikt som A med 14, L med 1, deretter L med 11, og deretter O med 5.\n\n$HALLO \\rightarrow OMWT$\nLikevel vi ser at det er to L-er i HALLO så er det to ulike bokstavet for dei like bokstavene i den enkrypterte beskjeden.\n\n## Løyse eit polyalphabetic cipher.\n\nDet er ganske lett å finne ut kva eit polyalphabetic cipher sin key er.\nDet vi trenger å gjere er nesten heilt likt som i Ceaser Cipher. \nDet vi gjer er først er på finne ut kor mange bokstaver det er i keyen.\nDette kan vi finne ut gjennom trail and error i ein frekvens analyse basert metode.\nLikevel vi ser ein forandring frekvensene i ein bokstavene i ordet, vil det framleis vere nokre mønster som vi kan sjå etter. Etter vi har klart å konkludere antallet bokstaver.\nEr det heilt likt som eit ceaser cipher, vi sjekker berre kvar N-te bokstav i keyen med den enkrypterte beskjeden og prøver å løyse ceaser cipher shiften. Dette kan vi gjere ved blant anna frekvens analyse eller til dømes bruteforce, og etterpå når vi veit alle shiftene kan vi omdanne dette til bokstaver og skaffe den originale shift keyen.\n\n\n\n\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polynom-aritmetikk":{"title":"","content":"# Polynom Aritmetikk.\n\n## Addering av polynomer.\n\nAddering av polynomer er ganske lett. Vi starter med to ulike polynomer i to ulike paranteser, men vi kan fjerne parantesene.\nVi later så sei at termene er normale tall. Vi pleier å gruppere termene som har like eksponenter i $x$ verdi. \nDei termene som har lik eksponent i $x$ verdi kan vi gjøre aritmetikk med, men vi kan ikkje gjøre aritmetikk med termer som har ulike eksponent verdi i $x$. Viss den eine parantesen har eit tall som ganges foran, må vi huska å gange det ut før vi gjør aritmetikken. Husk at negative termer holder seg negative når dei dras ut av parantesen. I andre ord så ganger vi forteiknet utanfor parantesen med forteikna innanfor parantesen. If you catch my drift!\n\nVi så rekner berre ut, og får svaret av adderingen.\n\nEksempel:\n\n$(5x^2+8x-3)+(2x^2-7x+13x)$, blir til:\n$5x^2+8x-3x+2x^2-7x+13x$, blir til:\n$5x^2+2x^2+8x-7x+13x-3$, blir til:\n$7x^2+14x-3$.\n\n## Subtraksjon av polynomer.\nSubtraksjon av polynomer er veldig likt addering av polynomer!\nDen einaste småe forskjellen er at vi må huske å gange forteikna foran parantesen med forteikna inni parantesen. Helt likt som i addering av polynomer. Vi kan berre subtrahere dei termene som har lik eksponent i $x$ verdi. Viss eit tall er foran parantesen må det ganges ut med parantesen før vi fortsetter med subtraheringen.\nVi så rekner berre ut, og får svaret av subtraheringen.\n\nEksempel:\n\n$(16x+14)-(3x^2+x-9)$, blir til:\n$16x+14-3x^2-x+9$, blir til:\n$-3x^2+16x-x+14+9$, blir til:\n$-3x^2+15x+25$.\n\n\n## Multiplisering av polynomer.\n### Areal modell.\n^1d880f\nVi kan tenke på polynomer multiplikasjon som arealet til eit rektangel, kube, etc. Der kvar faktor er ein dimensjon. Til dømes: $f(x)=(x+2)(x-2)$ har to sider, av ein kube. Kvar ledd innan faktoren er ein eigen side av ein kube. Vi ganger då sidene ut og får kvar kube sin areal, og deretter adderer dei saman. Arealet er likt som når vi bruker [[Polynom aritmetikk#^f59c58|fordelingsegenskapen til multiplikasjon]]! \n\nEksempel (Areal/Utskrivet polynom nederst):\n![](https://cdn.kastatic.org/googleusercontent/X1kMAy0h-uKDm_z90T8peu7R3ph5TTKUqxdYDzayni4J0PQvXNtUGpKTFuuZl03WpXwmWAM60dthAkWcgr1nq6TN)\n\n\n### Distributive property (Fordelingsegenskapen til multiplikasjon).\n^f59c58\nDistributive property, eller fordelingsegenskapen til multiplikasjon som det heiter på norsk er kanskje den mest logiske og rettfrem måten for å rekne ut polynomer som består av faktorer. Det vi gjer er at vi ganger kvart ledd i ein faktor med heile den andre faktoren, vi gjer dette for kvart ledd i den eine faktoren. Det går ann å multiplisere fleire faktorer slik ved å gange eit ledd, med eit ledd $\\dots$, og deretter heile faktoren, men dette er veldig tungvingt og feil kan lett oppstå. Viss det er fleire faktorer anbefaler eg å berre gange ut to faktorer og settje dei i ein parantes, dette har lik verdi som dei to faktorene aleine. Når ein kan dette utanatt er det mykje raskare enn [[Polynom aritmetikk#^1d880f|areal modelen]].\n\nDøme:\n$f(x)=(x+2)(x+3) \\rightarrow$\n$\\text{første ledd i første faktor} \\space x^2+3x$ \n$\\space \\text{andre ledd i første faktor} \\space 2x+6.$\n$\\space = \\underline{x^2+5x+6}$\n\nDøme 2:\n$f(x)=(x+2)(x+3)(x+4)$\n$f(x)=(x+3)(x^2+7x+12)$\n$f(x)= x^3+7x^2+12x+3x^2+21x+36$\n$\\underline{f(x)=x^3+10x^2+33x+36}$\n\n\n## Aritmetikk med brøker.\nNår vi har ulike polynom-brøker vi skal gjere aritmetikk med må vi har felles nevner som i normal brøk aritmetikk. Då simpelt ganger vi nevnerene med kvarandre og tellerene med dei motsatte nevneren. Som med normal brøk aritmetikk. Viss vi ikkje gjer dette blir det heilt feil!\n\nEksempel:\n$\\large \\frac{x^2-4}{x+2} + \\frac{x-2}{1} \\rightarrow \\frac{1(x^2-4)}{1(x+2)} + \\frac{(x-2)(x+2)}{1(x+2)} \\rightarrow \\frac{x^2-4+(x-2)(x+2)}{x+2}$\n\nVi multipliserer slik at vi får felles forhold mellom tallene i brøkene, og deretter setter dei sammen. Må også gjerest når vi skal addere/subtrahere/multiplisere normale tall. Vi må gjere dei til brøker og multiplisere som nemnt over.\n\n## Polynom divisjon.\nPolynom divisjon er likt som normale divisjoner/brøker, berre med algebraiske termer i seg. Referer til [[Polynom divisjon]] for å finne ut korleis du kan gjere dette, og kvifor $x\\ne-2$ i døme!\n\n\nEit døme (Faktorisering metode): \n$\\require{cancel} \\large \\frac{x^2-4}{x+2} = \\frac{(x+2)(x-2)}{x+2} \\rightarrow \\frac{\\cancel{(x+2)}(x-2)}{\\cancel{(x+2)}}\\rightarrow (x-2),\\space x \\ne -2$\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polynom-divisjon":{"title":"","content":"# Polynom Divisjon.\n\n## Kva er polynom divisjon?\nPolynom divisjon er berre ein del av [[Polynom aritmetikk]], men står litt ut i frå dei andre. \nDet er ikkje likt som dei andre formene av aritmetikk. Dette har unntak, ingen setninger, eller simpel utrekning, her har vi metoder vi må ta i bruk. Polynom divisjon er som normal divisjon berre med polynomer i staden for tall, og vi kan igjenkjenne nokre normale metoder frå divisjon her i dette polynom feltet.\n\n\n### Kva er remainders?\nFor å introdusere dette la oss dele 37 på 6, vi veit at tallet er eit desimaltall då 6 går berre inn i 37 seks ganger før det ikkje følger gangetabellen. Vi har altså 1 igjen etter dei seks gangene, for å oppnå $\\large \\frac{37}{6}$, må vi få den einen til å bli eit desimaltal som oppgjer divisjonen, dette desimaltallet har ein verdi av $\\large \\frac{1}{6}$. ($\\large \\frac{1}{6}\\times 6 = 1$). Då vil $\\large \\frac{37}{6} = 6+\\frac{1}{6}$. \nLikt er det med [[Polynom terminologi#Kva er ein polynom|polynomer]], i grunn er dei jo berre tall skjult bak variabler, dermed oppfører dei seg likt! Når vi bruker [[Polynom divisjon#Algebraisk lang divisjon|algebraisk lang divisjon]] oppnår vi ikkje alltid ein fullstendig divisjon, likt som  $\\frac{37}{6}$ er ikkje fullstendig. Då pleier vi ofte å bli lagt igjen med remainders, også kjent som tallet som blir lagt igjen før det blir fullstendig (I 37/6 blei 1 lagt igjen).\n\n## Algebraisk lang divisjon.\n\n^4aa794\nFørst av alt skriv begge polynomene inn i [[Polynom terminologi#Standard form|standard form!]] Både den som blir dividert og den som dividerer. Vi skriver inn polynomet som skal bli dividert, ein linje som går i frå venstre siden av den, og til høyre topp av den. Til venstre av linjen skriver vi polynomet som skal dividere. Vi finner kor mangen ganger det [[Polynom terminologi#Grad av polynom|høgste grad]] [[Polynom terminologi#Term ledd|leddet]] i frå det dividerende polynomet går inn i det  høgste leddet inn i det til å bli dividert polynomet. Vi bruker dette tallet og ganger ut med det dividerende polynomet, deretter [[Polynom aritmetikk#Subtraksjon av polynomer|subtraherer]] vi dette i frå det til å bli dividert polynomet. Vi rekner ut og repiterer denne prosessen med den nye verdien til polynomet er entens heilt utdividert eller vi bli igjenlatt med ein [[Polynom divisjon#Kva er remainders|remainder]]. Referer til bilete under for å forstå dette betre! Det er vanskelig å forklare slike lange prosesser.\n\n![500](https://i.ytimg.com/vi/8lT00iLntFc/maxresdefault.jpg)\n\n### Med remainders.\nNår vi har remainders er det egentelig ganske lett, når vi ser at det høgste ledder i frå det dividerende polynomet ikkje går inn i det nåværende verdien i det heile er dette [[Polynom divisjon#Kva er remainders|remainderen]]. Viss vi blir igjenlatt med ein remainder settjer vi berre dette ved siden av det utdividerte polynomet, med ein divisjon på det dividerende polynomet.\n\nDøme/eksempel:\n$\\large (x+2)+\\frac{2}{x+3}$\nHer er det dividerende polynomet, $x+3$.\nOg remainderen er $2$.\nDet utdividerte polynomet er $x+2$.\n\n## Remainder theorem.\n### Kva er remainder theorem?\nRemainder theorem, er ein teori som viser oss om eit polynom har ein remainder ved ein viss $x =$ verdi.  Det igjenstående tallet er remainderen, viss tallet $= 0$, er det ingen remainder og tallet, viss det er noko annet enn $0$ har vi ein remainder på dette tallet.\n\n$f(x) \\leftarrow$ polynom divider med $x-a$\n$\\rightarrow \\text{Remainder} = f(a)$\n$f(x) \\leftarrow$ polynom divider med $x+a$\n$\\rightarrow \\text{Remainder} = f(-a)$\n\n### Korleis bruke.\nVi simpelt berre settjer inn $x =$ verdien inn i funksjonen, rekner ut, og får remainderen. Dette er ein god metode for å finne ut om eit tall har ein faktor ved $x =$ verdi, då viss det er 0, er tallet ein $x=$ verdi i ein faktor, viss ikkje er det ikkje ein faktor. Viss det er ein faktor kan vi blant anna bruke [[Polynom divisjon#Algebraisk lang divisjon|algebraisk lang divisjon]] for å dividere. \n\nEksempel:\n$f(x)=x^2+5x+6$\nTeste om $-2$ er i ein faktor:\n$f(-2)=0$. Dette betyr at polynomet innehalder ein faktor av $x=-2 \\rightarrow$ $(x+2)$ \n\nTeste om 1 er ein faktor:\n$f(1)=1+5+6$\n$f(1)=11$, remainder av 11, ikkje ein $x=$ verdi i ein faktor.\nViss vi deler på $x=1 \\rightarrow (x-1)$ vil vi få eit polynom med ein remainder av av 11.\n(Viss funksjonen hadde vore ein [[Polynom terminologi#Rasjonale funksjoner Polynom brøker|rasjonal funksjon (polynom brøk)]], hadde vi hatt ein remainder med $\\frac{11}{\\text{Det dividerende polynomet}}$)\n\n### Mattematiske beviset.\n^dd314c\n$f(x) \\leftarrow$ polynom divider med $x-a$\n$\\rightarrow \\text{Remainder} = f(a)$\n$f(x) \\leftarrow$ polynom divider med $x+a$\n$\\rightarrow \\text{Remainder} = f(-a)$\n\n\nAlle polynomer med remainder kan skrivest som:\nViss $x$ nullpunkt verdien er positiv.\n$f(x)=q(x)(x-a)+r$, der $q$ er ein polynom funksjon, $(x + a)$ er inntaks faktoret, og $r$ er er remainderen.\n$f(a)=q(a)(a-a)+r$\n$\\rightarrow f(a) = q(a) \\times 0 + r$\n$\\rightarrow f(a) = r$\n\nViss $x$ nullpunkt verdien er negativ:\n$f(x)=q(x)(x+a)+r$, der $q$ er ein polynom funksjon, $(x - a)$ er inntaks faktoret, og $r$ er er remainderen.\n$f(-a)=q(-a)(-a+a)+r$\n$\\rightarrow f(-a) = q(-a) \\times 0 + r$\n$\\rightarrow f(a) = r$\n\n**$q(x) = \\text{Resultat av divisjon av polynom, og inntaksfaktor}$**\nKombinert då med inntaksfaktoret gir oss samme polynom som startet med.\n\n\n\n## Unntaka.\nNår vi deler på ein polynom som innehalder andre termer enn berre $x$ vil det alltid vere eit unntak for når divisjonen oppholder. Når $x$ verdien i nevnerenenes faktorer kansellere konstantleddet i faktoren vil vi ha [[Polynom terminologi#^f61e26|bryddpunkt]]. Eller viss det er ingen konstantledd då er detnår $x = 0$.  Dette i andre ord betyr at polynomet $=$ null i neveren. Noko som vi ikkje liker å ha i nevneren fordi det betyr at vi deler på 0. Og å dele på 0 er udefinert og vi har ingen verdi som vi kan dele på. Det er her den [[Polynom grafer#^8b580b|vertikale asymptoten]] oppstår.","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polynom-faktorisering":{"title":"","content":"# Polynom Faktorisering.\n\n## Kva er polynom faktorisering?\n\nPolynom faktorisering er prosessen av å omskrive polynomer i full form, til dømes: $f(x) = x^2+4x+4$, over til ein lettere form, $f(x)=(x+2)(x+2)$. Denne formen viser [[Polynom terminologi#^74129e|nullpunkta]] til polynomet i dens [[Polynom terminologi#^33d3ba|faktorer]].\n\n## Kvadratsetningene \u0026 Konjugatsetningen (Spesielle produkter).\n\n^3e6fd1\n\nVi har nokre grunnleggende setninger vi kan ta i bruk for å finne dei ulike faktorene i nokre polynom, her er alle A variablene like, alle B variablene like:\n\n1. Første kvadratsetningen $(a+b)^2 = (a+b)(a+b) \\rightarrow \\underline{a^2+2ab+b^2}, \\space A= \\sqrt{Første \\space term}, \\space B= \\sqrt{Siste \\space term}$\n\n2. Andre kvadratsetning\n   $(a-b)^2 = (a-b)(a-b) \\rightarrow \\underline{a^2-2ab+b^2}, \\space A = \\sqrt{Første \\space term}, \\space B= \\sqrt{Siste \\space term}$\n\n3. Tredje kvadratsetning (Også kalt konjugatsetningen)\n   $(a+b)(a-b) = \\underline{a^2-b^2}, \\space A=\\sqrt{Første \\space term}, \\space B= \\sqrt{Siste \\space term}$\n\nVi simpelt finner tallene etter vi igjenkjenner oppsettet i ein polynom og bruker oppsetta/templates for å faktorisere. Husk å sett dei rette forteikna når du bruker oppsetta.\n**Når vi finner A og B verdi, ikkje ta med negative forteikn!!!!!**\n\n## Grupperingsmetode.\n\n^64d1ac\n\nGrupperingsmetoden er ein metode for å faktorisere som går på å dele polynomet inn i grupper. Gruppene skal ha lik forhold på kvar side, når gruppene faktoriserest har vi ein felles faktor. Etter på drar vi felles faktoren ut for seg selv. I eit [[Polynom terminologi#^09104c|trinomium]] må vi dele den inn i 4 termer ved å dele midterst term viss vi ikkje allereie har fire termer, og dermed utføre metoden. Metoden kan i teorien bli brukt for alle [[Polynom terminologi#^5d0d05|grader]] av polynomer, men er lettest når polynomet er ein andregrad.\n\nTil dømes:\n$f(x)=x^2+x-6$, blir til:\n$f(x)=x^2-2x+3x-6$, blir til:\n$f(x)=x(x-2)+3(x-2)$, blir til:\n$f(x)=(x+3)(x-2)$\n\nDenne metoden fungerer òg med tredjegrader:\n$f(x)=x^3+2x^2-4x-8$\n$f(x)=(x^3+2x^2)-(4x+8)$\n$f(x)=x^2(x+2)-4(x+2)$\n$f(x)=(x^2-4)(x+2)$\n$f(x)=(x+2)(x-2)(x+2)$\n$f(x)=(x+2)^2(x-2)$\n\nOftast trenger vi berre å gjere som vist over ved å dele det inn i to grupper ein på høgre, og ein på venstre. Og så utføre metoden.\nVi må berre alltid ha minimum to grupper vi kan arbeide med, dermed må vi ofte dele det midterste termet slik at vi har to grupper som har heilt likt forhald. **Forhaldet må vere likt i begge gruppene.**\n\n## Sum Produkt - metode.\n\nSum Produkt metoden er ein veldig lett metode for å kunne faktorisere andre grad trinomialer, metoden går på å se på det midterste [[Polynom terminologi#^8de091|termet]], og det siste termet. Vi må finne to tall som når addert sammen blir det midterste termet sin koeffisient, og multiplisert sammen blir det siste termet sin koeffisient. Dette er faktorene til tallet når vi setter x foran tallene i ein faktor. Veldig raskt metode, men krever at ein tenker ut tallene, som kan av og ti gi feil.\n\n$(ax^2+bx+c)$,\n$b=tall_1+tall_2$,\n$c=tall_1\\times tall_2.$\n\nTil dømes:\n$f(x)=x^2+6x-7$,\n$6 = 7-1$,\n$-7=7 \\times -1$,\n$f(x)=(x+7)(x-1)$\n\n## ABC Formel (Kvadratiske formel).\n\nABC Formelen, i motsetnad til alle andre formelene kan enkelt finne faktorer med desimaltall i nullpunkt. Problemet med denne formelen er at denne berre fungerer for andregrads [[Polynom terminologi#^09104c|trinomialer]], og slurvefeil kan lett oppstå når vi bruker den. Formelen gir oss faktorene sine nullpunkt, eller i andre ord verdien til X per faktor. Vi må etter å ta i bruk formelen skifte forteikn til talla og sette inn i ein paratens for å få ein faktorisert faktor, slik $x=-1, \\space x-1=0, \\space (x-1)$. Formeler, som kubiske formelen, kan finne polynomer med høgare grader. Det tragiske med ABC Formelen er at den er veldig tungvint å bruke, men gir oss eit svar når vi ikkje klarer å bruke nokon av dei andre metodene. Ikkje alltid gir oss dette eit reellt svar då får vi [[Komplekse tall|komplekse tall]] som svar.\n\nABC Formelen (Kvadratiske formelen):\n\n$\\large \\frac{ - b \\pm \\sqrt{b^2 - 4ac} }{2a}$ når $ ax^2 + bx + c = 0$\n\n_A = Koeffisient i første term_\n_B = Koeffisient i andre term_\n_C = Koeffisient i tredje term_\n\nTil dømes:\n$f(x)=x^2+x-6$,\n$A = 1$\n$B = 1$\n$C = -6$\n$\\large x_1,_2=\\frac{-1 \\pm \\sqrt{1^2 - (4 \\times 1 \\times -6)}}{2 \\times 1}$\n\n$\\large x_1,_2=\\frac{-1 \\pm \\sqrt{1^2 - (-24)}}{2 \\times 1}$\n\n$\\large x_1,_2=\\frac{-1 \\pm \\sqrt{1 +24}}{2}$\n\n$\\large x_1,_2=\\frac{-1 \\pm 5}{2}$\n$x_1=-3, \\space x_2=2$\n$(x+3), \\space(x-2)$\n$f(x)=(x+3)(x-2)$\n\nVeldig tedious!\n\n## Faktorisering med Polynom divisjon (Algebraisk lang divisjon).\n\nVed å ta i bruk [[Polynom divisjon#^4aa794 | Algebraisk lang divisjon]] kan vi finne faktorer, vi trenger ein kjent faktor i fra før. Vi dermed dividerer ut polynomet med faktoren og viss vi har ingen remainder, veit vi at polynomet kan fullt faktoriserest. Vi setter det utdividerte ved siden av den kjente faktoren. Vi kan berre finne graden lavere enn polynomet med denne metoden, vi kan fortsette og bruke andre metoder som grupperingsmetoden for å fullt faktorisere den. Vi kan også faktorisere med ein remainder, men då blir det eit brøk med den kjente faktoren nederst, og remainderen på toppen.\n\nTil dømes:\n$f(x)=x^2+2x-3$\n$\\text{Kjent faktor : } (x+3)$\n$(x^2+2x-3)/(x+3) = (x-1) \\space \\text{Ta i bruk algebraisk lang divisjon her.}$\n$\\large (x+3)(x-1) \\text{ fullt faktorisert.}$\n\nDøme med remainder:\n$f(x)=7x^2+35x+24$\n$\\text{Faktor : } (x+4)$\n$(7x^2+35x+24)/(x+4) = 7x+7, \\space \\text{med remainder av -4.} \\text{ Ta i bruk algebraisk lang divisjon her.}$\n$\\large (x+4)(7x+7 - \\frac{4}{x+4})\\text{ faktorisert.}$\n\nP.S Viss dette er ein løsning på ein matteoppgåve i ein prøve er det oftest feil, fordi i VG1 har dei sjeldant slike oppgåver, oftast er dei full faktoriserbare.\n\n## Sjekke om eit tall er ein faktor (Bruke remainder theorem).\n\nFor å sjekke om eit tall er ein faktor kan vi ta i bruk [[Polynom divisjon#^dd314c|Polynomial Remainder Theorem]]. Viss $x$ verdien vi tester blir 0 etter vi brukte \"theoremet\" veit vi at tallet er eit nullpunkt i polynomet. Vi skifter på forteikn med $x$ og tallet testet og får ein faktor, slik $P(-1)=0, x = -1, x + 1 = 0, (x+1) \\text{ er ein faktor}$. Vi kan då ta i bruk Algebraisk lang divisjon for å faktorisere om vi ønsker.\n\n## Største felles faktor (Greatest Common Factor, GCF).\n\nStørste felles faktor i polynomer er simpelt sagt, den største faktoren vi finner i alle termene.\nVi finner den største felles faktoren ved å primtall faktorisere termene, og dermed finne alle faktorene som er til felles. Deretter multiplisere dei felles faktorene, og få den største felles faktoren.\nOftest er x verdien i den største felles faktoren i ein polynom berre den laveste x verdien (inkl. eksponent), P.S husk at [[Polynom terminologi#^f0c201|konstandledd]], også kjent som 0 grad [[Polynom terminologi#^940144|monomer]], innehalder også $x$ verdier men dei er $x^0$ altså $1$. Då er den laveste $x$ verdien basically ingenting (1), og da er det ingen x verdi i det heile tatt i den største felles faktor. Vi kan bruke største felles faktor i faktorisering, blant anna ved [[Polynom faktorisering#^64d1ac|Grupperingsmetoden]] når vi skal faktorisere ut talla.\n","lastmodified":"2022-12-05T20:39:56.365033827Z","tags":null},"/notes/Polynom-grafer":{"title":"","content":"# Polynom Grafer.\n\n\n\n## Korleis faktorer påvirke grafen.\n[[Polynom terminologi#^33d3ba|Faktorene]] bestemmer alt om grafen. Dens [[Polynom terminologi#^74129e|nullpunkt]], dens [[Polynom grafer#^7164ea|end behaviour (slutt oppførsel)]] $\\dots$ \n\nFaktorene bestemmer når grafen krysser $x$ aksen. Nullpunkt og faktorer er egentelig det samme, nullpunkt er berre $x$ sin verdi i ein faktor. I alle nullpunkt er $y$ verdien 0. \n\nEksponentene til faktorene bestemmer om nullpunktet krysser $x$ aksen og skifter forteikn.\nEin faktor som har eit partall i eksponent verdi, vil aldri krysse $x$ aksen i nullpunktet til faktoren og skifte forteikn, den berre dylter borti. Derimot vil faktorer som har oddetall i eksponent alltid krysse $x$ aksen i faktorens nullpunkt og skifte forteikn. \n\nFaktorene bestemmer grafens [[Polynom grafer#^7164ea|end behaviour.]] Likt som eksponentene til faktorer bestemmer når og om dei krysser $x$ aksen, bestemmer også eksponentene korleis grafen oppfører seg når den når uendelig i $x$. [[Polynom grafer#^7164ea|Referer til dette.]]\n\n\n\n## Positive og Negative Intervaller.\n### Kva betyr dette?\nViss vi veit [[Polynom terminologi#^74129e|nullpunkta/faktorer]] til eit polynom kan vi vite for kva $x$ verdier grafen har sine positive forteikn, og for kva $x$ verdier grafen har sine negative forteikn. \nSimpelt sagt veit vi når grafen er positiv og når grafen er negativ. Dette kan hjelpe oss å visualisere grafen.\n\n\n### Finne gjennom testing av eit tall (Forteiknsmultiplisering).\nViss vi tester eit tall mellom to ulike nullpunkt, kan vi finne ut kva for noko forteikn resten av grafen har, og når. Viss vi rekner ut forteiknet til eit polynom for $x =$ verdi, $x \\ne \\text{nullpunkt}$. Får vi entens eit positivt eller negativt tall tilbake. Vi kan gjere det lettere ved å berre sjå på kva forteikn kvar faktor får når vi settjer inn tallet, og dermed berre multiplisere dei forteikna til faktorene. Som nemnt tidligere, i mellom to nullpunkt vill alltid forteiknet vere likt, og viss eksponenten til ein faktor er oddetall veit vi at grafen skifter forteikn i det nullpunktet i $x$ aksen. Viss eksponent til ein faktor er partall vil ikkje det krysse $x$ aksen og skifte forteikn, då veit vi korleis den oppfører seg til alle $x$ verdier, berre ut i frå å teste ein $x$ verdi. \n\n[[Polynom grafer#^81de8a|Referer til eksempel bilete under.]]\n\n\n### Finne gjennom forteiknslinje.\n\n^e0d1fe\n\nVi kan også finne ut kva for nokre forteikn ein graf har for alle $x$ verdier gjennom ein forteiknslinje. \n\nForteiknslinjer fungerer ved å settje faktorene på linjer paralell med ein linje av $x$.\nVi deretter krysser faktorlinjene, med faktorenes nullpunkter og teikner av dei positive forteikna og dei negative forteikne i linjene. [[Polynom terminologi#^74129e|Nullpunkt]] har eit symbol av 0. I mens [[Polynom terminologi#^11a079|Bryddpunkt]] har eit X som symbol. Til slutt for å sjå på heile polynomet sitt forteikn kan vi sette polynomet på ein eigen linje, for å finne forteikne her; multipliserer alle faktorene sine linjer for å finne denne linjens forteikn. Viss det er ein brøk kan vi gjere det samme der vi deler linjene på kvarandre for å finne brøkens forteiknslinje; skal vere heilt lik som å multiplisere.\n\nEin forteiknslinjer ser slik ut:\n![](http://i.stack.imgur.com/gncg2.png)\n\nHer i dette eksempelet er $x \\ge 0$ (positiv) når $x \\in \\left\\langle \\leftarrow, -1 \\right] \\space \\cup \\space \\left[   1, \\rightarrow \\right\\rangle$ \n\nEksempel (Positive og negative intervaller i eit polynom): ^81de8a\n\n![](https://cdn.kastatic.org/googleusercontent/69tq0M6j5vJU_ERxil6tV4teGe8jREgSLoHQPn71ACqF41nIYTOs5W3LZsGlvAkszRJSmPEmagLLagHCc2AF3nOX)\n\n\n## Asymptoter.\n\n^f2d0d6\n\nEin asymptote er ganske enkelt forklart ein linje ein graf nærmer seg når $x$  beveger seg. Asymptoter kan gå i alle retninger, den kan gå skrått oppover, rett ned, skrått nedover, $\\dots$ Asymptoter oppstår når ein [[Polynom divisjon|polynom blir delt og har eit konstantledd]]. Når ein deler oppstår det som regel to asymptoter, ein vertikal ein, og ein horisontal/skrå ein. Men asymptotene kan også vere heilt forskjellige retninger, som nemnt tidligere. Blant anna i Sigmoid funksjonen har vi to horisontale paralelle asymptoter. . Den horisontale asymptoten oppstår når $x$ går til uendelig og nærmer seg ein $y$ verdi. Den vertikale asymptoten oppstår når $x$ nærmer seg [[Polynom terminologi#^74129e|nullpunkt-et/ane]] i nevneren til brøken. Då går $y$ verdien til det uendelige, for å dividere på 0, gir oss eit udefinert svar, og ingen veit kva $y$ verdien skal vere når vi deler 0. ^8a35c9\n\n#### Vi kan rekne ut den vertikale asymptoten: ^8b580b\n\nDen vertikale asymptoten oppstår når nevneren i brøken sin verdi $=$ 0 og telleren er $\\ne 0$. Då er det ganske openbart for korleis vi finner den vertikale asymptoten sin posisjon i $x$ aksen.\nDet einaste vi trenger å gjere er å dra konstantleddet over $= 0$ slik at det blir $x = \\text{konstantledd}$. Her ligger den vertikale asymptoten i denne $x$ verdien.\n\nEksempel:\n$\\large f(x)=\\frac{(x+3)(x-2)}{x+10}$\nVertikale asymptote sin $x$ akse posisjon:\n$x+10 \\rightarrow x=-10$. \nPosisjon sin verdi $= -10$.\n\n#### Vi kan rekne ut den horisontale/skråe asymptoten:\n\nDen horisontale asymptote oppstår når $x$ verdien går i mot det uendelige. \nVi kan rekne denne asymptoten sin $y$ verdi ved å ta i bruk limits, dette fungerer når det er fleire enn ein faktor i teller, og i nevner. I motsetnad til å berre dele den første termen i telleren med den første termen i nevneren fungerer dette med fleire faktorer. Vi bruker limits, og deler alle termene på $x$. Dermed tenker vi ut verdiene til alle termene som delest. Viss ein term er til dømes: $\\frac{1}{x}$ blir dette 0 fordi $x$ går til det uendelige og denne verdien minsker. Viss det er $\\frac{x}{x}$ blir dette 1, fordi alt dividert på seg sjølv $=$ 1.\nViss telleren har lavere grad funksjon enn nedre delen vil $y$ verdien alltid vere = 0. \n\n###### Eksempel med limits (Fungerer for fleire faktorer, og skråe):\n$\\large f(x)=\\frac{x+2}{x+10}$\nHorisontale sin $y$ akse posisjon:\n$\\large \\lim_{x \\to \\pm \\infty} \\frac{x+2}{x+10}$\n\n$\\LARGE \\lim_{x \\to \\pm \\infty} \\frac{\\frac{x}{x}+\\frac{2}{x}}{\\frac{x}{x}+\\frac{10}{x}}$\n$\\large \\frac{1+0}{1+0} \\rightarrow \\frac{1}{1} \\rightarrow 1$\nPosisjon sin verdi $= 1$.\n\n\u003e[!INFO] Når det er ein polynom og ein skrå asymptote, bcuz høgere oppe enn nede $\\rightarrow$ vi kan få feil!\n\u003eBetyr dette at vi **må** gjer [[Polynom divisjon]] for å finne den skråe asymptoten. Deretter sjekke om nokon [[Polynom terminologi#Term (ledd).|termer]] går i mot $0$ med [[Grenseverdier]].\n\n\n##### Eksempel med simpel deling (NB! Fungerer berre når det er berre binomiale polynomer og berre for horisontale asymptoter, ikkje skråe):\n$\\large f(x)=\\frac{x+2}{x+10}$\nHorisontale asymptote sin $y$ akse posisjon:\n$\\large \\frac{x}{x} \\rightarrow 1$\nPosisjon sin verdi $= 1$.\n\t\n\n![400](https://useruploads.socratic.org/f6yJd4BfStuKbYWfKO21_assymptote.bmp)\n\n## End behaviour (Slutt oppførsel).\n\n^7164ea\n\nEnd behaviour eller slutt oppførsel er korleis enn graf sine ender oppfører seg når vi går i mot det uendelige i $\\pm \\space x$ verdi. For å finne slutt oppførselen trenger vi berre å sjå på det [[Polynom terminologi|ledende termet]] og dens eksponenter, og forteikn. Grunnen til at vi berre trenger å se på dette termet og dens eksponenter er fordi eksponenten kommer til å eventuellt bli så sterk at den overtar alle andre termer sin *styrke*.\n\nPolynomer som har ein ledende term med  $x$ som er opphøgd i eit oddetall vil ende opp i det uendelige + der $x$ auker for evig, og inn i det uendelige - der $x$ går i negativ for evig.\n\nOmvendt er polynomer som har ein ledende term med $x$ er opphøgd i eit partall. Disse vil ende opp i det uendelige + uansett $x$ retning. \n\nMen! Viss ein polynom sin ledende term har ein [[Polynom terminologi|koeffisient]] som er negativ vil grafen vere omvendt frå det normalet. Der oddetall eksponenter (i $x$ ledende term) minsker der $x$ verdi går positivt for evig, og auker der $x$ går for evig inn i det negative. Likt er det når det er partall i eksponenten til det ledende termet sin $x$. Her i staden for det normalet, går den inn i det uendelig negativ der $x$ går i mot $\\pm$ uendelig.\n\nVi veit ikkje korleis dei nærmest delen til 0 i ein polynom oppfører seg (grunna nullpunkta) men vi veit korleis den oppfører seg når den nærmer seg uendelig.\n\nEksempel på end behaviour (Trur polynomet er $f(x)=(x-2)(x+1)(x+4) \\rightarrow f(x)=x^3+3x^2-6x-8$, positivt forteikn i ledende term koeffisient og oddetall eksponent!):\n\n![](https://www.calculushowto.com/wp-content/uploads/2018/11/end-behavior-1-1.png)\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Polynom-terminologi":{"title":"","content":"# Polynom Terminologi.\n\n^fa945d\n## Kva er ein polynom?\n^6d9780\nEit polynom er ein samling av [[Polynom terminologi#^ae93b2|termer]] som viser ein graf.\nPolynom står for \"mange navn/termer\",\nder poly står for mange, og nom står for navn/termer.\nDet er bokstaveleg alt ein polynom er!\n\n## Oppsett av polynomer\n### Faktorisert form\nFaktorisert form er simpelt sagt den meir lette formen av eit polynom. I eit polynom kan det entens vere skrivet ut og sjå omtrent slik ut $f(x)=x^2+x-6$. Den lette formen av dette er $f(x)=(x+3)(x-2)$. Alle [[Polynom terminologi#^33d3ba|faktorene]] til polynomet står ved siden av kvarandre. Her kan vi lett sjå alle [[Polynom terminologi#^74129e|nullpunkta]] til funksjonen/grafen. Dette formen der faktorene står ved siden av kvarandre heiter faktorisert form.\n\n### Ufaktorisert form.\nDen motsatte formen av faktorisert form er ufaktorisert form. Den ufaktoriserte formen er egentelig berre den utskrivet formen av faktoriserte polynomer. Til dømes: $f(x)=x^2+x-6$ er ein ufaktorisert form. Denne formen viser **ikkje** [[Polynom terminologi#^33d3ba|faktorene]] eller [[Polynom terminologi#^74129e|nullpunkta]].\n\n#### Standard form.\nStandard form som navnte forteller er den standardet formen vi settjer polynomer opp på når det ikkje er faktorisert. Standard form går ut på settje det termet med høgst grad av eksponent først, og deretter det nedst største, $\\dots$ etc. Standardform gir mest mening fordi når vi skrive ut ein polynom i frå [[Polynom terminologi#^33d3ba|faktorer]] frå venstre til høgre, vil det oftast vore satt opp slik som dette. Med høgst grad term først, osv. \n\nBilete under viser bla. standard form:\n\n![](https://tse1.mm.bing.net/th?id=OIP.hcul58RDB1I9gGdwu-lqTwHaEO\u0026pid=Api)\n\n### Nullpunkt.\n^74129e\nNullpunkt er punktene i ein funksjon der funksjonen/grafen krysser $x$ aksen (Har ein $y$ verdi på $0$). Vi finner nullpunkt i faktorene til ein funksjon, til dømes $f(x)=(x-2)(x+3)$. Når $x$ verdien kansellerer ein av faktorene sine [[Polynom terminologi#^f0c201|konstantledd]] vil denne faktoren ha ein verdi på $0$. Dette gjer at vi ganger resten av polynomet med 0, som resulterer i at heile funksjonen har ein verdi på 0. Det er her namnet stammer i frå; 0-punkt.\n\nTil dømes:\nNullpunkta i funksjonen $f(x)=(x-2)(x+3)$ \n$(x-2) \\rightarrow x-2$\n$x-2=0 \\rightarrow \\underline{x=2}$\n$(x+3) \\rightarrow x+3$\n$x+3 = 0 \\rightarrow \\underline{x=-3}$\nNullpunkta er $2$ og $-3$.\nVi kan bekrefte dette når vi tester $f(2 \\space eller -3)$ og får 0.\n\n### Bryddpunkt.\n^f61e26\n^11a079\nBryddpunkt er på ein måte som nullpunkt, men berre i revers. Når vi har ein [[Polynom terminologi#^52a217|rasjonal funksjon (polynom brøk)]], har vi oftast ein [[Polynom grafer#^8a35c9|vertikal asymptote]]. Denne oppstår i \"nullpunkta\"  til nevneren i brøken. Vi kan ikkje akkurat kalle det nullpunkt i denne situasjonen da, fordi polynombrøken returner ikkje 0. I dette punktet vil grafen ikkje gi ein verdi lengre, berre udefinerte svar, fordi vi deler på 0. Dette punktet kaller vi for eit bryddpunkt, fordi det bryter med generelle om grafen.\n\nTil dømes:\nBryddpunktet i $\\large f(x)=\\frac{x^2-4}{x+2} \\space$  er  $x+2=0 \\rightarrow x=-2$\n\n### Faktorer.\n^33d3ba\nFaktorer enkelst forklart er det vi ganger kvarandre med for å få polynomet. Det er dette polynomet i grunn består av. Faktorer er [[Polynom terminologi#Nullpunkt|nullpunkta]] til grafen der $x$ verdien er nullpunktet sin posisjon. Eksempel : $(x+3), x=-3$. $x$ er nullpunktet. Som vi lærer i [[Polynom terminologi#Nullpunkt|Nullpunkt]] for vi vite at når $x$ verdien kansellerer ut konstantledd, i andre ord når faktoren sin verdi $= 0$ blir heile polynomet sin verdi $= 0$. Når vi har ein [[Polynom faktorisering#Kva er polynom faktorisering|faktorisert polynom]], betyr dette at polynomet er skrivet av faktorer.\n\nEksempel :\n$(x+2)$\n$(x-2)$\n$(x^2-4) =$ [[Polynom faktorisering|(x-2)(x+2)]]\n\n### Term (ledd).\n^ae93b2\n^8de091\nDen vitenskaplege definsjonen for term/ledd (synonymer), er \"ein samling av variabler, koeffisienter, og eksponenter til variabel\". I andre ord er eit term dette, $-5x^3$, $2x^3$,  eller dette $x$. Kvart term innehalder ein eksponent til variabelen ($^3$), kvar term innehalder ein koeffisient ($-5$), og kvar term innehalder ein variabel ($x$). Termer er essensiellt [[Polynom terminologi#^940144|monomer]]. Eit polynom er i andre ord ein samling av termer (fleire monomer). \n\nEksempel:\n$-5x^2$, $5$, $2x^3$\n\n\n### Konstant-term/ledd (0 grad monomer)\n^f0c201\nKonstantledd er termer som ikkje innehalder nokon variabel, ein kan tenke på det som eit monom som har eit 0 grad eksponent i variabelen då denne variabelen sin verdi blir 1 uansett kva då. Konstantledd forandrer høgden til ein graf opp eller ned i $y$ aksen, (verdien til grafen)  ved konstantleddet sin verdi.\n\nEksempel:\n$+ 5$.\n\n## Namn av typer polynomer.\nPolynomer er ein felles betegnelse for alle funksjoner som består av ein eller fleire termer. Men vi har underbetegnelser under polynomer for dei ulike polynomene. \n\n1. Ein polynom som består av ein term/ledd kalles monomium (Engelsk: monomial). \n\tEksempel : $5x^2$ ^940144\n2. Ein polynom som består av to termer/ledd kalles binomium (Engelsk: binomial).\n\tEksempel : $x^2+4$\n3. Ein polynom som består av tre termer/ledd kalles trinomium (Engelsk: trinomial).\n\tEksempel : $x^2+x-6$ ^09104c\n4. Ein polynom består av kva enn som helst mengde termer:\n\tEksempel : $5x^2$, Eksempel : $x^2+4$, Eksempel : $x^2+x-6$.\n\n## Grad av polynom.\n^5d0d05\nGraden til eit polynom er simpelt sagt verdien til det ledende termet sin $x$ eksponent!\nEit andregrads polynom har eit ledende term med $ax^2$ , eit tredjegrads polynom har eit ledende term med $ax^3$.\n\n## Polynom identiter.\nTo polynomer som er like verdt kalles det ein polynom identitet.\nFor å sjekke om to polynomer er like verdt må vi ofte bruke [[Polynom faktorisering]].\nEntens ved å faktorisere den ut og så sjekke om begge har like faktorer/ faktor forhold.\nKort savt er polynom identiteter to polynomer eller fleire som har identitiske verdier.\n\n## Rasjonale funksjoner (Polynom brøker).\n^52a217\nRasjonale funskjoner, også kjent som polynom brøker, er berre eit mattematisk namn for ein funskjon som sin verdi er ein brøk, som $\\large f(x)=\\frac{x+2}{x-2}$. Rasjonale funskjoner innehalder alltid [[Polynom grafer#Asymptoter|asympoter]], oftast ein vertikal ein, og ein horisontal ein, men det kan vere i alle retninger.  Rasjonale funksjoner holder alltid opp til $x$ verdien, utanom når $x$ verdien kansellerer konstantleddet i nevneren og heile verdien i nevneren $= 0$. [[Polynom divisjon#Unntaka|Sjekk her for forklaring!]]\n\n\n## Monotoni egenskaper.\nMonotoni egenskaper er simpelt sagt korleis grafen er, det er kor er [[Polynom terminologi#Nullpunkt|nullpunkta]], korleis utviklar grafen seg, kva er [[Polynom grafer#End behaviour Slutt oppførsel|end behaviouren]], etc. \nDet er altså korleis ser grafen ut, korleis slutter grafen, kva egenskaper finner vi med denne grafen. Når har grafen sine [[Polynom grafer#Positive og Negative Intervaller|positive og negative intervall]].\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Posisjon-x-vs-tids.":{"title":"","content":"# Posisjon (x) vs tid(s) grafer.\n\nEin posisjon vs tid graf er ganske lik ein [[Hastighet(v) vs tid (s).]] graf men i staden for å vise hastighet som y akse viser den heller posisjonen til objektet etter spesifikk tid(s). \n\n\n## Forskyvning i frå ein slik graf.\n\nDen totale forskyvningen kan finnest ved å ta posisjonen ved spesfikk tid(s) og minuse det i frå start posisjonen. Dette er det samme som $\\Delta x = posisjon(tid_{f})-posisjon(tid_{i})$.\n\n\n## Hastigheten i ein posisjon(x) vs tid(s) graf.\n\nFor å finne den momentane hastigheten til ein posisjon over tid graf kan vi berre derivere posisjon(x) vs tid(s) grafen sin funskjon. Dette gir ganske mye mening fordi viss vi skal bevege oss i posisjon verdi må vi ha ein hastighet som viser til kor vi går og kor raskt vi skal gå. Dermed ved å derivere posisjon funksjonen kan vi finne hastigheten sin funksjon. Likt viss vi dobbel deriverer posisjonen sin funksjon finner vi den momentane akselerasjonen til hastighetene. \n\n$hastighet(s)=posisjon'(s), s=sekunder$\n\nHer kan vi sjå dei ulike forskjellene i grafene.\n![](http://hyperphysics.phy-astr.gsu.edu/hbase/Mechanics/imgmech/positionc.png)","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Potensiell-Energi":{"title":"","content":"\n[[Kva er energi?]]\n\n## Kva er potensiell energi.\n\n\nTil kvar form av potensiell energi høyrar det ein kraft. Når ein utførerer eit arbeid mot denne kraften auker den potensielle energin.\nKrafta kan vere [[Newtons andre lov, vekt|tyngdekraft]], elektriskkraft, [[Hooks lov.|Fjærkraft]].\nPotensiell energi forklarer altså kor mykje energi som kan bli oppnåd, dette er fordi kraften som drar den tilfører ein energi som kan bli utnyttet. I andre ord viss du dropper eit objekt, den sin tyngdekraft drar den ned, så er potensielle energien den totale energien som kan bli utnytta gjennom dens kraft.\n\n## Formel\n\nNår vi driver med gravitasjons potensiell energi.\n\n$\\Huge \\sum E_p = m\\times g \\times h$.\n\nDette kjem i frå at [[Newtons andre lov, vekt]], vi har ein kraft som er $m\\times g$ som er vår gravitasjonskraft, denne kraften kan vere ein anna kraft men er oftast gravitasjonskraften, og vi har ein distanse på $h$ som den kan bevege seg. På denne måten er det nært [[Arbeid]], men heller forklarer den moglege arbeidet som kan bli gjort dersom kraften får bevege den utover den totale distansen av $h$.\nVi kan teoretisk sett si at vi har ein $h$ av kva som ein helst distanse mellom den totale moglege $h$ men vi då finner vi den potensielle energien for denne distansen. Fordi dette er energi er det også målt i Joule som som [[Arbeid]] er.\n\n\nDersom den einaste kraften som påverker eit objekt er gravitajonskraften vil ettersom objektet faller nedover vil ein observere at den potensielle energien går over til [[Kinetisk energi.]] og dette er grunnen til at [[Mekanisk Energi]] er konstant. \n![[Potensiell Energi 2022-11-22 10.28.53.excalidraw|500x500]]\n## Arbeid\n\n[[Arbeid]] er det samme som forskjellen i potensiell energi som er dermed\n$\\Huge W=\\Delta E_p$\n\n\n\n## Virkningsgrad.\nI alle maskiner eller systemer vil den nyttbare energien vi får ut være mindre enn energien den som blir tilført / potensielle energien. Det vil alltid bli noe energitap fra systemer på grunn av friksjon, luftmostand eller varme til omgivelsene.\nForhaldet mellom nyttbar energi og potensiell energi kaller vi for virkningsgraden\n$\\Huge \\eta=\\frac{\\textit{Nyttbar energi}}{\\textit{Potensiell energi}}$ .\n\n\nTil dømes:\nDersom vi har eit vatnmagasin som kan regulere vatn mellom 460 og 585 meter, den opphemmede vannvolumet på 3.5 milliarder m^3.\n![[Potensiell Energi 2022-11-22 10.45.24.excalidraw]]\n\n\n\nDersom vi har ein virkningsgrad på 0.9 kan vi finne den potensielle energien, og fordi vi har ein forskjell frå start til slutt så kan vi kalle potensielle energien det samme som arbeidet, og den nyttbare energien kan vi seie det er det samme som $Nyttbar energi =  0.9 \\times E_p$\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Print-funksjoner.":{"title":"","content":"# Printing\n\n\n\n\n## Printing av tall.\n\n### Med antall desimaler.\nViss ein har lyst til å printe noko med $x$ antall desimaler i Python så må ein bruke ein spesiell type funksjon når ein skal printe det ut.\n\n\n````python\n#Med x antall desimaler, skift x ut til ønsket.\n#variabelÅPrinte er ein tidligere definert variabel, evt berre tallet.\nprint(\"{:.xf}\".format(variabelÅPrinte))\n````\n\n\n\n## Variabler i printing.\n\nVi kan printe fleire variabel samtidig som vi printer ut tekst.\nTil dømes: kan vi printe ut \"Hei, det er mengdePersoner i bussen\".\nMen korleis får vi mengdePersoner variabelen til å printe ut variabel verdien, i staden for berre namnet?\n\nDet kan vi gjere på ganske mange ulike metoder, her ser vi på to ulike.\nVi kan til dømes: splitte opp teksten og addere variabelen slik at den blir \n\n````Python\nprint(\"Hei, det er \" + mengdePersoner + \" i bussen\")\n````\n\n\nMen vi kan også berre direkte settje det inn i teksten med å ta i bruk spesiell syntax:\n\n````Python\nprint(f'Hei det er {mengdePersoner} i bussen')\n````\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Prokaryote-celler.":{"title":"","content":"# Prokaryote celler.\nEin videreføring av [[Introduksjon til prokaryote celler.]], [[Prokaryote og eukaryote celler]], og [[Introduksjon til cellen.]]. \n\n\n## Komponenter av ein prokaryote celle.\nDet er nokre nøkkel komponenter alle celler har uansett om dei er prokaryote eller [[Introduksjon til eukaryote celler.|eukaryote]].\n* Plasmamembran er eit viktig lag som seperer cellens indre frå ytre miljø.\n* Cytoplasma består av gelelikanden cytosol inni cellen + cellens indre strukturer. \n\t* I eukaryote celler tyder cytoplasma alt inni utanom cellekjernen.\n* DNA er det genetiske arvestoffet til cellen. \n* Ribosomer er molekylære maskiner som syntisere proteiner.\n\n## Forskjell på Prokaryote og Eukaryote.\nLikevel dei (prokaryote og eukaryite) har fellestrekk er dei forskjellige på fleire måter. Eit prokaryote er ein enkel eincella organimse som manglar ein cellekjerne, og membranbundet [[Kva er organeller - organeller i eukaryotiske celler.|organeller]]. Prokaryoter altså har eit indre som er eit flytende åpent rom. \n\nMajoriteten av prokaryote's DNA er funnet i eit sentral sted inni cellen kalt **nukleoid** og den normalt består av ein lang sirkulær bane kalt eit **sirkulær kromosom**. Nukleoiden og nokre anna ofte sett trekk av prokaryotere er vist i bilete under.\n(Stang formet bakterie).\n![](https://biologydictionary.net/wp-content/uploads/2016/12/The-Anatomy-of-a-Bacterial-Cell-1.jpg)\n\nBakterier er svært diverse i form så ikkje alle har lik struktur og trekk.\n\nDei aller fleste bakterier er omringet av ein sterk cellevegg lagt av små peptidoglykan, eit polymer som består av lenket [[Karbohydrater.|karbohydrater]] og små [[Proteiner og aminosyrer.|proteiner]], Celleveggen gir eit ekstra lag av beskyttelse, hjelper cellen halde formen og hjelper å unngå dehydrasjon. Mange bakterier har òg eit ytterlag av karbohydrater kalt **kapsel**. Kapselen er klistrete/slimete og hjelper cellen å feste seg til overflater i miljøet.\n\n## Spesialiserte strukturer som finnes på prokaryoter.\n\n\u003e[!WARNING] NB\n\u003eNokre av disse strukturene finnest òg på [[Introduksjon til eukaryote celler.|eukaryote celler]]. Men ikkje alle, til dømes er pili **berre** funnet på prokaryoter.\n\nNokre celler har òg spesialiserte strukturer funnet på celle overflaten, som kan hjelpe dei å bevege seg, feste seg til overflater, eller til òg med dele genetisk materiale med andre celler.\nTil dømes:\n* [[Flimmerhår, flageller og psuedopoder.|Flageller]] er piske/hale likannde strukturer som fungerer som ein rotor motor som hjelper cellen å bevege seg.\n* Fimbriae er mange hår liknande strukturer som er brukt til å feste seg til ein vert celle. (Virus og likt fester seg på andre celler) og andre overflater. (**Kan vere ment flimmerhår, eller cilier, er usikker**).\n* Bakterier, (og andre prokaryoter), kan òg ha stav liknande strukturer kjent som **pili**, som kommer i ulike varianter.\n\t* Til dømes: nokre varianter av pili tillater ein bakterie til å overføre DNA molekyler til andre bakterier. I mens andre kanskje er involvert i bakterie beveglese.\n\n\u003e[!INFO] Sidenotat:\n\u003eFimbrae er korte og mange, pili er ofte lengre og i mindre kvantiteter.\n\n\n#### Arkea spesielle versjone av trekk.\nArkea har òg dei fleste av disse celle overflate featursene men deirast versjoner av eit feature pleier ofte å gå litt vekk i frå det som ein standard prokaryote sin versjon er. Til dømes: arkea har ein cellevegg, men den er ikkje lagt av peptidoglykan, men den innehalder karbohydrater og proteiner også.\n\n## Prokaryote celle størrelse.\n\nTypiske prokaryote celler har ein størrelse på $0.1\\rightarrow5$ mikrometer i diameter som er mykje mindre enn eukaryote celler som pleier å ha ein diameter på $10\\rightarrow100$ i mikrometer. \n\nBakterier har ein størrelse nær til mitokondria, sjølvsagt er det nokre unntak her. [[Skala av celler.#Cellestørrelse|Som \"Caulerpa\"]].","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Prokaryote-og-eukaryote-celler":{"title":"","content":"# Eukaryote og prokaryote celler.\n\n## [[Introduksjon til cellen.#Eukaryote celler|Eukaryote celler]].\nI eukaryoter celler er det membran bundet organeller som miokondria. \nNukleolus saper det ribosomale RNA.\nRibosomale RNA skaper ribosomer i samband med proteiner.\n\nI eukratyote celler pleier DNA-et å vere i fleire eigne individuelle strimler slik: |||. \n\nEukaryote celler pleier å vere større en prokaryote celler.\n\nAlle fleircellet organismer innehalder eukaryote celler.\n\n## [[Introduksjon til cellen.#Prokaryote|Prokaryote celler]]\nI prokaryote celler er det ingen membran bunder organeller.\nI prokaryote celler pleier DNA-et å vere i $1$ lang sirkel formasjon.\n\n\nBakterier og Arkea er prokaryote.\n\n\n\u003e[!Info] Interessant.\n\u003eNokre teorier hintar til at mitokondria originialt oppstod som ein prokaryote celle, men som begynte å leve inni eukaryote celler. Og det er her den egne DNA-et til mitokondira skal vere grunnbasert i.\n\n\n\n\n## Visualisering:\n![](https://presizely.abcmedia.no/654x%2Cdsu%2Csh:1.2:1.2:1.2%2Cq60%2Cprog/https://abcnyheter.drpublish.aptoma.no/out/images/article//2017/11/28/195351567/1/original/4465351.jpg)","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Prosjektil-p%C3%A5-vinkel.":{"title":"","content":"# Prosjektil med vinkel.\n\n\u003e[!WARNING] Konstant akselerasjon.\n\u003eHer forklarer eg korleis vi gjer det med konstant akselerasjon.\n\u003eDet teorisk kan gå ann å bruke dei kinematiske formlene utan konstant akselerasjon for å finne dei ulike verdiene vi ønsker.\n\nNår vi driver med prosjektiler på vinkler, altså vi har ein vektor og ein vinkel, men vi veit ikkje kva dei ulike [[Vektorer, to dimesjoner.#Vektor komponenter|vektor komponentene]] da kan vi ta i bruk vår kunnskap om trigonometri til å finne ut kva dei ulike komponentene sine vektor verdier er.\n\nDette ser komplisert ut men er egentelig ganske enkelt.\n\nDet første vi gjer er å finne ut kva dei ulike vektor komponentene sine verdier er, deretter er det heilt likt som når vi har ein [[Prosjektil utan vinkel.]]. Dette gjer vi gjennom vår kunnskap om korleis dei trigonometriske funksjonene er. Viss vi vil finne den vertikale komponeten til ein vektor bruker vi berre $sin(\\theta)\\times ||V||$ . Sjekk ut [[Vektorer, to dimesjoner.#Finne vektor komponenter gjennom trigonometri|vektor komponenter for meir informasjon.]].\n\nVi bruker vår kunnskap om korleis dei [[Kinematiske formeler - Konstant akselerasjon.|kinematiske formelene med konstant akselerasjon er]]. Og bruker dette til å løyse for verdien vi ønsker. Etter vi sjølvsagt har funnet våre vektor komponent verdier.\n\nHer er eit døme:\n\n![[Prosjektil på vinkel. 2022-07-13 19.11.22.excalidraw]]\n\nSer litt komplisert ut, men er berre kinematiske formler, litt sunn fornuft, og litt matte.\nFørst finner vi våre variabler, og deretter bruker vi våre ulike kinematiske formler.\n\nViss vi til dømes heller bruker nokre variabler kan det sjå slik ut:\n![[Prosjektil på vinkel. 2022-07-14 18.21.20.excalidraw]]\n\n\nVi veit ein verdi i dette problemet, og det er $\\Delta y$ verdien, vi dessverre veit ikkje $\\Delta x$ men vi kan finne den, vi veit og akselerasjonen til $y$ vektor komponenten og dette kan vi ta til vår bruk.\nVi omformulerer slik at vi finner tiden og deretter bruker vi tiden og vår kunnskap av kinematiske formler til å finne vår $\\Delta X$.\n\nNår vi har ein flat bakke dermed er $\\Delta X$ det samme som\n$cos(\\theta)\\times V \\times \\frac{sin(\\theta)\\times V}{4.9\\frac{m}{s^2}}$.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Prosjektil-utan-vinkel.":{"title":"","content":"# Prosjektil utan vinkel.\n\n\u003e[!WARNING] Konstant akselerasjon.\n\u003eHer forklarer eg korleis vi gjer det med konstant akselerasjon.\n\u003eDet teorisk kan gå ann å bruke dei kinematiske formlene utan konstant akselerasjon for å finne dei ulike verdiene vi ønsker.\n\n\nNår vi har ein [[Vektorer, to dimesjoner.#Vektor komponenter|vektor komponenten]] som ikkje bruker ein vinkel så får vi som regel litt informasjon oppgitt som gjer at vi kan løyse verdien vi ønsker å finne. \n\nNår vi veit dette er det ganske enkelt å finne ut kva enn verdi vi ønsker å finne uanset om det for ein anna vektor komponent eller ikkje. Det viktigste å finne ut er alltid kva tiden vi bruker er.\n\nAv og til er det ikje nødvendig å finne ut kva tiden vi bruker er, men som oftast er det ein lur god ide å gjere. Dette er fordi tid er den einaste tingen som alle dei ulike vektor komponentene har til felles. Når vi veit tid kan vi som regel finne ut nesten alt.\n\nEtter vi har alt som vi trenger er det berre å bruke dei [[Kinematiske formeler - Konstant akselerasjon.|kinematiske ein dimensjonelle formelene som tar i bruk konstant akselerasjon]]. Viss vi har med gravitet må vi sterkt huske å ta den med i kalkulasjonene våre. Da er som oftast $a_g=-9.8\\frac{m}{s^2}$, viss opp er positivt.\n\nDøme:\n![[Prosjektil utan vinkel. 2022-07-13 18.47.39.excalidraw]]\n\n1. Vi noterer ned alle våre verdier for alt vi veit.\n2. Vi finner tiden ved å ta i bruk den andre kinematiske formelen for konstant akselerasjon.\n3. Vi bruker vår kunnskap om at tiden er lik for begge vektor komponentene, og finner $\\Delta x$ gjennom denne tiden og vår $V_x$ hastighet.\n\nHer i dette dømet er $\\Delta x = 7.142855... m$\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Prosjektilbane-graf":{"title":"","content":"# Projektilbane graf.\n\nNår vi har ein projektil vi vil finne ut korleis den beveger seg kan det ofte vere ganske lurt å ta i bruk ein projektilbane graf. Dette er egentelig eit sett med grafer som kan vise ganske mykje ulikt som ein projektil, men generelt sett viser det oftast ein bane til projektilen og kanskje hastigheten til den over utviklinga, men det kan sjølvsagt òg berre vere ting som akselerasjon og hastighet, med ingen bane. Dette varierer ofte.\n\n\nHer er dei ulike type grafene vi får ved ulike scenarioer.\n![](https://cdn.kastatic.org/ka-perseus-images/219cac36c2a22f95abc7fabef2e09212ececf8b5.png)\n\n![](https://cdn.kastatic.org/ka-perseus-images/9ad1405f6978b4ecf1986a32031ba0eb139af236.png)\n\n\n\n![](https://cdn.kastatic.org/ka-perseus-images/8e80850fceacd9bd3d4da863ff9138ee73bf5971.png)\n\nAkselerasjonen horisontalt vil alltid vere konstant ved $0$ fordi vi har ingen eksterne krefter som påvirker den, vi har ein for $y$ aksen som er $-g$ som simpelt sagt tyder ein negativ akselerasjon av gravitasjon.  \n\n[[Prosjektil på vinkel.]]\n[[Prosjektil utan vinkel.]]","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Proteiner-og-aminosyrer.":{"title":"","content":"# Proteiner og aminosyrer.\n\n\n\n# Proteiner.\n\nProtiener er makro-[[Kva er grunnstoffer og atomer.|makromolekyler]] og biomolekyler.\nRekker av aminosyrer skaper proteiner, altså aminosyrer er byggesteinene til protein. \nog dermed er óg amonsyrer monomer. Disse rekkene av aminosyrer blir katlt polypeptider, og er ein polymer. Polypeptidene kan vere heilt aleine eit protein, men pro4ein kan óg bestå av fleire polypeptider. Proteiner er involvert i nesten alle biologiske funksjoner.\n\n\nStrukturen til proteinet blir bestemt av korleis aminosyrene ligger.\nBilete av eit protein sin struktur. \n\n![450](https://scx1.b-cdn.net/csz/news/800a/2018/proteinsreve.jpg)\n\n\u003e[!Rollene til proteiner.]\n\u003eProteiner har ganske mange ulike roller dei oppfyller i eit organisme. Til dømes har dei:\n\u003e1. Strukturell rolle.\n\u003e2. Mekanisk rolle.\n\u003e3. Enzyme rolle.\n\u003e4. Immunsystem rolle.\n\u003e5. Signalisering rolle.\n\n\n## Aminosyrer.\nSom nemnt tidligere er proteiner bygget opp av monomet aminosyre.\n\nSom namnet indikerer er aminosyrer syrisk i pH verdi.\n\n### Generell aminosyre struktur.\nAminosyrer har ein ganske interesant struktur som består av karbon, nitrogen, oksygen, og hydrogen, i tillegg til ein ekstra gruppe \"R\" som bestemmer unikheten til aminosyren. R gruppen er ein variant som henger fast på aminosyren og gir aminosyren sin unike egenskap. Under er eit diagram over strukturen eit aminsyre.\n![350](http://www.unicist.org/healthcare/wp-content/uploads/2014/10/Amino-Acids1.jpg)\n\n\n\u003e[!NB]\n\u003eKarboksyl gruppen på aminosyren kan og variere seg litt, i diagrammet over er det ein negativ ladet oksygen, denne kan vere oppfylt av eit ekstra hydrogen som er festet som gjer at den ikkj er negativt ladet.\n\nR er ikkje eit grunnstoff men ein plass. Her forandrer strukturen seg i kvart aminosyre, denne ulike skevensen skaper diversiteten til amonsyren frå andre aminsyrer.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Protister":{"title":"","content":"# Protister (Protoktister)\n\n## Protister\nProtister (_Protista_) er ein samlegruppe for alle [[Introduksjon til eukaryote celler.|eukaryote]] organismar som ikkje passer direkte inn i dei andre rika. Dette betyr at protistriket er det mest [[Mangfald]] riket av alle rika, den består av alt i frå små eincella planktonalgar, eincella [[Dyr]]-liknande organismar som *amøbar* og *tøffeldyr*, til store _algar_ som _sukkertare_. Dei aller fleste protistene lever i fuktige eller akvatiske miljø, som _algar_ eller _svampar_. Fordi riket er så mangfaldig betyr dette at organismane lever ganske forskjelleg frå kvarandre, nokon lever som [[Planter]], nokon som [[Dyr]], andre viser slektskap med [[Sopper]], og nokon vekslar mellom ulike [[Kva er liv?|livsformar]]. Dette riket er jordas nest mest talrike og [[Kva er ein art.|artsrike]], og er truleg berre ein brøkdel av alle beskrivne arter som finnes.\n\n\n## Kategorisering\nDet er mange måtar å kategorisere protister inn på, men den mest brukte er å kategorisere dei inn basert på måten den får tak i næring og korleis den beveger seg. Her pleier ein å kategorisere det inn i tre ulike kategoriar; _dyr-liknande_, _plante-liknande_ og _sopp-liknande._\n\n[[Dyr]]-liknande protister, også kjent som _protozoar_ \u0026 _metazoar_, lever ein livsstil som likner til livsstilen til organismar innanfor dyre-riket. *Protozoar* er små eincella dyr-liknande protister, og *metazoar* er fleircella [[Dyr]]-liknande protister. [[Planter]]-likande, også kjent som _protophyta_, er protister som lever ein livsstil som liknar til plante-livsstilen, disse kan vere både eincella og fleircella. Mange protophyta protister er kjent som *algar*. [[Sopper]]-liknande protister, også kjent som _mugg_, lever ein livsstil som liknar til sopp. Disse protistene lever som regel på daudande organisk materiale, og har form som kan likne sopp. Alle protistene kan ha felles forfedrar til organismane som ligger innanfor dei andre rika, men har hatt ein ulik [[Naturleg seleksjon|evolusjons]]-utvikling.\n\n## Unike strukturer\nProtister har oppdaga unike metodar for å få tak i næring, og har ofte unike variasjonar av bevegelse-strukturar som [[Flimmerhår, flageller og psuedopoder.]]  Nokre protister i vatnet har festeorgan og beveger seg gjennom bølgebevegelsar i vatnet, derifrå vatnet kan den ta direkte opp næring i vatnet. Nokre protister, til dømes amøbar, har ikkje fast form og fasong, og dette tillét protisten å leggje seg rundt næringen den skal ta opp. Gjennom ein prosess kjent som «_fagocytose_» kan den direkte ta opp næringen, og seinare sleppe ut avfallstoffar gjennom ein prosess kjent som _«eksocytose_».  Protister har ikkje berre unike variasjonar av bevegelse-strukturar men har òg ofte unike metodar for å få tak i mest mogleg næring. Eit døme på dette er den [[Fotosyntesen|fotosyntiserende]] algen «_Euglena»_ som har ein lyssensitiv augeflekk som oppfattar kor lys kjem i frå, og den har ein flagell som den bruker til nærme seg lyset slik at den kan maksimere mengde fotosyntese.\n\n## Historie\nAntonie Van Leeuwenhoek (1632-1723) er anerkjent til å vere den første som oppdaga protister. Dette blei nedskriven i eit av hans brev, det berømte brevet frå 1677 om protozoa. Dette brevet gav den første detaljerte beskriving av kva protister er. Dette var berre tillat av hans utvikling av det simple lysmikroskopet, utviklinga tillate han å sjå meir detaljerte bilete av mikroskopiske dyr. Som var der han oppdaga mikroskopiske parasitt protister.  Det tok framleis lang tid til å merke at protister burde tilhøyre eit eiga rike, dette var først merket av Ernst Haeckel. Protistriket var ein eining innanfor systematikken foreslått av Ernst Haeckel i 1866 som eit tredje riket annleis frå både dyreriket og planteriket. Dette riket inkluderte alle bakteriar, protozoar, eincella algar, slimsoppar, svampar og andre organismar som viser liten differensiering (spesialisering av celler) med tanke til celle og vevstypar. . Variasjon i bygning, livssyklus og evolusjon blei etter kvart for omfattande. I moderne tid høyrer deler av protist-riket til andre riker, særleg viktig blei skiljet mellom _eukaryot_ og _prokaryot_. \n\n## Dømer på protister\n\n### Amoeba Proteus\nAmoeba Proteus, òg kjent som _Chaos Diffluens_ eller _Volvox Proteus_, er ein amøbe som har vore kjent til lenge. Amøben var først oppdaga i 1755 av August Johann Rösel von Rosenhof, og namnet betyr «vesle amøbe». Amøben bruker pseudopodi til å bevege seg rundt i miljøet, og spisar mindre eincella organismar for å få tak i næring (inkl. andre amøbar). Maten blir lagt inn i ein vakuole organell og brytt ned av dei naturlege katalysatorane; enzym. Likevel amøben har dei fleste nøkkel proteinene nødvendig til seksuell reproduksjon er det ikkje funnet nokon teikn til seksuell reproduksjon. \n\n### Plasmodium Flaciparum\nPlasmodium Falciparum er ein eincella protozoa parasitt og er den daudelegaste arten av plasmodium som forårsakar sjukdommen Malaria i menneske. Parasitten er overført gjennom bitet av ein hokjønn _Anopheles_ mygg, og den forårsakar den mest daudelege forma av Malaria. Dette gjer at den er anerkjente som den daudelegaste parasitten for menneske.\n\n### Trypanosoma Brucei\nTrypanosoma Brucei  er ein parasitt art som er ansvarleg for å sprei mange sjukdommar i dyr. I menneske forårsakar parasitten sjukdommen «Afrikansk Trypanosamiasis», (òg kjent som Afrikansk sovesjukdom). Parasitten var først oppdaga i 1894 av Sir David Bruce, og namngitt seinare etter han i det same året. T. Brucei har òg moglegheita til å infiltrere hjernen, noko som gjer den ekstremt farleg.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Pythagoras-identiteten.":{"title":"","content":"# Pythagoras identiteten.\n\n\nPythagoras identiteten er ein viderutvikling av pytagoras teorien, denne identiteten er som følgende $sin^2(A)+cos^2(A)=1$.\n\nDette kan vi bruke til å finne den andre trigonometriske verdien viss vi har ein av dei ulike funksjonene sin verdi ved A grader.\n\ndøme:\n$sin^2(A)+cos^2(A)=1$, sin(A)=$\\frac{1}{2}$.\n$\\frac{1^2}{2^2}+cos^2(A)=1$,\n$cos^2(A)=1-\\frac{1}{4}$\n$cos^2(A)=\\frac{3}{4}$\n$cos(A)=\\frac{\\sqrt3}{2}$.\n\n\n\u003e[!Interesant]\n\u003eViss eg husker rett så oppdaget faktisk pytagoras dette før den andre setninga om rettvinklet trekanter, dette er på ein måte foreldre versjonen av den andre pytagorassetninga.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Quicksort.":{"title":"","content":"# Quicksort.\n[[Big theta]]\n\nLikt som [[Mergesort]], bruker også quicksort [[Divide and Conquer.]] strukturen så den er også ein rekursiv algoritme. Men måten quicksort bruker divide and conquer er litt forskjellig i fra mergesort. I mergesort bruker divide steget så vidt noko i det heile, og alt det vanskelige skjer i combine steget. Quicksort derimot er det omvendte, all det vanskelige arbeidet skjer i divide steget. Honestly combine stegt i quicksort gjer avsolutt ingenting, no like seriously.\n\nQuicksort har norke nøkkeldifferanser i frå mergeSort. Quicksort jobber in place. Og dens worst-case running time er like gale som [[Selection sort.]] og [[Insertion sort.]] $\\theta(n^2)$. Men dens gjennomsnittlege-case running time er like god som mergeSort sin $\\theta(n\\times \\log_2(n))$. \n\nSå kvifor tenker vi på quicksort når vi har eit like godt alternativ mergeSort? \nDette er fordi den konstante faktoren som er gjømt i [[Big theta]] notasjonen for quicksort er ganske god.. I praktisk pleier quicksort å gjøre det betre enn mergeSort og den gjer det mykje betre enn selection sort og insertion sort.\n\nHer kan vi sjå korleis quicksort bruker divide and conquer strukturen. Likt som med mergeSort tenk på ein subarray $array[p..r]$, der den originale subarrayen er $array[0..n-1]$. \n1. Divide ved å velge eit tilfeldig element i subarrayen $array[p..r]$. Kall dette elementet vår pivot point.\n\t1. Rearranger alle elementene i $array[p..r]$ slik at alle elementene i $array[p..r]$ er mindre eller lik pivotpointen til venstre for den, og alle som er høgere til høgre for den. Dette blir kalt for **partitioning**. På dette punktet er det ikkje viktig kva rekkefølge elementene til venstre av pivotpointet har til felles med kvarandre, eller likt til høgre for pivot pointet. Vi bryr oss berre om kvart element er på rett side av pivotpointet.\n\t2. Vi oftast pleier å velge vårt pivotpoint som det siste elementet i subarrayen.\n2. Conquer, ved å rekursivt sortere subarrayen sin $array[p..q-1]$ (Alle elementer til venstre for pivotpointet, som må vere mindre eller lik pivotpointet) og $array[q+1..r]$ (Alle elementer til høgre for pivot pointet, som må vere større eller lik pivotpointet).\n3. Kombiner ved å gjere ingenting, fordi vi har allereie sortert den i gjennom divide og conquer steget. Combine steget i quicksort combine ingenting!\n\nBase-casen er når subararrayen er av størrelse mindre enn to elementer, akkurat som i mergeSort. I merge, ser du aldri ein subarray med 0 elementer, men det kan du gjere i quicksort dersom alle andre elementer er entens til venstre eller høgre for pivotpointet når det sortert.\n\nSlik utvikler quicksort seg:\n![](https://cdn.kastatic.org/ka-perseus-images/9876d4dc59e01a4742860ae1831c20f654ed7959.png)\n\nVi velger eit pivotpoint, vi rearrangerer, vi velger eit nytt pivot point, vi rearrangerer, repiter til vi har ein subarray av element størrelse lavere enn 2. Sorter denne, det er jo berre å sjekke kass av dei to som er størst og plassere riktig. \n\n## Linear-time partiotioning.\nDet virkelige arbeidet av quicksort skjer i løpet av divider steget, som partione $array[p..r]$ rundt eit pivot point dratt i frå subarrayen. Likevel vi kan velge kva enn som helst element i subarrayen som pivot pointet, er det enklest å partione viss vi velger det høgste index elementet av subarray $array[p..r]$. \n\nEtter at vi har vårt pivot point kan vi partione subarrayen ved å gå gjennom den frå venstre til høgre og samenligne kvart element med pivoten, har har to indices $q$ og $j$ in i subarrayen som dividerer den opp i $4$ grupper. Vi kan bruke variabeln $q$ fordi indexen vil eventuellt vere på vårt pivot point. Vi kan bruke $j$ fordi det er ein teller variabel og variabelen blir kastet vekk når vi er ferdig.\n\n* Alle elementer i $array[p..q-1]$ er gruppe \"L\", som består av elementer kjent til å vere mindre eller lik til pivoten.\n* Alle elementer i subarrayen $array[q..j-1]$ er gruppe \"G\" som består av elementer kjent til å vere større enn pivoten.\n* Elementer i subarray $array[j..r-1]$ er kjent som gruppe \"U\", og består av elementer som sitt forhold til pivtoen er ukjent, fordi dei har ikkje enda blitt compared.\n* $array[r]$ er gruppe \"P\", pivot pointet.\n\nOriginalt er både $q$ og $j$ lik som $p$. Ved kvart steg, samanliknar vi $array[j]$, den mest venstre elementet i gruppe \"U\" med pivoten. Viss $array[j]$ er større enn pivoten så $j++$, slik at linjen som dividerer gruppe \"G\" og gruppe \"U\" går ein posisjon over til høgre.\n![](https://cdn.kastatic.org/ka-perseus-images/557d3afb93f7ba9abb3a9e845113fcf9ce1e56d8.png)\n\nNår vi kommer til pivoten så er gruppe \"U\" tom. Vi deretter swapper pivoten med den mest venstre elementet i gruppe \"G\": swap $array[r]$ med $array[q]$. Dette plasserer pivoten mellom gruppene \"L\" og \"G\" og gjer den rette tingen til og med viss gruppe \"L\" eller gruppe \"G\" er tom.\n\nDenne \"partition\" funksjonen som implementerer denne ideen returner og index $q$ der den endte opp med å plassere pivoten, slik at $quicksort$ funksjonen, som blir kalt, veit kor partitionsene er.\n\nHer er dei første stegene i partione subarray $[12,7,14,9,10,11]$ i $array[4..9]$\n\n![](https://cdn.kastatic.org/ka-perseus-images/53692155715c9f26ec927cb2d40e70ce6c460e86.png)\n\nÅ partionene ein subarray med $n$ element vil ta $\\theta(n)$ tid. Kvart element $array[j]$ er compared ein gang med pivoten. $array[j]$ kanskje eller kanskje ikke blir swapper med $array[q]$, og $q$ kanskje eller kanskje ikkje blir inkrementert, og $j$ blir alltid inkrementert. Den totale nummeret av linjer executer per element av subarrayen er konstant. Siden subarrayen har $n$ vil den totale partition tiden vere $\\theta(n)$: linear-time partioning.\n\n\n# Analyse av quicksort.\nSatan fuck deg quicksort. 🤯.\n\nQuicksort sin verse case sceneario og gjennomsnittleg scenario er forskjellig på grunn av metoden vi finner vårt pivot-point som lar oss redusere tidsbruken ganske mykje.\nViss vi er ganske uheldig og partition størrelse er jævlig ubalansert, i vertste tilfelle der den eine er $0$ og den andre $n-1$ , alle utanom pivotpointet, så vil det vere [[Rekurisve algoritmer.|rekurisve tilkallinger på størrelser av n-1 og 0.]]. Likt som i [[Mergesort]] er denne tidne det samme som $\\theta(n)$ på ein array av størrelse $n$. I mergesort er det tiden for meging, men i quicksort er det **berre** tiden for partitioning.\n\n## Verste-case sceneario running time.\nNår quicksort alltid har den mest ubalanserte partitionene mogleg så er den originale tilkallingen $cn$ tid for ein konstant av $c$, og der er $n-1$ rekurisve tilkallinger, den første vil dermed vere $c(n-1)$ den neste $c(n-2)$ …… til det er $c(1)$. Slik vil denne subproblem grafen sjå ut.\n![](https://cdn.kastatic.org/ka-perseus-images/7da2ac32779bef669a6f05decb62f219a9132158.png)\n\nNår vi tar og adderer alle dei ulike running-timene vil det sjå slik ut:\n$cn+c(n-1)+c(n-2)……+2c=c(n+(n-1)+(n-2)+(n-3)……)=c((n+1)(\\frac{n}{2})-1)$.\nDen siste linjen $1+2+3…………+n$ er ein aritmetikk serier, og som vi såg når vi analyserte [[Selection sort.]]  (Vi subtraherer 1 fordi for quicksort, starter summasjonen på 2, og ikkje 1). Vi har nokre lavere order termer og konstante koeffisienter, men når vi bruker [[Big theta]] notasjon så ignorer vi dem fordi dei er konstante verdier og lavere termer. I [[Big theta]] notasjon er quicksort sin verste kjøre tid $\\theta(n^2)$.\n\n## Beste-case sceneario running time.\n\nQuicksort sin beste case skjer når partionene er så gjevnt som mogleg, der deirast sider er entens like eller med ein distanse av 1 i størrelse av kvarandre. Casen med ingen forskjell i forskjell skjer når subarrayen har eit oddetall nummer av elementer og pivoten er rett i midten etter partionering, og kvart partition har $\\huge \\frac{n-1}{2}$ elementer. Den andre casen, skjer viss subarrayen har eit partall nummer av elementer og pivoten den eine siden/partionen har $\\huge \\frac{n}{2}$ elementer, mens den andre har $\\huge \\frac{n}{2}-1$ elementer. I kvar av disse casene har partionen på det meste $\\huge \\frac{n}{2}$ elementer, og dens tre/graf av subproblemene sine størrelse ser meir ut som treet for subproblemer i [[Mergesort]], med dens partionerings tider liknande til merging tidene:\n![](https://cdn.kastatic.org/ka-perseus-images/21cd0d70813845d67fbb11496458214f90ad7cb8.png)\n\nVi bruker [[Big theta]] notasjon og får det samme resultatet som for mergesort $\\theta(n\\times \\log_2(n))$.\n\n## Gjennomsnittleg-case scenario running-time.\nFor å vise at den gjennomsnittlege running timen er òg $\\theta(n\\times \\log_2(n))$ krever det faktisk nokre ganske avansert matematikk så vi går ikkje der. Men vi kan forstå litt betre korleis denne algoritmen sin generelle kjøre tid er dersom vi ser på nokre ulike dømer.\n\nFørst la oss forestille oss at vi ikkje alltid får heilt perfekte balanserte partitionser, vi får til dømes på det verste ein split av $3$ til $1$. Det er betyr den eine siden får $\\frac{3}{4}\\times n$ elementer, og den andre $\\frac{1}{4} \\times n$ elementer. (Vi ignorer pivot pointet her for å holde matte ren, men den gjer at vi ikkje får egentelig ein perfekt 3 til 1 split). Da vil treet av subproblemer og partition tidene se slik ut:\n![](https://cdn.kastatic.org/ka-perseus-images/130b2d2a1fe897253def054f4c3aa7bd94cb6cf2.png)\n\n\nVenstre childen av ein node representerer eit subproblem av størrelse $\\frac{1}{4}$ av forrige, og childen til høgre viser $\\frac{3}{4}$ av forrige. Viss vi følger venstre sidene vil vi raskt minske ned til basecasen av $1$ fordi vi har mykje mindre elementer per iterasjon, mens derimot viss vi følger berre til høgre vil vi mykje saktere komme til basecasen av $1$. Som figuren viser etter $\\log_4(n)$ leveler kjemer vi ned til størrelsen av $1$ viss vi følger til venstre. Det er enklest å forestille seg kvifor $\\log_4(n)$  viss vi starter med $1$ og går opp med $4\\times$ om gangen  til vi når $n$. Så i andre ord spør vi kva verdi av $x$ vi får $4^x=n$, og svaret er jo da sjølvsagt $\\log_4(n)$. Derimot når vi går nedover til høgre kvar iterasjon vil svaret vere $\\log_\\frac{4}{3}(n)$ til vi kommer ned til basecasen av $1$. For å førestille seg kvifor akkurat $\\log_\\frac{4}{3}(n)$ er det lett å tenke at kvart barn er $\\frac{3}{4}$ av den øvre noden sin størrelse, kvar øvre node er  dermed $\\frac{4}{3}$ av barnets størrelse. Viss vi dermed starter med ein basecase av $1$ og multiplserer med $\\frac{4}{3}$ til vi når $n$ så har vi multiplisert $\\log_\\frac{4}{3}(n)$ ganger. \n\nDen verste runningtimen av $\\log_4(n)$ og $\\log_\\frac{4}{3}(n)$ er $\\log_\\frac{4}{3}(n)$ så vi fokuserer berre på er $\\log_\\frac{4}{3}(n)$.For kvart av dei første $\\log_4(n)$ nivåene er det $n$ elementer (inkludert pivotpointer som i realiteten ikkje blir partionet.) og så den totale partition tiden er for kvar av disse nivåene berre $cn$ for ein konstant av $c$.  Og dei siste nivåene har mindre enn $n$ noder og så for kvar av disse levelene er det på det meste $cn$ runningtime. Til sammen er det $\\log_\\frac{4}{3}(n)$ eveler, og så den totale partition tiden er $O(n \\times \\log_\\frac{4}{3}(n))$. \n\nOg det er eit matematisk bevis som nemner at $\\log_a(n)=\\frac{\\log_b(n)}{\\log_b(a)}$., som tyder at vi berre har ein konstant faktor mellom dei ulike tallene og vi kan egentelig berre bestemme kva enn som helst base vi ønsker å ha når vi noterer ned runningtimen. Så vi pleier å bruke $2$ for basen. Dermed er quicksort sin running time $O(\\log_2(n))$, likevel vi faktisk har ein høgere konstant faktor som er høgere enn den beste case running timen.\n\nKor ofte vi burde forvente å see ein split som er $3$ til $1$ eller betre? Det kjemer heilt ann på korleis vi velger våre pivot-points. Viss vi forestiller oss at pivotpintenhar ein like stor sjanse for å lande på kva enn som helst index av ein $n$ elementer liste. Da må vi pivotpointen lande i midten av arrayen for å oppnå ein split som er $3$ til $1$ eller betre.\n![](https://cdn.kastatic.org/ka-perseus-images/a77e296baf334b577328a5f15ab294a652ad6b96.png) \n\nSå viss pivot-pointen har ein like stor sjanse for å lande kor enn som helst i arrayen etter partitioning er det ein $50\\%$ sjanse for at vi får på det verste ein split av $3$ til $1$.\n\nViss vi tar eit anna døme og ser på dømet der vi får ein alternerende split av $3$ til $1$ og den verste case scenario, og vi tenker på ein node i eit tre med $k$ elementer i dens subarray. Da vil treet sjå slik ut:\n![](https://cdn.kastatic.org/ka-perseus-images/1f6a230039af38419453096c58bfd3ab5ac77b0f.png)\n\nI staden for å sjå slik ut:\n![](https://cdn.kastatic.org/ka-perseus-images/656ca0d8ab950299dcc2800e6b2a52cc7ea6ffd5.png)\n\n\nDermed viss vi får den verste case splitten halvparten av tiden og ein split som $3$ til $1$ halvparten av tiden vil runningtimen vere dobbel så stor av det å få ein runningtime av $3$ til $1$ kvar gang. Igjen så er dette berre ein konstant faktor som blir absorbert inn i [[Big O]] notasjonen, dermed er òg running timen i denne scenarioet $O(n\\times \\log_2(n))$.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/R%C3%B8d-bl%C3%A5-forskyvning":{"title":"","content":"# Rød og blå forskyvning.\n\n## [[Dopplereffekten]] for [[EM bølger|Elektromagnetiske bølger]].\nNår stjerner og galakser/ objekter beveger seg i frå/ i mot ein observatør med stor hastighet blir dei [[EM bølger|elektromagnetiske bølgene]] forskyvet i bølgelengde. Dette er nøyaktig likt som med [[Dopplereffekten]]. Når objektet beveger seg raskt i mot observatøren vil bølgelengden av bølgene utgitt i frå objektet bli kortere, likt er det omvendt når det beveger seg raskt i frå observatøren då blir bølgene utgitt i frå objektet lengre. Når det kommer til farger og det synlege lysspekteret, blir altså dei røde fargene blåe når det beveger seg i mot oss/observatøren, og dei blåe fargene blir røde når det beveger seg i frå oss/observatøren. Dei røde fargene går ut av det synlege lysspekteret når objektet/planeten/stjernen beveger i stor hastighet i frå observatøren, då vil bølgelengden gå meir i mot Infrarød stråling som vi ikkje kan sjå. Likt går dei blåe/lilla lysbølgene/elektromagnetiske bølgene ut av det synlege spekteret når strålene utgitt i frå objektet/planeten/stjernen beveger seg i stor hastighet i mot observatøren.\n\n![650](https://www.uio.no/studier/emner/matnat/astro/AST2000/h17/elines-blogg/Planeter%20og%20planetbaner/redshift_blueshift.svg)","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Radioaktiv-str%C3%A5ling":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Rasjonale-eksponenter":{"title":"","content":"# Rasjonale eksponenter.\nEin rasjonal eksponent er ein eksponent som innehalder eit desimaltall/brøk, til dømes: $\\frac{1}{2}$. Det er fleire ulike måter å sjå på rasjonale eksponenter, men vi har nokre grunnleggende regler.\n\n\nDen første regelen er at:\n$b^{\\frac{1}{x}}=\\sqrt[x]{b}$.\n\nOg den andre regelen er at:\n\n$b^{-1}=\\frac{1}{b}$, og videreutviklet, $b^{-x}=\\frac{1}{b^x}$.\n\nNokre dømer:\n$4^3=64,\\space 4^{-3}=\\frac{1}{64}$.\n$2^5=32, \\space 32^{\\frac{1}{5}}=2$.\n\nDisse bevisa kjemer i frå dei [[Eksponent reglene]].\nDette er fordi:\n$a^{b^{\\frac{1}{b}}}= a^{\\frac{b}{b}}=a^1$.\n$32^{\\frac{1}{5}}=2^{5^{\\frac{1}{5}}}=2^\\frac{5}{5}=2^1=2$\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Refleksjon":{"title":"","content":"# Refleksjon","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Rekne-ut-fritt-fall.":{"title":"","content":"# Rekne ut fritt fall.\n\n\nNår vi driver med fritt fall oppgåver trenger vi berre å ta i bruk dei ulike kinematiske formlene for konstant akselerasjon. Dette er fordi vi har berre ein konstant akselerasjon som er sjølvsagt gravitet!\n\nPå jordkloden er graviteten $-9.8\\frac{m}{s^2}$, men denne varierer anngående på kor du er, til dømes viss du er i eit totalt vakum har $0$ gravitet. Viss du er på månen til dømes har ein akselerasjon på $-1.62\\frac{m}{s^2}$. Akselerasjonen blir bestemet av ganske mykje ulikt i følge generell relativitet er dette bestemt av masse, lys, og energi. \n\n\n\n## Plotte eit fritt fall:\n\nVi kan plotte og visualisere eit fritt fall ved å settje det inn i dei tre ulike diagrammene.\n![](https://study.com/cimages/multimages/16/threegraphs.jpg)\n\nHastigheten er ikkje andregrad fordi vi har ein start hastighet som blir påvirket berre av graviteten som betyr at hastigheten vil ha ein negativ rett linje, og akselerasjonen er gravitet som betyr at den er konstant.\n\n## Ta i bruk dei ulike [[Kinematiske formeler - Konstant akselerasjon.]]\n\nNår vi rekner ut eit fritt fall pleier vi å ha den oppover vegen som det positive forteiknet for hastigheten og det motsatte for nedover der den negative forteiknet er brukt.\n\n\u003e[!INFO] \n\u003eI fritt fall er alltid den konstante akselerasjonen $-9.8\\frac{m}{s^2}$, dette sjølvsagt er berre på jordkloden, og når nedover er - i forteikn. Husk at det òg sjølvsagt kan vere ein varierende akselerasjon, dette skjer på grunn av andre faktorer, men gravitet har alltid ein konstant akselerasjon i fysikk.  Viss ikkje oppgåvene viser at det er ein varierende akselerasjon så er det berre å ta i bruk dei ulike kinematiske formlene for konstant akselerasjon.\n\n\nEtter vi har grunnlagt kva som er kva forteikn, kan vi bruke dei kinematiske formlene for å kalkulere dei ulike verdiene vi ønsker å finne.\n\nHer er eit eksempel på korleis vi kan løse ein simpel fritt fall oppgåve:\n+ + = oppover, - = nedover.\n$a=-9.8\\frac{m}{s^2}$\n$V_i=0$\n$\\Delta t = 4s$\n$V_f=?$\n\n$V_f=V_i+a\\times \\Delta t$\n$V_f=0-9.8\\frac{m}{s^2}\\times 4s$\n$V_f=-9.8\\frac{m}{s}\\times 4$\n$V_f=-39.2\\frac{m}{s}$\n\n\n\n\n\u003e[!WARNING] MISTOLKNING\n\u003eMange mistolker at slutthastigheten til eit objekt som treffer bakken er $0$. Men tenk på det momentet den treffer bakken har den ein hastighet, dette er egentelig hastigheten som slutt hastigheten. Når objektet treffer bakken tar det litt tid for all bevegelseenergien går over til jorden under!","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Rekurisve-algoritmer.":{"title":"","content":"# Rekursive algoritmer (Recursive algorithms). \nKva har russiske matroyshka dukker til felles med algoritmer. Likt som disse dukkene blir mindre og mindre til vi har ein liten dukke som ikkje har ein dukke i. seg  så kan ein programmere algoritmer som starrter samme algoritme heilt ein kommer til ein så simpel problem at ein kan berre løyse den direkte. Denne metoden heiter rekursjon.\n\n\nDissa dukkene er creepy! 💀\n![300](https://www.alexandraint.com/images/thumbnails/3300/3300/detailed/31/m309ccc.jpg)\n\nEin kan skrive ein simpel rekursiv algortime slik:\n\n\n```javascript\nvar rekursiv(n){\n\t//Base case\n\tif(noe == true){\n\t\t//Løs problemet direkte\n\t}\n\t//rekuriv case\n\treturn rekursiv(n-1);\n}\n\n```","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Representere-grafer.":{"title":"","content":"# Representere grafer.\nDet er mange ulike måter å representere [[Beskrive grafer.|grafer]] på, kvar som har sine fordeler og kvar som har sine ulemper. Nokre situasjoner er det ein måte å representere ein graf på som passer meir til situasjonen. Dei ulike metodene for å representere grafer har sine eigne memory gjennomsnittleg bruk og ulike struktur i koden.\n\nEin representasjon av ein graf pleier å følge tre ulike kriterier. \nEin kor mykje memory vi trenger for representasjonen. Og vi kan faktisk bruke [[Asymptotic notation.]] for dette! Jepp asymptotic notation kan brukest til å vise meir enn berre runningtimen. Det er virkelig berre ein måte å vise ein karakterisk med ein funksjon. Dei to andre er 1. Tiden det tar for å finne ut om ein edge er i grafen i det heile. Og den 2. andre er kor lang tid det tar å finne neighborsene av ein vertex.\n\nDet er normalt å identifisere vertices ikkje med eit namn eller ein anna verdi, men heller ved å bruke nummere. Altså numeriske verdier. Der settet av vertices ($|V|$) går i frå $0$ til. $|V|-1$. Her er eit døme på ein graf.\n\n![](https://cdn.kastatic.org/ka-perseus-images/21cd2731928c7c13057eee000e3697de82ccc058.png)\n\n## Edge lister.\nEin simpel måte å representere ein graf er ved berre bruke ein liste av $|E|$ edges, dette kaller vi ein edge list. Å representere ein edge har vi berre ein liste av to vertex nummere, eller ein liste av objekter som inneholder vertex nummerene av verticene som edgsene er tilkoblet. Viss edgesene har weights, så smakker vi berre eit ekstra element til listensom inneholder vekten til edgen. Siden kvar edge har berre to eller tre nummere, blir den totale spacen for ein edge list berre $\\theta(E)$. Til dømes kan vi representere ein edge liste i $JavaScript$ for ein graf slik:\n```JavaScript\n[ [0,1], [0,6], [0,8], [1,4], [1,6], [1,9], [2,4], [2,6], [3,4], [3,5],\n[3,8], [4,5], [4,9], [7,8], [7,9] ]\n```\n\nEdge lister er simple, men viss vi vil finne om ein graf inneholder ein spesifikk edge så må vi searche gjennom heile edge listen. Viss edgesene i listen blir fremstilt i ingen spesiell rekkefølge så er det berre ein linear search gjennom $|E|$ edges. Det er teoretisk mogleg å organisere dei slik at tar $O(\\log E)$, men det er litt vanskelig!\n\n## Adjacency matrister.\nFor ein graf med $|V|$ vertices er ein adjecency matrise ein $|V|\\times |V|$ matrise of $0$ er og $1$ ere. Der ein entry i row $i$ og column $j$ er $1$ dersom og berre dersom edge $(i,j)$ er i grafen. Viss du vil indikere ein edge vekt plasser den i row $i$ og column $j$., og ha ein reserve spesiell verdi som til dømes $null$ for å indikere ein manglende edge. Her er ein adjacency matrise:\n![](https://cdn.kastatic.org/ka-perseus-images/549bca1a52774846b25caff86d244d03ee63fd38.png)\nOg i javascript\n```JavaScript\n\n[ [0, 1, 0, 0, 0, 0, 1, 0, 1, 0],\n  [1, 0, 0, 0, 1, 0, 1, 0, 0, 1],\n  [0, 0, 0, 0, 1, 0, 1, 0, 0, 0],\n  [0, 0, 0, 0, 1, 1, 0, 0, 1, 0],\n  [0, 1, 1, 1, 0, 1, 0, 0, 0, 1],\n  [0, 0, 0, 1, 1, 0, 0, 0, 0, 0],\n  [1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n  [1, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n  [0, 1, 0, 0, 1, 0, 0, 1, 0, 0] ]\n\n```\n\nMed ein adjacency matrise, kan vi finne ut om ein edge er til staden i konstant tid, berre ved å searche opp den correspondende entry-en i matrisen. Til dømes dersom vi har ein adjacency matrise kalt \"graf\" kan vi finne ut som om edge ($i,j$) er i grafen ved å searcha opp $graf[i][j]$. \n\nDet er nokre ulemper med adjacency matrise. Den første er at den tar $\\theta(V^2)$ memory, til og med viss grafen har svært få edges. Dette er fordi dei allerfleste verdiene i matrisen vil ha ein verdi av $0$, og vi bruker ganske mykje memory for disse ekstra $0$ene som bidrar ingen viktig shit. tbh 🤮 shrek dick sucking 🐿. Ahrem for det andre viss du vil fine ut kva for nokre vertices som er adjcent til den gitte vertex $i$ så må du sjekke alle $|v|$ innføringer i rad $i$ til òg med viss det er ganske få vertcies som er adjcent til vertex $i$.\n\nFor ein undirected graf er adjcency matrisen symmetrisk, rad $i$ og kolonne $j$ innføring er $1$ dersom og berre dersom rad $j$ og kollone $i$ er $1$. For ein directed graf trenger ikkje adjacency matrisen å vere symmetrisk.\n\n## Adjaceny lister 🥰🥰🥰🥰🥰 😈🫦.\nÅ representere ein graf med ein adjaceny liste kombinerer adjacency matriser med edge lister. For kvar vertex $i$, lagre ein liste av verties tilbkoblet til den. Vi har normalt ein liste av $|V|$ adjcency lister, kvar adjcency list per vertex. Litt confusing, men simpelt sagt ein liste over alle vertices i ein graf, og kvart element i denne listen inneholder ein liste av alle vertices denne noden er koblet til.\nHer er ei visualsiering:\n![](https://cdn.kastatic.org/ka-perseus-images/cc82379521bd84738e86d6cf9552738ca9138420.png)\n\nSlik kan ein slik liste sjå ut i javascript.\n```javascript\n\n[ [1, 6, 8],\n  [0, 4, 6, 9],\n  [4, 6],\n  [4, 5, 8],\n  [1, 2, 3, 5, 9],\n  [3, 4],\n  [0, 1, 2],\n  [8, 9],\n  [0, 3, 7],\n  [1, 4, 7] ]\n\n```\n\nAdjacency lister er ikkje nødvendig at skal visest i noko spesiell rekkefølge men det ofte lurt å liste dei i økende størrelse som i døme over.\n\nVi kan finne kvar vertex sin adjacency liste i konstant tid fordi vi trenger berre å index inn i ein liste. For å finne ut om ein dege($i,j$) er i listen trenger vi berre å gå til $i$ sin adjacency liste og så søke for $j$ i $i's$ liste. Dette vil ha den verste case runningtimen av å finne ein edge ved $\\theta(d)$, der $d$ er mengden vertices tilkoblet til vertex $i$. Denne mengden kan på det verste vere så høg som $|V|-1$, viss alle er tilkbolet til $i$ altså. eller så lavt som $0$ dersom $i$ er ikkje tilkoblet nokon vertices. I ein undirected graf er vertex $j$ i vertex $i$ sin adjacency list berre viss i $i$ er òg i $j$ sin adjacency liste. Basically begge vertecisene må vite at dei er tilkoblet til kvarandre. Dersom dei ikkje er tilkoblet på begge, kan den vere directed. Viss ein graf er weighted så inneholder kvar adjacency liste to verdier for kvart vertex, ein for kva for noko vertex den er tilkoblet og weighten mellom dei.\n\nDu kan bruke for loops til å finne alle vertices ein vertex er tilkoblet slik:\n```JavaScript\nvar i = 5; //Tallet viser kva for ein vertex i grafen det er prat om.\nfor(var j = 0; j \u003c graph[i].length;j++){//Gå til alle vertices til vertex i\n\tgjerNoko(graf[i][j]); //gjerNoko med kvar vertex tilkoblet vertex i.\n}\n```\n\nKor mykje plass ein adjacency liste tar, varierer litt om først den er undirected eller directed. Og om kvar vertex inneholder ein anna vertex. Nokon inneholder jo nesten alle, og nokre inneholder nesten ingen.\nI ein adjacency liste for ein undirected graf inneholder den $2|E|$ elementer, fordi den inneholder 2 edges per vertex som er koblet til i listen. Og viss den er directed så er det $|E|$. Eit element per directed edge.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Resonans":{"title":"","content":"","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Selection-sort.":{"title":"","content":"# Selection sort.\n\nSelection sort fungerer ved å ta å finne den laveste verdien sitte den på første plass så finne andt laveste verdi og sette den på andre plass… …… heilt til arrayen er heilt sortert. \n\n## Psuedocode.\n1. Finn laveste verdi element, swap med første element.\n2. Finn nest laveste verdi element, swap med andre element.\n3. Finn tredje laveste verdi element, swap med tredje element.\n4. …\n5. …\n6. Repiter til arrayen er sortert, arrayen er sortert når ein skal swappe med samme indexer.\n\nVisualisering av selection sort:\n![](https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif?20110419160033)\n### Finne den neste laveste verdien.\nEin av stegene i selection sort er. å finne den neste laveste verdi element og plassere den på rette plassen.\nTil dømes i arrayen [13,14,18,4] er den laveste verdien 4 med index 3. I selection sort setter vi den på index 0. Det neste hadde vore å finne nest laveste å sette den på index 1\n\nÅ finne indexen til neste laveste verdien kan vere litt forvirrende, men det einaste vi trenger å gjere er å finne den laveste verdien i ein subarray som starter på den siste sorterte plasserte plass, altså index+1 $\\rightarrow$ til slutten.\nTil dømes etter bytte index 0 og 3 på listen over så trenger ein berre å finne laveste verdien mellom index 1 og slutten avlisten, og bytte den laveste verdien med index 1. Så repiter!\n\n## Analyse av selection sort.\nSelection sort loope over alle elementer i ein array. Selection sort kaller til indexAvMinimum funksjonen (den som vi forklarte ovenfor) og [[Sortering|swap metoden]]. Ein kan tru at kanskje time complexity er $2n$ i running time fordi to funksjoner blir kalt, men det er ganske feil. Dette er feil fordi funksjonene har kode sjølv. indexAvMinimum funksjonen har òg ein for loop basert på $n$, og evt. ein mindre versjon av $n$. I selection sort med ein array på 8 ganger og blir indexAvminimum tilkalt 8 ganger, mengden totalt tilkalte har ein verdi på $1+2+3+4+5+6+7+8=36$ tilkallinger. $36\\ne2\\times8$. \n$36$ iterations blir av innholdet til indexAvMinmum blir utført.\n\n\u003e[!Info] Sidenotat.\n\u003eFor å finne antall tilkallinger av innholdet til indexAvMinimum barre $\\Sigma_{x=0}^{n}(n)$, adder alle tall opp til $n$.  Evt adder dei manglende tallene som ikkje lager eit par. Formel av alle tall i mellom 1 og n er det samme som $(n+1)(\\frac{n}{2})$.\n\n# Asymptotic analysis av selection sort.\n\n\nVi trenger 3 deler til den totale running timen av selection sort.\n1. Running timen av alle callsene til indexAvMinimum.\n2. Running time for alle calls til swap.\n3. Running time til rest av loopen i selection sort.\n\ndel 2 og 3 er lette. Det er $n$ tilkallinger til swap, og alle tar konstant tid dermed $\\theta(n)$. Likt blir resten av selectionsort kallet $n$ ganger dermed $\\theta(n)$. For del 1 har vi allereie gjort den vanskelege delen. Det viktigaste vi trenger å vite er at vi tillkaller indexAvMinimum $n$ ganger og indexAvMinimum går igjennom alle verdiene av $n$. Så den versten tiden vi får av berre tilkallingen av indexAvMinimum er dermed $\\theta(n^2)$., fordi vi kaller indexAvMinimum $n$ ganger, og den går igjennom $n$ elementer ($n\\times n= n^2$).Av swap og alle andre deler av selection sort så er den verste runningtimen $\\theta(n^2)$ så selection sort sin running time er $\\theta(n^2)$.\n\n[[Big theta]]","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sentripetal-akselerasjon.":{"title":"","content":"# Sentripetal akselerasjon.\nNår vi driver med [[Vinklet bevegelse + Vinklet kinematiske formeler.|vinklet bevegelse]] så ofte tenker man ikkje over akselerasjonen, men når ein virkelig tenker på det, så er det jo ein akselerasjon, korleis ellers kan vi få rotasjonen!\n\n\n\u003e[!INFO] Post scriptum.\n\u003eSI enheten for sentripetal akselerasjon er sjølvsagt $\\frac{m}{s^2}$ når vi tenker på vi driver med meter og sekunder!\n\n\n\n\n## Kva er sentripetal akselerasjon / kvifor har vi det.\nTenk på nokre racerbiler som kjører rundt ein sving, når dei kjører rundt svingen så har ein forandring i deirast [[Vektorer, to dimesjoner.#Vektor komponenter|vektor komponenter]]. Dei starter kanskje med å kjøre direkte til høgre men svinger oppover til å gå direkte opp. Dette dermed betyr at vi har ein akselerasjon i den oppover vektor komponenten, og ein retardasjon/negativ akselerasjon i høgre vektor komponenten. Dette betyr altså at vi har ein akselerasjon som går innover i svingen. \nLa meg visualisere:\n![[Sentripetal akselerasjon. 2022-07-25 18.49.03.excalidraw|750]]\n\n## Den sentripetale akselerasjon formelen.\nVi har ein formel for å finne ut kva den sentripetal akselerasjonen er dersom vi har ein konstant hastighet!\n\n(Berre størrelse ikkje retning, fordi den er jo alltid bevegende).\n\nDenne akselerasjonen er som følgende:\n$A_{sentripetal}=\\frac{V^2}{r}$. Der $r$ er radius på sirkelen, og $V$ er den konstante hastigheten på som vi finner ved å stå på ytterkanten av sirkelen.\n\n### Bevisning for den sentripetale akselerasjons formelen.\n\nVi kan vise ein konstant hastighet som har ein sentripetale akselerasjon som går rundt ein sirkel slik:\n![[Sentripetal akselerasjon. 2022-07-25 19.08.01.excalidraw]]\nFarten er lik fordi det er ingen forandring i hastigheten over tid, dersom vi hadde hatt ein akselerasjon på dei ulike hastigheten, som ikkje er pga. sentripetal akselerasjon, hadde det vore vanskelig å kalkulere den sentripetale akselerasjonen utan å vite den andre akselerasjonen.\n\nVi kan òg vise frem dei sentripetale akselerasjonene til disse hastighetene i ein lik graf.\n![[Sentripetal akselerasjon. 2022-07-25 19.13.20.excalidraw]]\n\n\nVi kan rekne ut dei to ulike sirklene sine arealer/kvart arealer, sjekke deirast perioder, og sjå at det er ein samanheng mellom hastighetene ved ytterkantene og akselerasjonen sin størrelse.\n\nVi rekner ut hastigheten sin kvartsirkel areal.\n$\\frac{1}{4}\\times 2\\pi r=areal$\n\nVi rekner ut hastigheten sin kvartsirkel areal periode (tiden det tar å dekke så mykje areal).\n$\\huge \\frac{\\frac{1}{4}\\times 2\\pi r}{||V||}=T_{hastighet}$\n\nVi rekner ut akselerasjonen sin kvartsirkel areal.\n$\\frac{1}{4}\\times 2\\pi V$\n\nVi rekner ut akselerasjonen sin kvartsirkel periode.\n$\\huge \\frac{\\frac{1}{4}\\times 2\\pi V}{||A_{sentripetal}||}=T_{sentripetal akselerasjon}$.\n\n\u003e[!INFO] Husk.\n\u003eHusk at i vårt døme her, der det er ingen ekstra akselerasjon utanom sentripetal akselerasjon så er det berre sentripetal akselerasjon som vell akselerasjonen.\n\nViss vi settjer disse lik kvarandre kan vi løyse for den sentripetale akslerasjonen.\n$\\frac{\\frac{1}{4}\\times 2\\pi r}{||V||}=\\frac{\\frac{1}{4}\\times 2\\pi ||V||}{||A_{sentripetal}||}$\n$\\rightarrow \\frac{r}{||V||}=\\frac{||V||}{||A_{sentripetal}||}$\n$\\huge \\rightarrow ||A_{sentripetal}||=\\frac{||V^2||}{r}$\n\n\n\n## Den sentripetal akselerasjonen gjennom [[Vinklet bevegelse + Vinklet kinematiske formeler.|vinklet hastighet]].\nVi veit frå det over at $||A_{sentripetal}||=\\frac{||V^2||}{r}$\n\nOg vi veit at $V=\\omega \\times r$\nSå vi kan finne ein formel for sentripetal akselerasjon i frå å bruke vår formel med linær hastighet ved å skifte ut nokre symboler.\n$||A_{sentripetal}||=\\frac{||V^2||}{r}$\n$||A_{sentripetal}||=\\frac{||(\\omega \\times r)(\\omega \\times r)||}{r}$\n$||A_{sentripetal}|| = \\frac{||\\omega ^2 \\times r^2||}{r}$\n$||A_{sentripetal}||=\\omega ^2 \\times 4$.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sentripetale-krefter.":{"title":"","content":"# Sentripetale krefter.\nI følge [[Newtons første lov - masse og treghet]] kan ikkje vi har [[Sentripetal akselerasjon.]] dersom vi ikkje har ein kreft som drar objektet innover. Husk newtons første lov sier at eit objekt vil halde sin veg dersom det ikkje er ein anna kraft som påverkar den, derfor må vi har ein kraft som drar objektet innover i ein sirkulær mosjon ellers vil den berre fly forevig videre.\n\nDerfor har vi noko som heiter *sentripetale krefter*, les litt om [[Sentripetal akselerasjon.]] for å forstå dette litt meir.\n\n\u003e[!INFO] N.B\n\u003eSentripetal kraft er **ikkje** ein type kraft. Det er eit begrep for nettokraften av alle krefter som peiker innover. Dette betyr dermed at sentripetal kraft er berre eit begrep for andre krefter summert, som spenning.\n\n\n\n## Formelen.\nVi kan berre ta ein liten titt på [[Newtons andre lov, vekt]] for å finne ut kva den den sentripetale kreft formelen er. Fordi vi allereie har ein formel for akselerasjon så kan vi lett finne ut kva kraften er.\n\nFormelen er som følgende:\n$F_s=m\\times a_s$.\nDer $a_s$ er den sentripetale akselerasjonen.\n\nVi kan òg omskrive dette slik:\n$F_s = m\\times \\frac{V^2}{r}$\n$F_s=m\\times \\omega ^2 \\times r$\n\n## Dømer på sentripetale krefter.\nForestill deg at du halder har ein ball knyttet til eit tau og du spinner dette over hovudet ditt. Du forventar at den kommer til å gå i sirkulær struktur, men kvifor?\nDette er fordi vi har ein sentripetal kreft til staden som halder den innover. Tauet er nemleg den som skaper den sentripetale kraften, du halder tauet tilbake med å bruke litt krefter i frå handen din, du altså motvirker ballens ønske for å fyke videre ved å skape ein sentripetal kraft med tauet ditt. Basically du halder tauet i ro, tauet skaper ein sentripetal kraft.\n\n![[Sentripetale krefter. 2022-07-26 19.10.46.excalidraw|600]]\n\n\nHer er eit meir betre døme:\n![[Sentripetale krefter. 2022-07-26 19.28.36.excalidraw|1000]]\n\nHer har vi ein ball som svinger frå eit tau festet til iein krok i eit tak, vi kan sjå at den normale kraften som motvirker graviteten er den som er skapt av tauets $y$ komponent. \nMen meir interessant er at den sentripetale kraften er det samme som tauets $x$ komponent innover. \n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Simplisifesere-r%C3%B8tter-av-negative-tall":{"title":"","content":"# Simplisifesere røtter av negative tall.\n\n## Korleis gjere dette?\nVed å ta i bruk [[Imaginære tall]] kan vi simplisifisere røtter av negative tall. \nDette går ann ved å skrive det om til $\\sqrt{-1}\\times \\sqrt{noko}$ i frå $\\sqrt{-noko}$ då $\\sqrt{-1}$ er det imaginære tallet for $\\sqrt{-1}$, altså $i^2 = -1$. Ved å skrive det om slik trenger vi berre å finne kvadratroten av det positive tallet under den originale kvadraroten, og så sygange det med $i$. \n\nEksempel:\n$\\sqrt{-25}$\n$\\rightarrow \\sqrt{-1}\\times \\sqrt{25}$\n$\\rightarrow i \\times 5$\n$\\rightarrow 5i$\n\n### Viss det ikkje er ein kvadratrot som går opp fint.\nViss det positive kvadratroten ikkje går opp fint har vi nokre metoder for å få det til å bli ein fin verdi.\n\nVi kan dele den kvadratroten med ein positiv verdi inn faktorer, der ein av faktorene går opp i ein kvadratrot. Deretter rekner vi denne ut, og den andre lar vi stå som ein irrasjonel kvadratrot. Vi etter det ganger ut kvadratroten som innehalder $-1$ til å bli $i$, og slik har vi fått svaret.\n\nEksempel:\n$\\sqrt{-20} = \\sqrt{-1}\\times\\sqrt{20}$\n$\\rightarrow \\sqrt{-20} = \\sqrt{-1}\\times\\sqrt{4}\\times \\sqrt{5}$\n$\\rightarrow \\sqrt{-20} = i\\times2\\times\\sqrt{5}$\n$\\rightarrow \\sqrt{-20}=2i\\sqrt{5}$ (Kan også skrivet $i2\\sqrt{5}$, this just preference).","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sinus":{"title":"","content":"# Sinus\nSinus er ein av dei tre ulike hovud trigonometriske funksjonene vi har.\nSinus er ein ganske simpel formel, den er simpelt sagt berre $\\frac{motståendekatet}{hypotenus}$.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sinus-setningen":{"title":"","content":"# Sinus setningen.\n\n\n## Kva det er.\nSinussetningen er ein av dei viktige trigonometriske setningene:\nden er som følgende:\n\n$\\frac{a}{sin(A)}=\\frac{b}{sin(b)}=\\frac{c}{sin(C)}$, der små bokstavene er dei motstående katene sine lengder, og dei store bokstavene er vinkelene til dei som har dei små bokstavene som motstående katet.\n\nDette betyr òg at den følgende setningen er heilt korrekt òg:\n$\\frac{sin(A)}{a}=\\frac{sin(B)}{b}=\\frac{sin(C)}{c}$.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sinusformet-funksjoner-Sinusoidal-functions":{"title":"","content":"# Sinusformet funksjoner (Sinusoidal functions).\n\n\n# Kva dei er\nSinusformet funskjoner er funksjoner som liknar på ein av dei to trigonometriske funksjonene : sinus og cosinus.\nVi kan altså dermed lage ein funksjon som er lik til denne grafen ved å ta i bruk disse to funksjonene.\n\nEit døme på ein sinusformet funksjon:\n![](https://mathbooks.unl.edu/PreCalculus/images/imagesChap14/negsinGraph.png)\n\n\n# Amplitude\n## Kva det er\nAmplituden til ein sinusformet graf er kor langt ekstremalpunkta til grafen er i frå likevektslinjen, det tyder altså i andre kor mykje den trigonometriske funksjonen blir multiplisert med.\n\nEit døme på ein ampltiude i ein likning er som følgende:\n$f(x)=5\\times \\sin(x)$.\nHer er amplituden 5. Den går i andre ord 5 enheter på y aksen i frå likevektslinjen.\n\n\n## Rekne ut amplitude frå likning.\n\nViss vi har botnpunktet og topppunktet henholdsvis: (5,-1) og (6,1). \nDa kan vi rekne ut amplituden ved å addere den absolutte verdien av forskjellen på y aksene, og så dele på 2.\nTil dømes, viss vi har eit botnpunkt (5,-1) og eit anna topppunkt (6,1). Så kan vi finne amplituden slik\n$\\frac{2}{2}=1$, den absolutte verdien av distansen mellom dei ulike ekstremalpunkta er 2, og sådeler vi på 2.\n\n# Midline (Likevektslinje)\n## Kva det er\nMidlinen eller som det heiter på norsk likevetkslinjen er det y verdien der den sinusformet grafen reflekterest. Vi kan tenke på dette som posisjonen heile grafen er forskyvet på y aksen med. \nHer er eit bilete som viser likevektslinjen.\n![](https://cdn.kastatic.org/googleusercontent/e-KuFPdzsUaDF39JIYWxVHbEdW2bNT7xWhTHM5wj7RxLPGIMhHMs39JaTee_MOZLqOJUu1jbIubqjSP1owDmGnw)\n## Rekne ut midline (Likevektslinje) frå likning.\nFor å rekna ut midlinen kan vi faktisk ta i bruk amplituden. Som vi nemnte i amplitude så er amplituden det samme som distansen frå eit av ekstremalpunkta til likevektslinjen. Det går sjølvsagt å bruke ann å bruke andre metoder, men denne føler eg gir mest mening og er finest.\n* Viss vi har eit botnpunkt så adderer vi amplituden og får likevektslinjen sin y verdi.\n* Viss vi har eit topppunkt så subtraherer vi amplituden og får likevektslinjen sin y verdi.\n\nTil dømes: vi har amplituden 5 og topppunkt (5,5). \n$\\text{topppunktet sin y verdi}-\\text{amplituden}= 5-5 = 0$.\nLikevektslinjen sin y verdi er 0.\n\n\n# Periode.\n## Kva det er.\nEin periode er $x$ verdiene det tar for å komme seg tilbake til det originale startpunktet på [[The unit circle|enhetssirkelen.]] Normalt er altså perioden $2\\pi$. Men denne kan variere frå graf til graf, og det er her vekstfaktoren til ein graf komme inn i tanke, men det snakker vi om litt seinare. \n\nEin kan tru at perioden er egentelig berre $\\pi$ fordi ein får nøyaktig samme y verdi når vi driver med sinus fordi det har samme y verdi, og likt med cosinus kvar $\\pi$ etter $\\frac{\\pi}{2}$, men tenk på det har vi kommet tilbake til samme punkt på enhetssirkelen, nei! Vi har komt til ein som har samme verdi, men er ikkje på samme punkt. Dette er òg noko som vi leggjer merke til når vi ser på grafen, det er samme y verdi, men vi går i den nøyaktig omvendte retningen som tyder til at vi ikkje har kommet tilbake til det samme punktet på enhetssirkelen.\n\nHer er eit bilete som betre visualiserer perioden: (Berre fokuser på perioden. Peak to peak amplitude er ikkje noko vi faktisk pleier å bruke! Når vi snakker om amplitude er det berre peak amplitude vi snakker om.)\n![](https://www.desolutions.com/blog/wp-content/uploads/2013/04/Vib4-13Fig-1.jpg)\n# Phase-shift.\nPhase shifting er kanskje det mest irriterande/kompliserte med sinusformet grafer. Av og til er grafer ikkje der dei normalt pleier å starte. Av og til kan sinusformet grafer faktisk starter på heilt uforventa punkter til dømes starter kanskje ein cosinusfunksjon der ein sinusfunksjon pleier å starter. Dette er unormalt for cosinusfunksjoner!\nDette er fordi vi har ein konstant faktor som forandrar verdien til $x$ inni den trigonometriske funksjonen, som gjer at når vi har $x=0$ så har vi faktisk ein anna verdi inni den trigonometriske funksjonen!\nEin negativ phase-shift drar grafen til høgre, og ein positiv ein drar den til venstre. \nHer er eit døme:\n$\\sin (x-\\frac{\\pi}{2})$, sinus funksjonen pleier å starte ved 0, men her starter den faktisk med $\\frac{\\pi}{2}$ fordi vi har phase-shifted den. \nDette betyr at når $x=0$ så har vi faktisk ein negativ verdi inni sinusfunksjonen på $\\frac{-\\pi}{2}$ som gir tallet $-1$ som ikkje er det sinus funksjonen pleier å starte med!\n\nHer er ein illustrering av ein phase-shifted graf:\nSom vi kan sjå er den forskyvet $\\frac{\\pi}{4}$ til venstre.\n\n![](https://www.onlinemath4all.com/images/phaseshiftintriggraph.png)\n\n# Growth factor. (Vekstfaktor).\nSom nemnt tidligere har ofte ein sinusformet graf ein periode som ikkje er på den normale $2\\pi$ dette er fordi inni den trigonometriske funksjonen er den vekstfaktor som blir multiplisert med alt og gjer at grafen går raskere med verdien av faktoren.\n\nEit døme på ein vekstfaktor:\n$\\sin (2x)$. \nDenne sinus funksjonen nå går plutseleg dobbelt så raskt i periode fordi den blir multiplisert inni grafen, det er blitt kortere i bølgelengde/periode.\n\nDette kan bli kombinert med til dømes ein phase-shift då vil det så nokelunde likt som:\n$sin(a(x+b))$\nkan òg for så vidt vere cos, men eg brukte berre sin i eksempelet.\nHer er $a$ vekstfaktoren, og $b$ phase-shiften.\n\nViss vekstfaktoren er lavere enn 1, vil grafen ha ein lengre periode enn det normale.\n\n\nDei tidlegare nemnte eksempela har ein verdi som alltid vil ha sine ekstremalpunkt ved noko $\\pi$ verdi, enheten på $x$ aksen er altså fortsatt $\\pi$.\nMen nokon ganger vil vi ikkje ha $\\pi$ som enheten, av og til vil vi reine tall som til dømes: 1 eller 2.\n\nDa må vi sikkre at vi har perioden $2\\pi$ som ein del av vekstfaktoren.\nViss vi vil ha ein periode på nøyaktig ein så må vekstfaktoren vere 1 fordi då etter 1x, har vi gått ein heil periode på $2\\pi$. \nLikt kan vi òg ha ein ny periode som ikkje har enhet av $\\pi$ heller, ved ha ein vekstfaktor som er å dele $2\\pi$ på $\\textit{den ønsker perioden}$. Slik $\\frac{2\\pi}{\\textit{ønsket periode}}$.\n\nDette vil fungere fordi etter vår ønsket periode vil vi da ha gått nøyaktig $2\\pi$ i lengde.\n\nEit døme på ein sinusformet graf med periode av 3 ser slik ut:\n$cos(\\frac{2\\pi}{3}(x+b))$. Der $b$ er phase-shiften (kan òg vere $0$).\n\n# Å modellere ein sinusfunksjon frå nokre punkter.\n\n\nEtter alt vi har gått igjennom i dette bilete så kan vi prøve å modellere ein sinusgraf i frå berre nokre par punkter.\nAlt vi trenger er eit av ekstremalpunkta og likevektslinjen, eller begge ekstremalpunkta. Begge punkta må vere ved siden av kvarandre!\n\n1. Vi finner amplituden\n2. Vi finner likevektslinjen.\n3. Vi finner vekstfaktoren.\n4. Vi finner phase-shiften.\n5. Vi settjer alt sammen til ein funksjon.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Skala-av-celler.":{"title":"","content":"# Skala av celler.\n\n[[Introduksjon til cellen.|Celler]] er svært små, sånn skikkelig små, la oss sjå på nokre molekyl og så nokre celler for å sjå korleis dei varierer og korleis dei generelle relativitetene er.\n\n1. $H_2O$ molekyl er $0.275Nanometer$ = $0.257\\frac{1}{billion}meter$ = $0.257\\frac{1}{million}millimeter$.\n2. Hemoglobin er $5Nanometer$\n3. Virus (HIV) er $120Nanometer$.\n4. Raud blodcelle er $6 \\rightarrow 8 Mikrometer$ = $6 \\rightarrow 8 \\frac{1}{million}meter$\n\t1. Ein raud blodcelle har omtrent plass til $280 millioner$ Hemoglobin molekyler.\n\nCeller er faktisk svært store i forhald til atomer og til dømes proteiner.\nOg ikkje minst er dei svært komplekse.\n\n\nHer er eit bilete av nokre celler:\n\n![500](https://s-media-cache-ak0.pinimg.com/originals/77/4b/09/774b098dd3e9eec4884701d97c93d47b.jpg)\n\n\n[[Mikroskopi]]\n\n\n\n## Cellestørrelse, vatn, og maksimum.\nOfte pleier celler å ha ein generell størrelse på [[Introduksjon til eukaryote celler.#Størrelse på eukaryote celler|10 til 100 mikrometer for eukaryote]] og [[Prokaryote celler.#Prokaryote celle størrelse|0.5 til 5 mikrometer for prokaryote]]. \nMen av og til er det unntak til disse reglene.\nTil dømes:\nDen eincellede sjøgress planten \"Caulerpa\". Cellene her i vatnet, eincellede altså, må være relativt smale uansett om dei er eukaryote eller prokaryote. Når celler blir større så blir det vanskelegare for dei å utveklse nok stoff og avfallsstoff med naturen. For å sjå på korleis dette fungerer sjå på overflate-areal til volumskalaen. La oss si at vi har ein celle som er formet som ein kube. Nokre planteceller er faktisk kubeformet så dette er ikkje altfor far-fetched. Viss den eine sidelengden er $L$ i lengde. Da vil overflaten av cellen være $6L^2$, og volumet $L^3$ . Når $L$ blir større vil arealet auke enormt raskt, men volumet vil vokse enda raskare!\n\nDermed når cellen blir større vil overflate arealet til volum forholdet droppe. Til dømes:\nEincelle med sidelengde $L=1mm$ har eit volum av $1mm^3$, og ein overflate areal av $6mm^2$. Overflate areal til volum forhold av 6 til 1.\n\nMens derimot ein sidelengde av $L=2$ vil ha eit volum av $8mm^3$, og overflate areal av $24mm^2$ som nå har fått eit lavere forhold av 3 til 1. Denne trenden vil fortsette raskt vil volumet vere mykje større enn arealet. \n\nFrorholdet i mellom overflate arealet og volumet er meir viktig fordi plasmamembranen er cellens grensesnitt med miljøet, viss cellen tar/skal ta opp næringstoff så må den gjere det igjennom plasmamembranen og viss den skal bli kvitt avfallsstoff så må den gjere det igjennom plasmamembranen. \nKvar del av plasmamembranen kan berre ta opp/bli kvitt med så så mykje stoff om gangen (i løpet av ein tidsperiode). Viss cellen blir altfor stor så kan ikkje cellen ta inn/bli kvitt med mengden cellen trenger raskt nok for sine metaboliske aktiviteter. Altfor liten membran for innholdet av cellen = not good.\n\nOverflate-areal til volum er berre eit av problema som i frå å ha ein atlfor stor celle. Til dømes: når cellen blir større bil det ta lengre tid for materialene å bli transportert omrking på innsiden. Disse problemene settjer ein slags maksimum på cellestørrelsen. Eukaryote celler er ofte større enn prokaryote fordi eukaryote celler har meir struktur og metabolisk aktivitet. Nokre celler bruker geometriske triks for å få eit høgere overflate-areal til volum forhold.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Skalarar":{"title":"","content":"# Skalar\n\n# Kva er ein skalar.\n\nEin skalar er ein størrelse/verdi som **ikkje** har ein retning. Dei er ganske like som [[Vektorer]] på denne måten, men forskjellen er skalarer ikkje har ein retning slik som vektorer har.\n\nNotasjon:\nSkalarar har ingen spesiell notasjon, ikkje noko som gjer den spesiell.\n\nTil dømes fart er ein skalar.\n5 meter per sekund er ein skalar, fordi det forteljar ingenting om retning.\n\n![](https://cdn.kastatic.org/ka-youtube-converted/ihNZlp7iUHE.mp4/ihNZlp7iUHE.png)\n\nSkalar til høgre.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Skalering-av-funksjoner.":{"title":"","content":"# Skalering av funksjoner.\n[[Forksyvning og refleksjon av funksjoner.]] [[Odd og even polynomer]] [[Polynom grafer]] [[Polynom terminologi]]\n\nEin skalering av ein funksjon tyder at vi har ein heilt lik funksjon men den har ein koeffisient eit sted som forandrer heile funksjonen, men den halder formen lik.  Vi har hovudsakeleg to ulike former for skalering, den eine skalerer berre aukingen og minsking-ratene i funksjonen, mens nokre skalerer heile grafen. \n\n\n## Grunnleggjene første skalerings metode - Vertikal skalering.\nVi settjer ein koeffisient forann heile funksjonen.\nViss vi skal skalerere heile funksjonen vil det se slik ut:\n$f(x)=x^2+1$, $g(x)=\\frac{1}{2}f(x)$\n```desmos-graph\ny=x^2+1\ny=1/2(x^2+1)\n```\n\nDen blåe er den originale den har ein konstant faktor av 1 som tyder at ved $x=0$ er det ein verdi av $1$. Derimot har den grønne ein koeffisient foran heile uttrykket av $\\frac{1}{2}$, dette tyder til at den først av alt auker halvparten så raskt, men og at konstantleddet blir halvert. \nVi kan på denne måten tenke at vi skalerer funksjonen vertikalt, fordi vi òg forandrer på konstantleddet.\n\n## Grunnleggjene andre skalerings metode - Horisontal skalering.\nVi settjer ein koeffisient forann variabel inputten.\nDen andre metoden er meir simpel og forandrer berre på ein del av funksjonen og det er detn horisontale skaleringen. For å oppnå dette settjer vi berre ein koeffisent forann alle $x$ verdiene, dette skalerer bredden og derav posisjonen i funksjonen. På denne måten kan vi tenke at vi skalerer grafen horisontalt.\n$f(x)=x^2+1$, $g(x)=f(\\frac{1}{2}x)$\n```desmos-graph\nf(x)=x^2+1\ng(x)=f(1/2x)\n```\nSom vi kan sjå har dei begge ein heilt lik konstantledd verdi av $1$ då begge er $1$ ved $x=0$, men vi kan sjå at den grønne (g(x)) auker halvparten så raskt enn den originale (f(x)).\n\nSlik kan vi skalere ein funksjon på to ulike måter.\n\n\nHer er nokre dømer:\n$f(x)=x^2-2$, $g(x)=2\\times f(x)$ , $h(x)=f(2\\times x)$\n```desmos-graph\nleft=-3;\nright=3;\n---\nf(x)=x^2-2\ng(x)=2*f(x)\nh(x)=f(2*x)\n```\n\nDen originale er den blåe $f(x)=x^2-2$\nDen skalerte som omformet heile grafen ikkje berre stigningen er den grønne $g(x)=2\\times f(x)$\nDen lilla er den som har ein koeffisient forann alle $x$ verdiene $h(x)=f(2\\times x)$.\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Snorkraft":{"title":"","content":"# Snorkraft\nEin snorkraft oppstår når to gjenstander er festet til kvarandre med ein stam snor som iv antar er masselaus. Snorkraftens størrelse er til kvar tid den samme i begge ender. Dette er grunnen til at vi kan dra ting med tau. Vi ofte skriv kraften til snorkraften som $\\vec{S}$ eller $\\vec{F_{snorkraft}}$\n\n\n\n\u003e[!WARNING] Ignorer massen til snoren\n\u003eVi pleier å ignorere massen til tauet fordi den er som regel så liten i forhald til andre masser i systemet.\n\n\n\nDøme:\n\n\n![[Snorkraft 2022-10-18 10.07.11.excalidraw]]\n\nSnorkraften vil alltid jobber frå begge endene av snorkraften i samme [[Skalarar|størrelser]] men i motsatt [[Vektorer|retning]].","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sohcahtoa":{"title":"","content":"# SOHCAHTOA.\n\n## Kva er SohCahToa?\n\n\"SohCahToa\" er ein simpel engelsk huskeregel på dei trigonometriske funskjonene, ved dei [[Ulike sider i ein trekant.|ulike sidene i ein trekant]].\nI motsetning til det mange kanskje trur så betyr det **ikkje** \"Sex on hard concrete always hurts, try other alternatives.\".\n\nSohCahToa forklarer dei ulike funksjonene sine forhold i dei tre ulike gruppene i ordet, den første bokstaven i gruppen forklarer kva for ein funksjon der er snakk, om, og dei to neste forklarer brøken, der den første er telleren, og den siste er nemneren. Dei ulike bokstavene forklarer dei ulike sidene, og funksjonene.\n1. s = sinus\n2. c = cosine / cosinus\n3. t = tangent / tangens\n4. o = opposite side / motstående katet\n5. h = hypotenuse / hypotenus\n6. a = adjacent side / hosliggende katet\n\n\u003e[!info] \"/\" betyr ikkje deling her, men viser skillen mellom det engelske namnet og det norske namnet.\n\n## Regelen.\n\nSohCahToa forklarer dei ulike forholda til dei tre mest brukte funksjonene:\n1. Soh betyr: $\\large Sinus = \\frac{opposite/motstående\\space katet}{hypotenuse/hypotenus}$\n\n2. Cas betyr: $\\large Cosine/Cosinus = \\frac{adjacent/hosliggende \\space katet}{hypotenus/hypotenus}$\n \n3. Toa betyr: $\\large Tangent/Tangens = \\frac{opposite/motstående \\space katet}{adjacent/hosliggende \\space katet}$.\n\n\nDu trenger ikkje å huske alle dei tre største formelene lengre, bare huske formelen \"SohCahToa\"!\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sopper":{"title":"","content":"# Sopp\n\n## Kva er sopp\nSopp (_Fungus_) er [[Introduksjon til eukaryote celler.|eukaryote]] organismar som kan vere både eincella og fleircella, små og store, dei kjem i mange ulike former og fasonger, og kan leve på mange ulike steder. Når ein høyrer ordet «sopp» tenker ein som regel på sopper ein finner i skogen, men sopp er eit stort [[Mangfald|mangfaldig]] [[Taksonomi.|rike]] og sopper kan ein finne i alle ulike former. I dag er det nedskriven 144.000 arter med sopp i verda, og omtrent 8500 av dei lever i Noreg.  Likevel estimat viser det til å kunne vere opp mellom 2,1 til 3,8 millionar arter sopp. Noko som skilje soppar ut i frå andre riker er at sopper ofte har [[Karbohydrater.|polysakkaridet]] _kitin_ i celleveggen, i motsetning til [[Bakteriar]], [[Arker]] og [[Planter]] som har andre forbindelsar i celleveggen. \n\n\n## Kategorisering\nDei fleste rekkene av sopp er basert på korleis soppen reproduserer [[Befruktning og utvikling - Seksuell reproduksjon.|seksuellt]]. I dag er det kjent til ni hovudgrupper.  Dei fire mest viktige hovudgruppene er argumenterbart *Chytridiomycota* (kytrider), *Zygomycota* (brødmugg), *Ascomycota* (gjærsopp og sekkesopp) og *Basidiomycota* (klubbsopp). Fordi sopper er eukaryotar betyr det at nokre sopper kan gjennomgå [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuell reproduksjon]] i staden for seksuell, og nokre kan gjennomgå begge. For å identifisere soppar er det best å fokusere på _sporangia_ til soppen, sporangia er der *sporar* blir forma i ein sopp når det skjer [[Ulike typer reproduksjon.#Aseksuell reproduksjon|aseksuell]] reproduksjon. Å sjekke sporangia hjelper fordi det kan bestemme først og fremst om soppen reproduserer aseksuelt eller seksuelt, og eventuelt meir presist kva for noko art av aseksuell reproduserande sopp det er.  Soppene som undergår aseksuell reproduksjon er ofte kategorisert inn i to ulike grupper, _Deuteromycota_ og _lav_, som ikkje er formelt anerkjent som [[Taksonomi.|taksonomiske]] grupper. Alle sopper som har mista sin evna til å reprodusere seksuelt blir plassert inn i kategorien Deuteromycota, dette er fordi det er vanskeleg å vite kva ein gruppe den skal plassert inn når den ikkje reprodusere seksuelt lengre. _Lav_ derimot er aseksuelle soppar som lever i symbiose med ein eller fleire ulike andre arter som driv med fotosyntese. Dette tillét soppen å få tak i næring gjennom symbiosen. \n\n## Nettverk\nMange soppar, men ikkje alle, er bygget opp av _hyfar_ (celletrådar) som ofte dannar nettverk, kjent som _mycel_. Hyfane haldar soppen på plass og tar opp næring i frå grunnlaget den er festet til. Alle sopper er òg *heterotrofe* som tyder til at soppen skaper ikkje næring seg sjølv, men får den ofte i frå daudt [[Kva er liv?|organisk]] materiale i naturen. Normalt «beveger» sopp seg ved å sprei seg, ofte gjennom reproduksjon, dette tyder til at dei er delvis stasjonære i livssyklusen. Unntaket frå dette er *sporar* (nokre som har [[Flimmerhår, flageller og psuedopoder.|flageller]]) som regel beveger seg gjennom luft eller vatn.\n\n## Historie\n### Oppdaginga\nMykologi, studien av sopper, er ein relativt ny studie som blei først systematisert etter den teknologiske utviklinga av mikroskopet på 1600 talet. Likevel soppsporar var først observert i 1588 av Giambattista della Porta (1535-1615), så er den første viktige systematiseringa av soppar nemnt i utgivinga av «_Nova Plantarum Genera»_ i 1729 av Pier Antonio Micheli (1679-1737). Det tok likevel fleire hundre år før soppar var anerkjent til å vere eit eiga rike i 1969, då det var foreslått til å vere eit eiga rike av Robert Whittaker (1920-1980), fordi dei var så forskjellige i frå andre planter, og hadde nokre fellestrekk med dyreriket. Ein av forskjellane som satt sopp i eit eiga rike er at sopp har «*kitin*» i celleveggen i staden for cellulose som planter har. Ein anna er at sopper (lav) ofte absorbere næring i frå andre organismar, i staden for å lage sin eigen gjennom fotosyntesen som andre planter. Disse forskjellane har vore kjent for cirka to hundre år, men var ikkje anset som forskjellige nok før Robert Whittaker foreslo riket.\n\n### Medisinske bruker\nMenneske har brukt sopper for medisinske grunner for fleire tusen år, men i dag er bruken av sopper for medisinske grunner mykje meir viktig enn før. I eldgamle tider var ulike sopp mugg brukt for å kurere sjukdomar som, ubevisst til befolkninga, var forårsaka av bakteriar.\n\nAnti-biotika er stoffar som dreper bakteriar og er dermed svært viktig for slike sjukdomar som blir framkalla av bakteriar. Det tok likevel ein del tid før menneske visste om eit spesifikk antibiotika stoff som kunne bli masse-produsert. God antibiotika blei først oppdaga av Alexander Flemming i 1928 og kan bli anerkjent som den viktigaste medisinske oppdaginga nokon gang fordi bakteriar kan vere svært daudelege. Den første antibiotika-en var _Penicillium mugg_ (sopp). Ut i frå dette blei det oppdaga fleire ulike stoffar i frå soppar som kan bli brukt til antibiotika, og i dag er mange antibiotika stoff direkte masseproduserte og har lik struktur frå dei i soppar. Dette er berre mogleg å gjere på grunn av ny moderne teknologi som kan analysere stoff som blir utvinna av soppene. \n\n## Dømer på sopp\n### Lactarius Indigo\nLactarius Indigo, òg kjent som «blå mjølkesopp», er ein blå sopp som vekser naturleg i Nord \u0026 Midt Amerika og Aust Asia. Soppen blei først oppdaga i 1822 av Lewis David de Schweitniz. Soppen er òg spiseleg og ofte lager _mykorrhiza_ med ulike tresortar i naturen. \n\n### Amanita Phalloides\nAmanita Phalloides, òg kjent som «daudhetta», er ein særdeles giftig sopp, og er ofte anerkjent som den mest giftige soppen i verda. Soppen vekser bredt utøver i Europa, men er òg nemnt til å vekse i mindre skala i andre verdsdeler. Soppen kan minne om fleire spiselege soppearter som gjer at mange døyr til denne soppen per år. Gifta funnet i soppen er termostabil som tyder til at denne haldar den giftige effekten under høg temperatur. Dette tyder òg til at forbredelese til mat av soppen gjer den ikkje mindre giftig.\n\n\n### Galerina Marginata\nGalerina Marginata, òg kjent som gravferdsbjølle, er ein art av ekstremt giftig sopp, og den innehelder lik gift som daudhetta (_Amanita Phalloides_). Den veks prominent i den nordiske hemisfæren (Inkl. Europa, Nord-Amerika, og Asia), og vekser som regel på rottande tre. Før i tida var arten delt inn i fem ulike arter (grunna morfologisk arts definisjon), men gjennom fylogenetisk analyse klarte den norske mykologen Gro Gulden og hans kollegaer å determinere at det er berre ein soppart.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Sortering":{"title":"","content":"# Sortering\n\nÅ sortere ein liste av elementer kan hjelpe datamaskinen eller evt. mennesker til å finne elementer på den listen. Til dømes ved binary search!\n\nJavascript og andre programmeringspråk har oftast raske innebygde sorteringsmetoder, men det er godt å forstå korleis sortertingsalgoritmer fungerer slik at ein forstår korleis ein kan angrepe samme algoritme problemstilling på fleire ulike måter. \n\nAlle sortertingsalgoirtmer er basert på ein type funksjon som swapper to elementer i ein liste. I javascript kan ein slik funksjon blir implementert slik:\n```javascript\nvar swap(array,firstIndex,secondIndex){\n\tvar temp = array[firstIndex];\n\tarray[firstIndex]=array[secondIndex];\n\tarray[secondIndex]=temp;\n\treturn array;\n};\n```\n\nTo dømer på sortertingsalgoritmer er [[Insertion sort.]] og [[Selection sort.]]","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Statisk-og-kinematisk-friksjon.":{"title":"","content":"# Statisk og kinematisk friksjon.\n\nDet er to ulike former for friksjon når det kjemer til Fysikk. \nVi har den statiske friksjonen og den kinematiske friksjonen. Og vi pleier å vise til rough-heten til ein overflate.\n\n## Statisk friksjon.\n**Statisk friksjon er den friksjonen vi har i momenten vi starter å bevege oss**. Dette er fordi vi på eit atom nivå har to overflater som ligger svært godt inntil kvarandre og har kanskje nokre ulike bindinger i mellom seg. For å øydellege disse bindingene og få objektet \"ligge\" i overflaten må den dermed ha ein viss kraft som får den ut. \n\nVi viser til denne ruheten til overflaten gjennom noko kalt **koeffisienten av friksjon**. Denne koeffisienten ($μ$) er det same som $\\frac{F_b}{F_N}$, der $F_b$ viser den momentane kraften som trengst for å overkomme disse bindingene og måten objektet ligger på, og $F_N$ er det same som normalkraften til objektet påført av all [[Newtons andre lov, vekt|vekt]] den har/nettokraften til normalen av alle kraftene som drar den ned mot overfalten. Vi har denne $F_N$ fordi vi må vite kor godt dei ligger inntil kvarandre. \n\nVi pleier å notere kraften som krevest for å overkomme denne statiske friksjonen som $F_{f,s}$ på engelsk vertfall!\nVi pleier å skrive den koeffisienten av statisk friksjon slik:\n$\\mu_s$.\n\nHer er ein visualisering av kvifor vi har statisk friksjon (På molekylært nivå).\n![[Statisk og kinematisk friksjon. 2022-07-18 18.25.12.excalidraw]]\n\n\n\nHer er eit døme på korleis vi kan rekne ut denne friksjons kraften.\n\n![[Statisk og kinematisk friksjon. 2022-07-18 18.28.48.excalidraw]]\n(Her bruker eg $F_b$ for $F_{f,s}$).\n\nNokre dømer som forklarer statisk friksjon.\nViss eit objekt står i ro på ein inklinert overflate er det fordi den er så ru at den statiske friksjonen er lik som den kraften som den sklir nedover med, som gjer at den holder seg i ro. Når kraften den sklir med overtar den statiske friksjonen så vil den begynne å skli.\n\nLikt når du tar foten din på is og ikkje sklir, bom, statisk friksjon.\n🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯🤯.\n\n## Kinematisk friksjon.\nEtter momentet som vi har brytt alle dei opprinnelige bindingene og kommet oss ut av krokene til overflaten med objektet så har vi framleis ein form av friksjon kalt kinematisk friksjon og det er sikkert denne du egentelig meiner når du sier friksjon. Denne formen av friksjon oppstår fordi når objektet glir over overflaten vil den konstant lage og bryte nye bindinger, og for bryte disse nye bindingene krevest det ein kraft. Denne kraften er den kinematiske friksjonen. Ved ein konstant kraft vil ein del av kraften gå til denne kinematiske friksjonen, og vår nettokraft vil minske. (Likt er det med statisk kraft).\nVi pleier å notere den kinematiske kraften som $F_f,k$.\nVi pleier å skrive den koeffisneten av kinematiske kraften som $\\mu_k$.\n\nHer er ein visualisering over kvifor vi har kinematisk friksjon (På molekylært nivå).\n![[Statisk og kinematisk friksjon. 2022-07-18 18.45.14.excalidraw]]\n\n\nHer er eit døme på å rekne ut kinematiske friksjon kraft.\n![[Statisk og kinematisk friksjon. 2022-07-18 18.51.21.excalidraw]]\n\n(Her bruker eg $F_f$ for $F_{f,k}$)\n\nHer  er nokre dømer som forklarer kinematisk friksjon.\nDu sklir sakte nedover ein bakke istaden for å bevege deg så raskt som du har satt kraft inn. Bom kinematisk friksjon 🤯. \n\n## Viktigt.\n\u003e[!WARNING] NB.\n\u003eStatisk koeffisient er alltid høgere eller lik den kinematiske. Dette dømet er ikkje relatert til den forrige, her er det ein koeffisent av 0.6, men den er ikkje relatert i det heile til dømet over med og ein koeffisent av 0.6, dei reknar ut forskjellige scenarioer.\n\n**FRIKSJON ER ALLTID I MOTSATT RETNING AV DEN RETNINGEN SOM OBJEKTET BEVEGER SEG I.**\n\n\n[[Newtons tredje lov]].","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Strukturen-til-cellemembranen.":{"title":"","content":"# Strukturen til cellemembranen.\nEin videreføring av [[Introduksjon til cellemembranen]], sjå til [[Flytende mosaikk modell.]] for visualisering.\n\n# Komponenter.\nDei hovusaklege komponentene til plasmamembraner er [[Lipider.]] (fosfolilipider og kolesterol), [[Proteiner og aminosyrer.|proteiner]], og [[Karbohydrater.]]. \n\n* Fosfolilipider er ein lipid lagt av glyserol, to fettsyre haler, og ein fosfatbunder hovudgruppe.  \n\t* Biologiske membraner inneholder oftast to lag av fosfolilipider med halene peikene innover mot kvarandre. Eit arrangement som kalles fosfolilipid bilag.\n* Kolesterol er eit anna lipid lagt av fire karbonringer. Ligger ved siden av fosfolilipider sine haler i kjernen av membranen.\n* Membranproteiner kan strekke seg delvis inn i plasmamembranen, krysse membranen heilt, eller være løst festet til insiden eller utsiden av membranen.\n* Karbohydrat grupper er berre til staden på utsiden av plasmamembranen og er festet til proteiner (Glykoproteiner) eller lipider (Glykolipider).\n\nForholdet mellom disse ulike komponentene varierer i kvar type celle. I ein generell menneskecelle tar proteiner opp cirka $50\\%$ av massen, lipider (av alle typer) cirka $40\\%$, og siste $10\\%$ av karbohydrater.\n\n## Fosfolilipider i cellemembranen.\nFosfolilipider ararngert i bilag lager den grunnlegende delen av plasmamembranen. Dei er egnet til jobben fordi dei er [[Unike egenskaper av vatn.|amfipatiske]], som tyder dei har ein hydrofil side, og ein hydrofobisk side.\n\nFosfolilipider er òg triglyserider, men har ein fosfatgruppe+$R$ i staden for den eine glyserid gruppen.\n\nDei hydrofile eller \"vatn-tiltrekkande\" delen av fosfolilipid er hovuet som har ein negativt ladet fosfat gruppe i tillegg til ein liten gruppe (av varierande identitet notert med $R$ på bilete under.) denne gruppen kan òg vere ladet eller polart. Den hydrofile siden peiker utover og har kontakt med det vatnbaserte stoffer som ligg på utsiden og innsiden av cellen. Siden vatn er eit polart molekyl skaper det elekotrstatiske (ladet basert) samhandlinger mellom vatnet og fosfolilipid hovudene.\n\nDen hydrofobiske siden (vatn-fryktende) av fosfolilipiden består av dens lange ikkje ladete fettstyre haler. Dei fettsyre halene kan enkelt samhandle med kvarandre/andre ikkje ladet molekyler, men dei samhandler/oppfører seg dårligst med vatn. Pga. dette er det meir energisk gunstig for fosfolilipidene til å \"gjemme\" halene sine innover, der dei blir beskyttet i mot vatnet rundt.\n\nFosfolilipid struktur: (**På svensk**):\n![](http://www.chem.umu.se/staff/lars.backman/course/img/lipid/general-phospholipid.png)\n\nDen fosfolilipid bilaget skapt av disse samhandlingene skaper ein god barriere/skille i mellom innsiden og utsiden av cellen fordi vatn og andre polare eller ladet stoff kan ikkje lett bevege seg igjennom den hydrofobiske kjernen av cellemembranen.\n\nPå grunn av den amfipatiske oppførselen til fosfolilipide betyr det at det kan skaper meir arrangementer enn berre bilag. Dei ulike arrangementene blir skapt spontant under rette kondisjoner. I vatn og andre vatnbaserte løysingar pleier fosfolilipider til å  arrangere sg med halene imot kvarandre og hodene stikkende utover. Viss fosfolilipidene har korte fettsyrehaler kan dei skape \"Micelle\" (liten monolagg ball), mens viss dei har større lengre haler pleier dei å lage ein \"liposom\" (hult ball med bilag membran).\n\nLiposom og Micelle, og bilag. (På engelsk);\n![](https://i0.wp.com/www.differencebetween.com/wp-content/uploads/2018/03/Difference-Between-Liposome-and-Micelle-fig-2.png?resize=427%2C525\u0026ssl=1)\n\n\n\n\n\n## Proteiner.\n\nProteiner er den nest største komponenten som skaper plasmamembranen. Det er to kategorier av membranproteiner:\n1. Integrerte membranproteiner\n2. Periferte membranproteiner.\n\n### Integrerte membranproteiner. \nIntegrerte membranproteiner er som namnet hintar til integrert inn i membranen. Dei har minst ein hydrofobisk side som fester seg til den hydrofobiske kjernen av fosfolilipide bilaget. Nokre er berre delvis innni, mens nokre går igjennom heilebilaget og er synleg i frå begge sidene. Proteinene som streket seg heile vegen i gjennom membranen heiter \"transmembrane membranproteiner.\"  Delene av eit integrert membranprotein somer på innsiden av membranen er hydrofobisk i mens dei på utsiden pleeier å vere hydrofile.\n\n#### Transmembrane proteiner. \nTransmembrane membranproteiner kan ha alt i frå ein del som krysser membranen opp til mange meir ulike deler. Det er ikkje noko maks antall kryssinger som er mogleg.\nEin normal membran gjennomgående segment består av $20\\rightarrow 25$ hydrofobiske aminosyrer arrangert i ein \"alfa helix struktur\". \n\nEin alfa helix struktur er slik:\n![250](http://cms.sulinet.hu/get/d/934e8283-82f0-4d94-96f3-04e4ab557931/1/4/b/Large/(d)_alfa-helix.jpg)\nOg disse proteinene med denne strukturen ser dermed slike ut:\n![400](http://bio1151b.nicerweb.com/Locked/media/ch07/07_08TransmembraneProtein.jpg)\n\n\n\nMen ikkje alle transmembraner membranproteiner følger denne modellen.\n\nNokre integrerte transmembrane proteiner former ein kanal som tillater ioner og andre små molekyler å gå igjennom som vist på diagrammet under.\n\n![](https://cdn.britannica.com/29/116429-050-64D3ACFB/cell-membrane-proteins-transport-ions-molecules-process.jpg)\n\nDisse kanalene for ionene gjennom proteinene blir kalt for **ione-kanaler**.\n\n### Periferte membranproteiner.\n\nPeriferte membranproteiner er funnet på utsiden og innside overflatene av ein plasmamembran. Entens festet til integrerte membranproteiner eller fosfolilipider.  I motsetning til integrerte membranproteiner fester ikkje periferte membranproteiner seg til den hydrofobiske kjernen av plasmamembranen, men pleier å flyte meir fritt til overflatene.\n\nSlik ser ein perifert membranprotein ut:\n![](https://i.ytimg.com/vi/3hKsuWjhLUQ/sddefault.jpg)\n\nSom ein kan sjå er dei festet til eit integret membranprotein, eller festet til overflaten av fosfolilipid bilaget.\n\n\n\n## Karbohydrater.\n\nKarbohydrater er den tredje største/viktigste komponenten funnet i plasmamembranen. Genrelt er dei funnet på utside overflaten av plasmamembranen og er entens festet til proteiner eller lipider. Når det er festet til proteiner skaper det: Glykoproteiner. Når det er festet til lipider: Glykolipider. Disse karbohydrat-kjedene kan bestå av alt frå $2\\rightarrow60$ monosakkarid enheter, og kan entens vere rette eller forgrenet i formen.\n\nI tillegg til membranproteiner blir disse brukt til å være cellulære markører på ein måte som cellulære ID koder. Disse tillater celler i å igjenkjenne kvarandre. Disse markørene er svært viktigte for immunsystemet. Dei tillater immuncellene til å igjenkjenne kva celler som er fremedde og som er kroppens eigne celler.\n\nHer kan vi sjå nokre av komponentene bla. karbohydrater.\n![](https://www.online-sciences.com/wp-content/uploads/2020/07/Molecular-structure-of-the-cell-membrane-13.jpg)\n\nDei lange oransje, og lilla pinnene som stikker opp i frå dei proteinene og lipidene er karbohydrater i forgrenet formasjon.\n\n\n\n\n## Membranfluiditet.\n### Fosfolilipid haler.\nStrukturen til dei fettsyre halene til fosfolilipidene er viktige i å bestemme fluiditeten til plasmamembranen. mettet fettsyrer har eingen dobbelbinding (dei er mettet av hydrogen) så dei er relativt rette i form Umettet fettsyrer (ikkje mettet av hydrogen) derimot har ein eller fleire dobbelbindinger som ofte resultet i ein bøying/dulk i  formen. (Vist tidligere på strukturen til fosfolilipid, det er på svensk, men du forstår nok). \nDei mettede og umettede fettsyre halene på fosfolilipidene oppfører seg ulikt når temperaturen faller.\n* På kaldere temperaturer vil dei rette halene på mettet fettsyrene ligge seg komapkt nærme kvarandre, noko som oskaper ein hard, sterk plasmamembran.\n* Fosfolilipidene med umettet fettsyre haler kan ikkje ligge seg like kompakt pga. bøyen/dulken i strukturen av halene. Pga. dette vil plasmamembranen med umettet fettsyre fosfolilipider holde seg meir flytende i lavere temperaturer enn dei med mettete fettsyre hale fosfolilipider.\n\nDei fleste cellemembraner har ein miks av fosfolilipider. Nokre med to mettete haler, og nokre med ein mettet og ein umettet hale. Mange organimser, fisk til dømes, kan justere seg fysiologisk til temperaturen med å skifte forholdet mellom umettet fettsyrer og mettet fettsyrer i membranene deirast.\n\n## Kolesterol.\nI tilegg til fosfolilipider har plasmamembraner ein ekstra komponent som hjelper den å halde fluiditeten. Kolesterol. Kolesterol er ein anna type lipid som ligger imellom fosfolilipidene i plasmamembranen og hjelper å minimisere effekten av temperatur på fluiditeten.\n* På lave temperaturer kontrolerer kolesterol temperaturen med å halde fosfolilipidene i frå kvarandre, slik at dei ikkje liggere tett.\n* På høge temperaturer minsker den faktisk fluiditeten - slk skaper òg kolesterol eit større sunt temperatur nivå for eit funksjonerende plasmamembran.\n\nHer er eit bilete av strukturen til kolesterol.\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Cholesterol.svg/1200px-Cholesterol.svg.png)\n\n\n\n## Stoffer som ikkje kan passere.\nNokre stoffer kan ikkje passere  gjennom plasmamembranen fordi det er 1. for stort. 2. det er polart (har ladning).\n\nNokre svært små polare stoffer kan gå gjennom plasmembranen, eller fordi det er ikkje upolart. \n\nMange stoffer kan ikkje gå igjennom og krev stor mengde energi for å gå over membranen.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Symboler":{"title":"","content":"# Symboler ofte brukt i Fysikk.\n\n* $F= kraft$\n* $a = akselerasjon$\n* $\\Delta t = tid$\n* $\\Delta x = s = forskyvning$\n* $\\vec{v}=hastighet$\n* $\\vec{v_{f}}=finalehastighet$ \n* $\\vec{v_{0}}=\\vec{v_{i}}=starthastighet$.\n* $\\overline{\\vec{v}}=gjennomsnittleg hastighet$, med strek over og pil over.\n $\\overline{v_{avg}}=v=gjennomsnitt fart$, med strek over.\n* $v=momentan fart$, utan pil over. \n* $N=newton=kg\\times \\frac{m}{s^2}$\n* $μ = \\textit{koeffisient av friksjon}$.\n$\\vec{\\omega} = \\textit{vinklet hastighet}$\n$\\vec{\\alpha} = \\textit{vinklet akselerasjon}$\n$\\Delta \\theta = \\textit{forandring i vinkel}$\n$T = \\textit{Periode}$\n$f=Frekvens$\n$Hz=s^{-1}$\n$A=ampere$\n$mol=mol\\rightarrow stoffmengde$\n$candela\\rightarrow lysstyrke$\n$P=effekt$\n$W=arbeid$\n$J=Joule = \\frac{kg*m^2}{s^2}$\n$1Watt=W=\\frac{Joule}{s}=\\frac{kg*\\frac{m^2}{s^2}}{s}=\\frac{kg\\times m^2}{s^3}$\n\n\n$størrelse=målttal\\times enhet$, der enhet er til dømes $\\frac{m}{s}$, og måltall er verdien $12$ til dømes.\n\n\nGjennomsnitt ting har ein strek over.\nVektorer har piler over.\n\n\n\u003e[!INFO] Info.\n\u003eDersom man settjer $||$ og $||$ på sidene av ein vektor får man dens størrelse utan retning. \n\u003eKan òg berre droper pilen da, men når vi settjer || || viser vi til at den har faktisk ein retning men vi fokuserer på størrelsen. Husk når vi addere størrelser dropper vi **ikkje** forteikna. Utanom når vi svarer på eit spørsmålet med sluttsvar, vi skriver til dømes *25N til høgre*, istaden for +25N.  eller *25N til venstre* i staden for -25N.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Symmetri-linje.":{"title":"","content":"# Symmetri linje\n\n\n# Kva det er.\nSymmetrilinjen er linjen der eit [[Polynom terminologi#Kva er ein polynom|polynom]] er heilt lik på begge sidene av polynomet. \n\nTil dømes:\nI $x^2$ er symmetrilinjen nøyaktig $0$, da begge sidene av polynomet speglast nøyaktig ved $0$.\n\nVisualisering:\n![](https://matematikkundervisning.org/wp-content/uploads/2020/04/1.Symmetri-linje.png)\n\n\n# Rekne ut i frå formel.\n\nVi har ein regel for alle andregrads binomer / (kan også vere eit trinom viss det er 2 faktorer med $x$, og eit [[Polynom terminologi#Konstant-term ledd 0 grad monomer|konstant ledd]].) \n\nDenne regelen er som følgende:\n$\\huge \\frac{-b}{2a}$.\n\nog tar utgangspunktet i at den originale funksjonen har nøyaktig eit slikt oppsett:\n$ax^2+bx+c$\n\nDer $a$ er koeffsienten til det andre grade [[Polynom terminologi#Term ledd|monomet]]. \nDer $b$ er koeffsienten til det første grade [[Polynom terminologi#Term ledd|monomet]]. \n\nSymmetrilinjen til:\n$2x^2+4x+2$\ner:\n$\\huge \\frac{-4}{2\\times 2}$\n\n$\\huge \\rightarrow -1$\n\nEin anna metode for å finne symmetrilinjen:\ner å addere dei to ulike faktorene sine nullpunkt til saman, og dele på 2.\nDette tar for gitt at vi veit dei ulike faktorene allereie. \n\nSymmetrilinjen til:\n$2x^2+4x+2$ (samme som: $2(x+1)(x+1)$)\ner: \n$-1+-1 = -2$\n\n$\\huge \\rightarrow \\frac{-2}{2} = -1$\n\n### Ta i bruk regelen for å forskyve ekstremalpunktet i eit [[Polynom terminologi#Grad av polynom|andregrad]] [[Polynom grafer|polynom]].\n\nEin kan forskyve ekstremalpunktet i eit andregrads binom ved å ta i bruk symmetrilinje formelen.\nVi veit at $\\frac{-b}{2a}$ er formelen, og ved dette kan vi flytte ekstremalpunkta til der vi ønsker ved å modifisere $a$ eller $b$, slik kan vi flytte ekstremlapunktet ved å modifisere det originale funksjonen.\n\n\nTil dømes:\n$2x^2+4x+2$. (Her er symmetrilinjen ved $-1$)\nViss vi ønsker å ha symmetrilinjen ved $-2$, kan vi gjere slik:\n\n$\\large \\frac{-4}{2\\times 2} = -1$\n$\\large \\frac{-4}{2 \\times 1} = -2$.\nHer skiftet vi det til $-2$ i staden for $-1$ ved å skifte $a$ verdien i det originale funksjonen fra 2 til 1.\n\n\nEg anbefaler fortsatt å heller bruke [[Forksyvning og refleksjon av funksjoner.]] til å forskyve ekstremalpunktet, men denne regelen kan ofte vere ein god start viss ein berre vil forskyve ekstremalpunktet.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/T-celler":{"title":"","content":"\n## Om T-celler.\nKroppen har fleire typer *T-celler* med ulike funksjoner. To av dei viktigste er *T-hjelpeceller* og *T-drepceller*. *T-hjelpeceller* påvirker og stimulerer andre *immunceller*, blant anna [[B-celler]], slik at fremmede [[Det tilpassede immunforsvaret.#Antigen|antigener]] blir fjernet. T-hjelpeceller er heilt nødvendige for at [[Det tilpassede immunforsvaret.]] skal fungerer normalt. *T-drepeceller* kan øydellege celler som er infisert av [[Virus]] , og dei kan ødelegge [[Kreft.]]celler. Dei er ogs ein av årasakane til avstøtning av transplanterte organar. Etter at dei er aktivert til å dele seg vil både T-hjelpeceller og T-drepeceller danne *T-hukomellseceller*. T-hukomellseceller er viktige i forbindelse med *immunitet*.\n\nI motsetnad til [[B-celler]] kan ikkje T-celler gjenkjenne eit antigen direkte. Dei kan heller ikkje binde seg til frie antigener som i til dømes [[Bakteriar|bakteriegift]], slik som B-cellenes antistoffer kan gjere. **T-cellen er avhengige av at antigenet er bundet til spesialierte molekyler på celleoverflaten til andre celler.** Disse molekylene fungerer som eit slags servingsfart eller utsillingsvindauge for antigenet.\n\nT-hjelpeceller og T-drepceller er to viktige typer T-celler. For at andre immunceller skal reagere må dei få signaler frå T-hjelpecellene. T-drepecellene øydelegger sjuke eller fremmede celler som for eksempel kreftceller og celler som er infiserte av [[Virus]]. Både T-hjelpeceller og T-drepeceller utvikler seg til T-hukomellseceller etter ein *immunrespons*.\n\nSom for [[B-celler]] vil både T-hjelpeceller og T-drepceller aktiveres og modnes når antigenreseptoren har bundet seg til det rette antigenet på ein antigenpresenterende celle. Dette fører til at T-cellen deler seg fleire ganger slik at vi får mange T-celler som kan reagere påd et samme antigenet og bidra til å fjerne det frå kroppen. Når antigenet er borte vil dei fleste av disse T-cellene dau i ein programmert celledaud, *apoptose*. Nokre blir verande i kroppen som *T-hukommelseceller*. Hukommelsecellene lever lenge og er klare neste gong kroppen møter det aktuelle antigenet. Så både [[B-celler]] og T-celler bidrar atlså til å gjere oss immune når vi har gjennomgått ein infeksjon med ein mikroorganisme eller tatt ein vaksine.\n\n\u003e[!INFO] Oppsummering\n\u003eT-celler kan ikkje gjenkjenne eit antigen direkte. Dei kan heller ikkje binde seg til frie antigener. Det fremmede antigenet må først brytes ned til biter inni cellene. Bitene fraktes ut til celleoverflaten bundet til spesielle typer molekyler som viser fram antigener på oveflaten.\n\n\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Taksonomi.":{"title":"","content":"# Taksonomi.\n\nTakonmi er \"kunsten\" om å navngi, beskriver, og klassifere ulike organismer som vi oppdager.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Tangens":{"title":"","content":"# Tangens.\n\nTangens er den siste trigonometriske hovudfunksjonen, den har egentelig to ulike definisjoner.\nDen første er: \n$\\frac{motståendekatet}{hosliggendekatet}$,\n\nden andre er:\n$\\frac{sin(A)}{cos(B)}$.\n\nDet spesielle med tangens funskjonen er det er her vi finner tangent i ein graf i frå, fordi tangens er det samme som ein tangent i enhetssirkelen.\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Tangenter":{"title":"","content":"# Tangenter.\n\n## Kva er tangenter.\nEin tangent er ein rett linje som treffer nøyaktig eit punkt på ein graf.\nTangenter består av den [[Momentan vekstfart]] $\\times \\space x$ og $+$ eit [[Polynom terminologi#Konstant-term ledd 0 grad monomer|konstant ledd]]. \n\nDen generelle strukturen til ein tangent\n$ax+b$ , der $a =$ stigningstallet, $b =$  konstantleddet.\n\n\n## Korleis finne tangenter.\n## Finne tangenter med Geogebra.\n\nFinn den $x$ verdiene til den deriverte som gjer at vi har samme stigningstall som tangenten vi får oppgitt.\n\nBruk $tangent(point, function)$ i geogebra, med disse $x$ verdia vi fekk oppgitt ovanfor, og \n\nVi settjer saman stignignstallet og konstant leddet til formen vist over.\n\n## Finne stigningstall til tangent.\nDette trenger vi berre den [[Derivanter#Korleis finne den deriverte funksjonen|deriverte funksjonen]]. Eller den originale funksjonen som vi kan finne den deriverte funksjonen ut i frå til å finne.\nFor å finne stigningstallet til ein tangent er det berre å settje $x$ verdien til punktet vi skal finne tangenten til inn i den deriverte funksjonen. Då er svaret vi får stigningstallet til tangenten.\n\n\n## Finne konstant ledd.\n### Eit punkts formel (One point slope formula.)\nDette krevjer stigningstallet til å kunne jobbe med som ein kan få i frå [[Derivanter#Derivasjons regelen 1|den deriverte]], i tillegg til allereie å vite eit punkt. \n\n$y-y_{1}=a(x-x_{1})$\n$a = \\textit{stigningstallet}$\n$x_{1} = \\textit{Punktet sin x kordinat}$\n$y_{1} = \\textit{Punktet sin y kordinat.}$\n\nSett inn både $a$ , $y_{1}$, og $x_{1}$. \n\nViss vi ser at tangenten ikkje møter punktet kan vi settje inn $b$ som avsettjer den til å treffe punktet.\n\n\u003e [!INFO]\n\u003e Denne er best!\n\u003e \n### Andre metode som berre fungerer utan variabler.\n\nVi kan finne det konstante leddet på ein anna metode, men denne fungerer berre utan variabler, og er mykje mindre consistent i å få rett svar. \nVi kan seie at konstantleddet er $f(x)-f'(x)$ .\nLitt confusing, og jepp du leste rett $f(x)-f'(x)$, dette er fordi det då finner vi tallet vi må addere for å få den opp til grafen sin posisjon igjen. Dette er best å gjere når ein ikkje har eit punkt i frå før, eller viss ein ikkje har noko variabler som $x$ eller $y$ verdi.\n\nEksempel:\n$f(x)=x^2$\n$f'(x)=2x$\nTangenten til 1 er:\n$f'(1)=2$\n$f(1)-f'(1)=1-2 \\rightarrow -1$\n$\\rightarrow \\textit{tangenten er:  } 2x - 1$\n\nGeogebra confirms this is correct!\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/The-complex-plane":{"title":"","content":"# The complex plane (Det komplekse planet).\n\n## Kva det er.\nThe complex plane, eller på norsk det komplekse planet (Ikkje astronomi planet, men geometri!), er ein metode for å visualisere komplekse tall ved å settje på sin eigen plane.\n\n![450](http://notes.imt-decal.org/misc/complex-plane.png)\n\n## Korleis visualisere [[Komplekse tall]] på den.\n\n\n[[Det cartesian planet / Cartesian plane]] er ein metode for å visualisere funksjoner ved økende og minskende verdier. Altså $y$ og $x$.\nDet komplekse planet er nesten likt men istaden for $y$ er det heller verdien til det [[Imaginære tall|imaginære tallet]] i komeplekse tall, og $x$ er det relle tallet. Denne planet er altså ein visualisering av disse to dimensjonene av mattematikk. Den reelle dimensjonen og den imaginære dimensjonen.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/The-unit-circle":{"title":"","content":"# The unit circle (Enhets sirkelen).\n\n## Kva det er.\n\nEnhets sirkelen, aka. the unit circle på engelsk, er ein lett metode å visualisere banene til dei ulike trigonometriske funksjonene.\n\nVisualisering av the unit circle:\n\n![](https://cdn.kastatic.org/ka-youtube-converted/h-TPSylHrvE.mp4/h-TPSylHrvE.png)\n\n\nPå enhetssirkelen er y aksen verdien til sin ved $\\theta$. \nOg x aksen verdien er cos av $\\theta$.\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Theta":{"title":"","content":"# Theta. $\\theta$\n\n# Kva er theta.\nTheta er berre ein ukjent vinkel, vi skriver det som $\\theta$.\nDet er ein ukjent vinkel som kjem i frå det normale vinkel systemet som består av $\\large 360^{\\textdegree}$. Men det kan også sjølvsagt representere radianer, eller gradianer, det er berre grunna i det normale vinkelsystemet.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Totale-distansen-i-vinklet-mosjon.":{"title":"","content":"# Totale distansen i ein vinklet mosjon.\n\nViss vi ønsker å finne den totale meteren vi går ved ein vinklet mosjon trenger vi berre å ta i bruk litt simpel matematikk, geometri🤮, og vell aritmetikk.\n\nNår vi ønsker å finen totale distansen trenger vi berre å vite kor stor radius vi dealer med i meter og litt infomrasjon om og hastighet og vinkel.\n\n## Utan akselerasjon.\nVi veit i frå ein dimensjonell mosjon at vi kan rekne totale distansen gjennom å ta i bruk. [[Kinematiske formeler - Konstant akselerasjon.|nokre simple regler, som distanse = hastighet*tid, dersom ingen akselerasjon]]. \n\nDette kan vi òg ta i bruk her vi trenger berre å omformulere litt på spørsmålet. Vi kan entens ta i bruk å vite kor stor vinkel vi har beveget oss i radianer, og så gange med radiusen. Fordi dette er det same som \n$\\frac{\\Delta \\theta}{2\\pi}\\times 2\\pi R = \\Delta \\theta \\times R$.\nSom gir mening fordi vi finner kor stor del av heile omkretsen vi beveger oss i radianer, og så multipliserer vi dette med omkretsformelen.\n\nViss vi derimot har ein [[Vinklet bevegelse + Vinklet kinematiske formeler.#Variabler|gjennomsnittleg vinklet hastighet]], og ein $tid$ så kan vi òg finne ut kva distansen er ved å skifte $\\Delta \\theta$ ut med $\\omega \\times \\Delta t$ , fordi $\\omega = \\frac{\\Delta \\theta}{\\Delta t}$. \n\n## Med akselerasjon.\nDersom vi har med akselerasjon må vi ta i bruk [[Kinematiske formeler - Konstant akselerasjon.]] og berre skifte ut meter med $\\theta$ reglene holder teoretisk sett opp framleis. Vi kan garantert finne den gjennomsnittlege vinklet hastigheten og deretter bruke den 3. kinematiske regelen for konstant akselerasjon.\n\n\n\n## Visualisering\n![[Totale distansen i vinklet mosjon. 2022-07-22 17.55.14.excalidraw|800]] (Utan akselerasjon.)\n\n\n# Arbeidet eksempel:\nVi har to ulike disker på 2 baner, vi skal finne ut kva for ein bane som har størst radius. Vi veit at den røde disken har eit punkt som har ein normal ein dimensjonell hastighet på $V$ og den har ein vinklet hastighet på $\\omega$. Den andre blåe disken har ein normal ein dimensjonell hastighet på $2V$, og vinklet hastighet på $2\\omega$. Kva for ein bane har størst radius?\n\nHusk [[Vinklet bevegelse + Vinklet kinematiske formeler.|vinklet hastighet * radius = normal hastighet]].\nLa oss teste nokre verdier ut:\nRød disk:\n$\\omega \\times R = V$\nHmm $R = \\frac{V}{\\omega}$.\n\n$2\\omega \\times R = 2V$\n$R=\\frac{2V}{2\\omega}$\n$R=\\frac{V}{\\omega}$, samme radius! Berre dobbel så stor vinklet hastighet!\n\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Towers-of-Hanoi.":{"title":"","content":"# Towers of Hanoi.\n\n## Introduction.\nYou are given three pegs and $n$ disks, and they are all sorted on one of the pegs. Goal: move all $n$ disks from start peg to goal peg. The disks being labeled from $1$ up to $n$.\nSounds easy? However we have two rules which makes it harder, especial for the monks (we we will get on to that later, don't ask why yet). \nRules:\n1. You can only move one disk at a time.\n2. You can never have a disk lying on top of a smaller value disk. \n3. You can only move the top disks.\n\n\n## Problemsolving.\nFirst let's see how wer can solve this recursively. Base case $n==1$. When we have $n\\gt1$ we have to use [[Rekurisve algoritmer.|recursion]]. You can move the top disk to any to any tower from any tower as long as it obides the rules.\n\nWhen solving $n==3$ you need to expose the bottom disk, and to do that you had to move all the disks above it (2 and 1). By: moving disk 1  to peg 2 from peg 1. Move disk 2 from peg 1 to peg 3. Move disk 1 from peg 2 to peg 3. \n\nMore to the point, you just solved a subproblem. Moving disks $1$ to $n-1$ from peg $1$ to $3$.\n\nNow to finish up you need to recursively solve subproblem of moving disk $1$ through disk $n-1$ back to peg $2$. And you are done.\n\nAnd you knew this was coming: is there something special you did when you moved disks $1$ through $3$? (Any special from-s and to-s?). You could have moved them to any peg. For example from peg 2 to peg 3.\n\n* Recursively solve subproblem of moving disks 1 and 2 from peg 2 to peg 1.\n* Now that disk 3 is exposed on peg 2, move it to peg 3.\n* Recursively solve the subproble of moving disks 1 and 2 from peg 1 to peg 3. \n\nNo matter how you slice it, you can move disks 1 through 3 from any peg to any peg. Moving disks seven times.\nNotice that you move disks 3 times for each of the two times that you recursively solve the subproblem of moving disk 1 and 2 + one for moving disk 3.\n\nHow about $n==4$? Because you can recursiely solve the subproblem of moving disks 1 through 3 from any peg to another pe you can solve the problem for $n==3$. \n* Recursively solve the subproblem of moving disks 1 through 3 from peg 1 to peg 3, moving 7 times.\n* Move disk 4 from peg 1 to peg 2.\n* Recursively solve the subproble of moving disks 1 through 3 to peg 2 from peg 3. Moving 7 times.\n\nThis soloution moves disks 15 time (7+1+7=15).\n\nAt this point you might have picked up on two patters. First solve the towers of Hanoi recursively unless $n==1$. Because then just move disk 1. Otherwise when $n\\ge2$ follow these steps.\n* Recursively move disks 1 through $n-1$ from start peg to spare peg.\n* Move fisk $n$ from start peg to goal peg.\n* Recurisvely move disks 1 through $n-1$ from spare page to goal peg.\n\n\n\u003e[!INFO] Moving count formula.\n\u003eSolving a problem of hanoi for $n$ disks requires $2^n-1$ moves.\n\n## Psuedocode.\n\n## Proper code.\n\n\n## THE MONKS.\nAs i said early on in the begin the monks are important as they are the founding fathers of this puzzle, wait is it spelled pussle or puzzle, I don't remember, whatever is more cool 🍸🎩. \n\nIf they move 1 disk a second it would take them longer than the entire life of the sun to move them all. They would……… all die before finishing. If i recall correctly it would take them approxiamately $100$ times longer than the left timespan of the sun to finish…\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Tredje-derivasjonsregel-Rot-funksjoner.":{"title":"","content":"\n\n[[Derivanter]]\n\n$g(x)=\\sqrt(x)$\n$g'(x)=\\frac{1}{2\\sqrt(x)}$\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Trigonometriske-verdier-av-spesielle-vinkler.":{"title":"","content":"# Trigonometriske verdier av spesielle vinkler.\n\nVi har mange *spesielle* verdier av dei trigonometriske funskjonene ved ulike vinkler. Under kan du sjå nokre av dei viktigste å kunne utanatt.\n\n\n![](https://www.nkhansen.com/wp-content/uploads/geometri/trigonometriske_verdier.png)\n\nNoko som du kanskje merker er at tan(90) ikkje har ein verdi dette er fordi $tan(90)=\\frac{sin(90)}{cos(90)} = \\frac{1}{0}$ og å dele på 0 går ikkje ann i det heile. Disse verdiene vil nærme seg uendelig, til dømes tan(90) går i mot uendelig positivt og neste tan(180) går uendelig negativt, og så positivt og så negativt ……… ","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/USikkerheter":{"title":"","content":"# Usikkerhet\n\nUsikkerhet oppstår når vi har eit upresist størrelse som ein variabel vi bruker å måle. \nFordi vi kan til dømes runde ned eller opp $4.65$ og $4.74$ over til $4.7$ så skaper dette ein usikkerhet.\nDersom vi vil ha presise svar når vi driver med rekning må vi bruke presise variabler.\n\nDerfor må vi huske å gi eit svar som har ein liten errormargin dersom vi får ein lav gjeldende siffer. Som til dømes $\\pm 0.5m$. Der $m$ [[Symboler]].\n\nEller så kan vi berre avrunde sluttverdien til den minste gjeldende sifferet, der alle verdiene som blir tatt inn òg blir rundet ned til laveste gjeldende siffer.\n\n***Basicallly:\nBerre finn minst gjeldende siffer, skriv svaret med lik mengde gjeldene siffer.***\n\nHusk at vi får ein usikkerhet og vi må ta hensyn til dette.\nVi kan bruke gjennomsnittet $\\pm$ $\\frac{variasjonsbredden}{2}$ av alle målingene vi tok som gir eit ganske presist svar. \n$\\pm \\frac{variasjonsbredden}{2}$ blir kalt for *avviket*.\n\n\u003e[!WARNING]\n\u003eNår vi òg svarer på oppgåven skal vi ikkje bruke meir siffer enn mengden siffer som det er minst av i variabel inntakene. \n\u003eVi skal ikkje gi eit svar meir presist enn det som er minst presist på inntak.\n\n\n\u003e[!INFO] NB\n\u003eNB: Når vi driver med eksakte tall som 2 eller $\\frac{3}{4}$ så ignorer vi denne regelen med gjeldende siffer fordi vi kan imaginære at det er uendelig mange siffer bak.\n\nDømer:\n$10.1m\\times 0.23m \\rightarrow 2.323m^2 \\rightarrow 2.3m^2$\n\n\n$10.1m+0.23m\\rightarrow 10.33m\\rightarrow 10.3m$\n\n\n$A=b\\times l$\n$b=2.72m\\rightarrow$ 2 gjeldende siffer. \n$l=0.80m\\rightarrow$ 2 gjeldende siffer\n$A =2.72m\\times0.80m\\rightarrow 2.16m^2$, svaret har to gjeldende siffer.\n\n\u003e[!INFO]\n\u003eMed alle usikkerheter må vi avrunde til eit siffer.\n\u003eDøme : $6.9N\\pm0.1$ er eit døme på ein usikkerverdi.\n\n\u003e[!INFO] Dersom svaret har høgere anntall siffere og ingen desimaltal\n\u003eDersom svaret har høgere anntall siffere og ingen desimaltal, skal ein avrudne gjennom å bruke eit anna type enhet. Til dø.es kiloNewton i staden for standard Newton dersom vi driv med høgere enn tusenere av newton. Til dømes just yo know.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Ulike-css-markers":{"title":"","content":"# Ulike css markers.\n\nul li = alle li inni et ul element (Denne er nesten den einaste egt. brukt lmao)\nul \u003e li = alle dei første li inni et ul element. Neste lag, men ikkje deretter.\nh1 + p = første p-element etter ein h1 element\nh1 ~  p = alle p-elementer etter ein h1 element.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Ulike-sider-i-ein-trekant.":{"title":"","content":"# Ulike sider i ein trekant.\n\n## Dei ulike sidene.\n\nI ein trekant har vi tre ulike sider, som er basert på posisjonen i forhald til ein vinkel. I know a little bit confusing, men la meg forklare. Men først la meg fortelle namna til sidene, dette kanskje hjelper deg litt å forstå kva dei betyr/posisjonen.\n\n\n1. Motstående katet / opposite.\n2. Hosliggende katet / adjacent.\n3. Hypotenus / hypotenuse.\n\n\n1. Viss eg har ein vinkel A så er den motstående kateten den siden/kateten som er nøyaktig i mot av vinkelen. \n2. Hosliggende kateten er den som går i mot 90graders vinkelen.\n3. Og hypotenus er den som er nøyaktig i mot den 90graders vinkelen.\n\n\nVi pleier å namngi dei ulike sidene bokstaver som liknar på vinkelene:\n![](http://www.rasmus.is/no/t/g/Su55k01_m01.gif)\n\n1. I dette bilete er c den motstående kateten av C.\n2. a er den motstående kateten av A.\n3. og b er den motstående kateten av B.\n\nHer er det ikkje nokre implisitte hosliggende kateter eller hypotenuser, dette kan vi få derimot viss vi deler opp trekanten men då varierer hypotenusen og den hosliggendekateten angående til kva vinkel det er prat om, og korleis trekanten er delt opp. Dette er noko vi berre pleier å gjere ved ulike formler som til dømes areal setningen.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Ulike-typer-reproduksjon.":{"title":"","content":"# Ulike typer reproduksjon.\nDet finnest fleire ulike former for reproduksjon, dei to hovudsakelege vi har på jordkloden er seksuell reproduksjon og aseksuell reproduksjon. Alt går på korleis den genetiske informasjonen i [[Introduksjon til cellen.|cellen]] blir videreført videre i generasjoner.\nDette er òg grunnen til at kvar av dei to hovudsakelege reproduksjonstypene, og har mindre subgrupper av reproduksjonstyper, som igjen har sine egne forskjeller. Alt går på korleis eit organisme befinner seg meir gunstig til å skape nye generasjoner. \n\n## Aseksuell reproduksjon.\nAseksuell reproduksjon er ein form for reproduksjon som ikkje krever to ulike celler for å formeire seg. Dei simpelt sagt fungerer ved å ta sin eigen DNA og så lage ein kopi av den og deretter splitte cellen seg i to, slik at den nye kopierte DNA-et blir i den nye, og deretter er det blitt ein ny celle. Det krever **ingen** seksuell aktivitet for å ta sted. Denne nye cellen blir kalt ein klone fordi det har ingen genetisk variasjon i det heile. \n\nNesten alltid er det ingen variasjon i den nye cellen, men av og til svært svært svært svært svært svært sjeldant kan dett oppstå. Men dette er sånn once i a blue moon klokko 4 på natto og noe tar og eter ein hamburger samtidig som han får eit virus, Aka. svært svært sjeldent.\n\n### Ulike former aseksuell reproduksjon.\n#### Mitose.\nDen største og viktigste formen av aseksuell reproduksjon som skjer med alle [[Introduksjon til eukaryote celler.|eukaryote celler]] for å vokse heiter mitose, dette er ein form for celledivisjon. Her er det fleire ulike steger, men generellt sett kan ein oppsummere det at [[Nukleotider og nukleinsyrer.#DNA|DNA]]-et kopierer seg og så splitter cellen i to ulike celler. Sjå til [[Mitose.]] for meir informasjon.\nSlik ser mitose ut:\n![](https://thebiologynotes.com/wp-content/uploads/2020/05/Mitosis-definition-purpose-stages-applications-with-diagram.jpg)\n\n#### Binær fisjon.\nBinær fisjon er basically det samme som mitose berre for [[Prokaryote celler.]] i staden for [[Introduksjon til eukaryote celler.|eukaryoter]]. Den fungerer egentelig nesten heilt likt, den splitter DNA-et, og så deler cellen seg i to. \nHer er eit diagram for binær fisjon.\n![](https://api.ndla.no/image-api/raw/binary-fission-ndla2.jpg)\n\nDette er måten bla. bakterier formeirer seg.\n\n#### Fragmentasjon.\nFragmentasjon er ein ganske interessant form for aseksuell reproduksjon, men den er ganske kul. Den fungerer ved at viss eit organisme mister ein bit av seg sjølv, og den kan gjere fragmentasjon så kan denne nye biten bli over til ein heilt ny \"klone\" av det originale organismet. Dette er noko sjøstjerner er ganske kjente for.\nHer er eit bilete som viser fragmentasjon.\n![](https://brooks-bio.weebly.com/uploads/8/6/8/6/86862338/537296926_2.jpg)\nDei blir splittet og så ny kloner what!\n\n#### Partenogenese.\nPartenogenese er ein ganske kul form for aseksuell reproduksjon, den fungerer ved at av og til kan ein ubefruktet eggcelle bli over til eit nytt organisme. Dette er fordi av og til inneholder nokre eggceller (i organismer som kan utføre partenogense) full genetisk informasjon og dermed kan denne eggcellen berre vokse fordi den har allereie eit fullt sett med DNA. I nokre sære tilfeller kan den òg vokse dersom den har berre halvparten av den genetiske informasjonen, men dette er sjeldent og litt rart, og eg skal ikkje gå  i dybde om kvifor med halvparten. Dei nye partenogense organismene som blir født av denne cellen blir kalt for ein haploid, og det originale organismet diploid. Namnet partenogenese kjemer frå latin og betyr \"jomfru fødsel\", wait var Jesus Kristost bare ein haploid. 👽.\n\n### Spiring.\nSpiring er ein ganske normal form for aseksuell reproduksjon. Denne formen av reproduksjon fungerer ved at eit organisme bryter av ein del av seg sjølv og denne nye delen kan vokse til sin eigen organisme, her er den genetiske informsjonen lagret i alle av dei cellene som blir brytt av det originale organismet. Dette oftast er slik at ein \"spire\" av organismet vokser, og denne spiren bryter seg av. I know kinda nasty.\n\nHer er ein visualisering:\n![](https://cdn.kastatic.org/ka-perseus-images/6ca9899ff1423761e94598a669617311815f178e.jpg)\n\n\u003e[!WARNING] Bemerk deg.\n\u003eSpiring og fragmentasjon er ikkje det samme, fordi i spiring må spiren vokse ut av det originale organismet med formålet av å bli eit nytt organisme. I fragmentasjon er det berre ein del av det originale organismet som ikkje hadde det originale formålet av å bli eit nytt organisme.\n\n## Seksuell reproduksjon.\n### Nytt organisme - SEX 😈.\nSeksuell reproduksjon er basert på at to ulike celler i frå som oftast to ulike organismer av samme art deler genetisk informasjon slik at den samlede genetiske informsjonen kan vokse til eit nytt organisme. Det generellt er basert på at ein eggcelle frå mor organismet smelter seg saman med ein sædcelle i frå far organismet. \nSeinere vil dette organismet vokse gjennom mitose til å bli større.\nMennesker utfører seksuell reproduksjon og grunnen til at vi blir horny, likt som mange andre dyr, er fordi det  encourage seksuell reproduksjon. 🥰\nProsessen av at spermcellen smelter saman med eggcellen, heiter \"befruktning\". \n\nOg ein ting til, seksuell reproduksjon ja faktisk kan skje med berre eit organisme. Der den faktisk befrukter seg sjølv, i know very nasty. But evolusjon do what evolusjon does, og den fant at dette var ein ganske greit soloution, så vi burde ikkje sette våre menneskelige standarder på dette og faktisk kalle det nasty, det er naturleg!\n\n\nHer er ein visualisering av well da coom hitting da 🥚.\n![](https://i.ytimg.com/vi/ahCxdskzriw/maxresdefault.jpg)\n\n\u003e[!INFO] Kvifor seksuellt når aseksuell er ein ting. 🤔\n\u003e Det er litt diskusjon om kvifor seksuell reproduksjon i det heile tatt er ein ting når vi har aseksuell reproduksjon. Faktisk har forskere funnet ut at aseksuell reproduksjon oppstod lenge lenge lenge før seksuell reproduksjon. Nokre forskere meiner at det oppstod fordi det er meir genetisk variasjon og sjanse for mutasjoner som kan gi eit gunstig fordel til eit organisme. Som seiner gjennom [[Naturleg seleksjon]] vil gjere at arten blir betre og lever lengre.\n\u003e \n\nVi pleier å si at ein art seksuellt reproduserer viss alt er nødvendig av den seksuelle befruktningen originalt, ein kan **ikkje** si at alle organismer driver med både seksuell reproduksjon og aseksuell reproduksjon pga. av mitose. Dette er fordi mitose er ein etterkants prosess som er berre ansvarleg for voksing i dei aller fleste fleircellet organismer. Men nokre arter kan drive med både aseksuell og seksuell reproduksjon i form av partenogenase. \n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Ulikheiter":{"title":"","content":"# Ulikheiter.\n## Kva er ein ulikhet\nEin ulikhet innanfor Algebra er essensiellt variabler som er entens lavere $\\lt$  eller høgere $\\gt$ enn ein verdi. Lik som normale tall ulikheter. Når vi driver med Algebra ulikheter, handler det om å finne for kva verdi variabelen er lavere/høgere enn eller lik verdien som vi tester (Kjem ann på teikn som blir representert). I andre ord er spørsmålet når det handlar om ulikheiter innanfor Algebra er: ved kva $x$ verdi er ulikheten ekte?\n\nNormale ulikheter er berre: er dette tallet er høgere eller lavere enn dette tallet.\n\nVi kan modifisere uttrykket så mykje vi vil så lenge vi modifiserer begge sidene.\n\n\n**P.S: Det kan også vere andre variabler enn $x$, her er berre $x$ brukt som eit døme.**\n\n## Symboler:\n\nFungerer for alle tall ***og*** variabler:\n\n$\\gt$ Høgere enn, men ikkje:\nDøme : $6\\gt5$ , 6 er høgere enn 5!\n\n$\\lt$ Lavere enn, men ikkje:\nDøme : $5\\lt6$, 5 er lavere enn 6!\n\nFungerer ***berre*** med variabler:\n\n$\\ge$ Høgere enn eller lik verdi:\nDøme: $x \\ge 5$, dette er berre sant viss $x$ er høgere enn eller er lik 5.\n\n$\\le$ Lavere enn, eller lik verdi:\nDøme $x \\le 5$, dette er berre sant viss $x$ er lavere enn eller er lik 5.\n\n\n### Døme på ein Algebra ulikhet:\n$\\large x \\le 5$  (For kva $x$ verdi er denne ulikheten ekte?)\n\n \n## Rekne ut ulikheiter. \n### Det første vi gjer uansett kva.\nDet aller første vi må gjere når vi driver med Algebraiske ulikheter er å få alle tallene på ein side.\nSlik at ulikheten spør blir : $x+noko \\gt \\space / \\space \\ge \\space / \\space \\lt \\space / \\space \\le0$. Husk at når vi flytter over, skifter forteiknet, til talla. Og viss vi har ein [[Polynom terminologi#Rasjonale funksjoner Polynom brøker|rasjonal funksjon]] må vi huske å jobbe tallet som vi skal finne ulikheten til inn, slik som i  [[Polynom aritmetikk#Polynom aritmetikk med brøker|Aritmetikk med brøker]].Det neste vi gjer er å [[Polynom faktorisering|faktorisere]] polynomet som vi skal finne ulikheten til.  Deretter fortsetter vi til ein forteiknslinje skjema.\n\nEksempel:\n$2x \\gt 1$\n$\\rightarrow 2x-1 \\gt 0$\n\nEksempel med [[Polynom terminologi#Rasjonale funksjoner Polynom brøker|ein rasjonal funksjon / polynom brøk]]:\n$\\large \\frac{x^3}{x} \\gt 1$\n$\\large \\rightarrow \\frac{x^3}{x}-1\\gt 0$\n$\\large \\rightarrow \\frac{x^3}{x}- \\frac{1}{1} \\gt 0$\n$\\large \\rightarrow \\frac{x^3}{x}-\\frac{1(x)}{1(x)} \\gt 0$\n$\\large \\rightarrow \\frac{x^3-x}{x} \\gt 0$ (Nevnerene blir ikkje dratt inn, berre telleren!)\n(Vi gjer som i [[Polynom aritmetikk#Aritmetikk med brøker|Polynom aritmetikk med brøker]])\n\n### Det neste: Forteiknslinje- skjema.\nUlikheiter er den perfekte tiden det er nyttig å ta i bruk [[Polynom grafer#^e0d1fe|forteiknslinjer]], spesiellt viss vi holder på med [[Polynom terminologi#Rasjonale funksjoner Polynom brøker |rasjonale funskjoner]]. Vi rekner ut forteiknslinjen til polynomet som vi skal finne ulikheten til og deretter ser på den ferdig utreknet forteiknslinjen og samarliknar den med ulikhets teiknet. Viss ulikhetsteiknet spør om $\\ge, \\text{eller} \\le$ (Høyere/lavere enn, eller er lik) må vi ta med nullpunkta i svaret, ikkje berre så lenge over.\n\nEksempel:\n![](https://www.matematikk.org/aim/matematikk/files/e/b/a/190439a7b4f1a063347db6305371f518d2541cc597/eba190439a7b4f1a063347db6305371f518d2541cc597.gif/Scale?geometry=360x600%3E)\n\nViss oppgåva spørte etter når er denne funksjonen $x^2-6x+5$ som blir til $(x-1)(x-5)$  $\\gt 0$. Kan vi bruke dette skjemaet og sjå at denne er høgere enn 0 til den uendelig nærmer seg til 1, og 5. Ikkje på sjølve punkta, men uendelig nærme, viss det hadde vore med punkta hadde teiknet vore $\\ge$ i staden for $\\gt$. \nVi sjekker alltid den nederste linjen då denne representerer alle dei øverste faktorene som blir til denne samlet funksjonen. Basically vi sjekker \nSvaret når denne funksjoner er høgere enn 0, er altså $x \\in \u003c-\\infty, 1\u003e$ $\\cup$ $\u003c5, \\infty\u003e$.   \n   \n\n### Å rekne ut grafisk.\nNår vi rekner ut grafisk teiknar vi opp dei ulike funksjonene på kvar side, husk 0 er det samme som y = 0. Og så sjekker vi når den funskjonen på venstre siden er det samme som forteiknet ønsker. Området dette forteiknet halder sant er området der ulikheten er sant.\n\n\n## Å dividere på eit negativt tall.\n\nNår vi driver med ein algebraisk ulikhet, og får ein nød for å dividere med eit negativt tall, må vi huske å skifte det [[Ulikheiter#Symboler|det algebraiske ulikhet symbolet]] sin verdi til den omvendte. ( $\\gt$ er omvendt av $\\lt$). I tilleg til å skifte på forteikna til tallene.\n\nDøme: \n$-1x +5 \\gt 0$\n$\\large \\rightarrow \\frac{-1x +5 }{-1} \\lt \\frac{0}{-1}$\n$\\rightarrow x-5 \\gt 0$\n$x \\in \\left\\langle 5 , \\rightarrow \\right\\rangle$ (Denne ulikheten er sann når $x$ er høgere enn 5 men ikkje 5 nøyaktig!)\n\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Unike-egenskaper-av-vatn.":{"title":"","content":"# Unike egenskaper av vatn.\nVatn er svært interessant.\n1. Vatn er [[Hydrogenbinding i vatn|dipolart]].\n\t1. Oksygen er elektronegativt og trekker meir elektroner til seg sjølv enn det Hydrogena gjer, som igjen gjer at den eine siden av vatnet er meir positivt ladet, og den andre siden meir negativt ladet.\n2. Vatn er eit fabelaktig [[Vatn som eit løsemiddel.|løsemiddel]].\n\t1. Pga. vatn er polart kan det løse opp mange polare og ioniskbindet stoffer.\n3. Vatn har høg varmekapasitet.\n\t1. Det tar mykje energi til å dra eit gram vatn $1Celsius$ opp i temperatur. Så vatn hjelper til å regulere eit miljø.\n4. Vatn har eit høgt fordampningsvarme.\n\t1. Mennesker og mande andre dyr bruker batnets høge fordampningsvarme til å kjøle seg. Siden svette er for det meste vatn, den fordampende/evaporrende svetten tar opp ein del av den overskytande kroppsvarmen. Dette er kjent som fordampendekjøling.\n5. Vatn har kohesjon og adhesjon - egenskaper.\n\t1. Vatn har kraftige kohesjon krewfter på grunn av hydrogen bindingen mellom molekyla. Kohesjon kreftene er ansvarleg for overflatespenningen. Som er væskenstendens til å resistere sprekk når det er plassert under stress. Vatn har òg adhesjons egenskaper som tillater den til å hende til andre overflater enn seg sjølv.\n\t2. Disse egenskapen er essensielle for væske transport i mange former av liv. Til dømes: transporten av næring oppover i eit tre, likevel det er i mot graviteten.\n6. Vatn er mindre tett i fast form enn i væskeform. / tar meir plass i fastform enn i væskeform.\n\t1. Når vatn fryse  skaper molekylene ein krystall form som er mindre tett enn når det er i væskeform som gjer at isen blant anna flyter. dette er viktig for det hindrer innsjøer og liknande frå å fryse over, og tillater liv under overflaten.\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vanlig-logaritme":{"title":"","content":"# Vanlig logaritme.\n\nVanlig logaritme er ein ein av dei svært brukte logaritme funksjonene likestilt med [[Naturleg logaritme]]. Fordi $\\log_{10}(x)$ er så ofte brukt er det dermed blitt skapt ein ny anna versjon av logartime som er slik:\n$\\log_{10}(x)=\\log(x)$, vi dropper basen $10$ fordi den er så ofte brukt.\n\nTenker sjølv at dette er så ofte brukt fordi i standard form er disse tallene ganske ofte brukt og kanskje av og til hadde det vore nyttig å få eksponenten vi har i ein standard form likning, eventuellt slik at vi kan omskrive eit høg tall til standard form.\n\nNokre dømer:\n$\\log_{10}(5)=\\log(10)$.\n\n\u003e[!INFO] Funny.\nI datavitskap pleier vi ofte å si at ein algoritme er $\\log(n)$ i hastighet fordi i datavitskap overser vi faktorer så vi dropper bare basen og sier den er vanlig logaritme av $n$.\n\n\n\nHer er eit bilete som viser veksten til vanlig logaritme:\n![[Screenshot 2022-07-08 at 21.08.32.png]]","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vatn-som-eit-l%C3%B8semiddel.":{"title":"","content":"# Vatn som eit løsemiddel.\n\nVatn er [[Hydrogenbinding i vatn|dipolart]], cytoplasma består for det av vatn og tillater reaksjoner å skje inni den. Grunnen til at er god til å løse nokre stoffer er på grunn av stoffet det løser er dipolart/ujevn fordeling av ladningene.\n\nStoff som øysast il ett vi vatn kalles hydrofile. Det som ikkje har ladning eller er dipolart løses ikkje i vatn. Det som ikkje løsest i vatn heiter hydrofobisk.\n\nPolare stoff vil løse seg i vatn fordi vatn vil halde atoma og flyte videre som ødelegger bindingen mellom atoma i molekylet. Vatn er eit løsemiddel og stoffer som blir løyst opp er det oppløysemiddelet/stoffet.\n\nHer er eit eksempel av vatn som løyser opp $Na^+Cl^-$.\n\n![](https://qph.fs.quoracdn.net/main-qimg-ce9e74e89f02bcd25a51eb7717210b95)\n\nSom vi kan sjå fester $H_2O$ molekyla seg til atoma dei ulike lada atoma i $Na^+Cl^-$, og når vatnet flyter vekk så er det ein så sterk form av binding at det bryter, spesielt når det skjer samtidig med så mangen $H_2O$ molekyl.\n\n\n\u003e[!Warning] MISTOLKNING\n\u003eVatn er det universale løysmiddelet er ikkje sant. Vatn kan løyse mange stoff men detet er berre fordi stoffet er polart eller har ionbindinger. Vatn kan **ikkje** løyse stoff utan disse egenskapene. Dette er grunnen til at olje flyter åleine i vatn.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vektorer":{"title":"","content":"# Vektorer.\n\n# Kva er ein vektor.\n\nEin vektor er simpelt sagt ein verdi/størrelse som har ein retning. \nTil dømes er hastighet ein vektor.\n\nNotasjon:\nAlle vektorer har ein pil til høgre over bokstaven:\n\n\nEksempel:\n5meter til høgre per sekund, er ein vektor.\n\n![](https://cdn.kastatic.org/ka-youtube-converted/ihNZlp7iUHE.mp4/ihNZlp7iUHE.png)\n\nVektor til høgre. ","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vektorer-to-dimesjoner.":{"title":"","content":"# Vektorer, to dimensjoner.\nVektor er egentelig matematisk sett på som ein liste med verdier, men i fysikk gir med disse verdiene ein tilsvarenede verdi på eit kordinatsystem.\n\n\n## Resulterende.\nDen resulterende er det same som verdien vi får når vi addere eller subtrahere to eller fleire vektorer. \n\n\n## Vektor komponenter.\n\nVektor komponenter er dei ulike aksene til vektoren, til dømes $x$, $y$, $z$ akse. Men vektorer kan gå opp i uendelig mange dimensjoner og dermed kan vi ha mange akse verdier.\n\nHer er eit døme av dei to ulike vektor komponentene i 2D, og den tilsvarende vektoren.\n![](https://blogmedia.testbook.com/blog/wp-content/uploads/2022/01/image-requirement-maths-articles_tb_fig_3-ac69a67d.png)\n\n$V_x$ går til høgre ein verdi, og så $V_y$ oppover. Og dermed blir $V$ det samme som $V_x+V_y$.\nVi kan tenke på $V_x$ og $V_y$ som eigne vektorer.\n\nHer er vektor komponentene i 3D:\n![350](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Velocity-vector-3D-and-components.svg/1831px-Velocity-vector-3D-and-components.svg.png)\n\nLitt meir kompliserte å sjå, men vi kan sjå alle dei tre ulike akse verdiene.\n$x$ aksen,  $y$ aksen, og $z$ aksen.\n\n\u003e[!WARNING] NB.\n\u003eI 3d dimensjoner så er ikkje $y$ oppover, her er det $z$ som er oppover.\n\u003e$y$ er berre oppover i tre dimensjoner.\n\n\n\n\n### Finne vektor komponenter gjennom trigonometri.\nViss vi har ein vektor som vi veit størrelsen på kan vi finne kva dei ulike vektor komponentene er dersom vi har ein eller fleire vinkler gjennom trigonometri.\n\nTil dømes:\n![[Vektorer, to dimesjoner. 2022-07-08 19.27.13.excalidraw]]\n\n\nVektor sin størrelse er det same som hypotenus, og dermed viss vi har ein vinkel kan vi finne ut kva aksene sine vektor verdier er. Vi må huske å ta i tanke vektoren sin retning når vi settjer verdiene til akse vektorene. Vi kan ikkje akkurat ha ein x vektor som går til høgre, når den normale går til venstre.\n\nVi kan òg finne kva vinkelen var viss vi har ulike verdier, dette kan vi gjere fordi vi har dei trigonometriske funksjonene sine invers funksjoner.\n\nOg vi kan finne ut kva vektor størrelsen er, ikkje retning, ved å ta i bruk Pytagoras læresetning.\n\n\n## Vektor addisjon.\nVektor addisjon er ganske simpelt, det er berre å addere dei ulike akse verdiene i alle vektorene som skal bli addert saman med kvarandre. Til dømes:\n$C=(5,5), + G=(2,5)$\n$C+G=(5+2,5+5)$\n$C+G=(7,10)$\n\nDette er basic game programmering.\n\nHer er koss du gjer det visuellt.\nHusk hovudet må alltid gå til ein hale av ein anna vektor dersom vi skal addere.\n![](https://i.ytimg.com/vi/0tv92MX2_ro/maxresdefault.jpg)\n\n\n\nVi plasserer tupp av av $F_1$ ved start av $F_2$ drar linjen mellom $F_{1,start}$ og $F_{2,slutt}$ dett er vår adderte vektor.\n\n## Vektor subtraksjon.\nVektor subtraksjon er nesten heilt likt som vektor addisjon men det er ein sterk differanse. Når vi driver med vektor subtraksjon så må vi fjerne den eine vektorenen frå den andre. Dette er det same som å skifte forteiknet til alle verdiene inni vektoren, og så addere.\n\nLa oss si at vektoren $C = (5,5,5)$ ($x,y,z$), her i 3D.\nNår vi skal fjerne vektoren $G = (5,-5,5)$ så må vi gjere slik:\n$(5,5,5)-(5,-5,5) = (5-5,5-(-5),5-5) = (0,10,0)$.\nDen ferdige vektoren blir $(0,10,0)$\nVi subtraherer $x$ verdiene med kvarandre, $y$ verdiene med kvarandre, og $z$ verdiene med kvarandre.\n\n2D eksempel:\n$C=(5,5) - G=(1,0)$\n$C-G = (5-1,5-0)$\n$C-G=(4,5)$\n\nHer er korleis ein gjer det visuellt.\nHusk å gjer den vektoren som blir subtrahert motsatt, den er jo som sagt negativ.\n![[Vektorer, to dimesjoner. 2022-07-08 19.02.49.excalidraw]]\n\n\n\n\u003e[!WARNING] Normale feil med vektor addisjon og vektor subtraksjon.\n\u003e Når vi gjer vektor addisjon visuellt må alltid eit hode gå inn i ein hale på ein vektor, viss begge hodene går til samme plass så vil ikkje vektor addisjonen /subtraksjonen ha korrekt verdi.  Tenk tilbake på all din game programmering, dette er ganske lett å forstå.\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vikingtida.":{"title":"","content":"Vikingtida varte mellom omlag 800 og omlag 1000\nog var rett før middelalderen, og i slutten av jernalderen for Noreg.\n\nI europa var middelalderen dette omtrent 500 til 1050. \n\nNoreg i viktingtida.\nDet er sansynleg at menneske som budde i det som i dag er ein del av Noreg. Som såg på seg sjølv som eige folk - nordmen. Det var ulike konger og ingen forent stat men det var sannsynleg at det såg på seg sjølv som nordmenn.\nDet so bidrog til dette var den felles kulturen, forståelsen, og språket.\n\nNordweg betyr vegen nord.\n\nEin meiner at det budde om lag 100 000 mennesker i det landområdet som i dag utgjer Noreg.\n\nDette samfunnet var svært lagdelt $\\rightarrow$ store forskjeller mellom samfunnsgrupper og ingen ideal om likskap. Stor forskjell i politikk, rikdom, tanker, detta var nærmast heilt naturleg. WOOOO YEAH BABYYYY THATS WHAT I HAVE BEEN WAITING FOR. THATS WHAT ITS ALL ABOUT\n\nDet var ættebakgrunnen  (slekta) og eigarskapt til jord som avgjorde kva sosial status ein hadde. Ein kunne gi gaver og vise rikdom for å skape større sosial status.\n\n\n\n## TRÆLEN\nEin træl er det same som ein slave\n\nhadde ikkje noko rettsleg vern (var rettlaus)\n\nDei var eigendomen tileigaren\n\nDErsom dei gjorde noko gale, så var det eigaren som var ansvarleg.\n\n**TRÆLEN var *IKKJE* eit fritt menneske**\n\nKunne brukast som handelsvare\n\nMåtte gjere det arbeidet eigaren sette dei til $\\rightarrow$ gjorde derfor det tyngste, skitnaste og minst verdsette arbeidet. \n\nca 1/3 av befolkninga var træller rundt år 1000.\n\n\n\nFordi det var drit mangel træller var kunne vikingane ha tiden til å gjere tokter og tjene inntekt på vell vold og tyveri + misc. ","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vinklet-bevegelse-+-Vinklet-kinematiske-formeler.":{"title":"","content":"# Vinklet bevegelse introduksjon.\n\nVinklet mosjon er relativt likt som normal ein dimensjonell mosjon, men er forskjellig i kva dei ulike variablene betyr, og kva dei ulike tingene betyr, og korleis alt fungerer!\n\n## Variabler.\n[[Symboler]]\nFor å lettere kunne forklare korleis eit objekt beveger seg når det er i ein konstant rotasjon er det lettere å definere nye variabler som gir eit betre inntrykk av problemet, enn det å bruke dei gamle ein dimensjonelle mosjon variablene. Så vi definerer nye variabler som passer betre til vår bruk.\nDei tar utgangspunkt i det samme som eindimensjonell mosjon men vi bruker heller vinkel som vår grunnleggende enhet i staden for meter.\n\nVi har nokre ulike vinklet mosjon variabler.\n1. Vinkel / Forandring i vinkel / Vinklet forksyvning.\n\t1. Vinkel = $\\theta$\n\t2. Forandring i vinkel / Vinklet forskyvning: $\\Delta \\theta$. \n2. Gjennomsnittleg vinklet hastighet.\n\t1. $\\frac{\\Delta \\theta}{\\Delta t} = \\omega$\n3. Gjennomsnittleg vinklet akselerasjon.\n\t1. $\\frac{\\Delta \\omega}{\\Delta t} = \\alpha$\n4. Gjennomsnittleg vinklet fart.\n\t1. $\\frac{S}{\\Delta t}=fart$, der $S$ er distanse, viser meter per sekund.\n5. Sentripetal vinklet akselerasjon.\n\t1. NB! ≠ gjennomsnittleg vinklet akselerasjon.\n\t2. $A_s=A_{sentripetal} = \\frac{V^2}{r}$\n\t\n\n\n## Vinklet kinematiske formler konstant akselerasjon.\nTar utgangspunkt i frå [[Kinematiske formeler - Konstant akselerasjon.]]. \n1. $\\Delta \\theta=(\\frac{\\omega _i+ \\omega _f}{2})\\times \\Delta t$\n2. $\\omega_f=\\omega_i+\\alpha \\times \\Delta t$\n3. $\\Delta \\theta = \\omega_i\\times \\Delta t + \\frac{1}{2}\\alpha (\\Delta t)^2$\n4. $\\omega^2=\\omega_i^2+2\\alpha \\Delta \\theta$\n5. $\\omega \\times R = V$,      R = radius.\n6. $A_{sentripetal}=\\frac{V^2}{r}$\n\nHer kan vi sjå at disse er det same som i dei standarde kinematiske formelene, og vi kan sjå at $\\Delta x$ går over til $\\Delta \\theta$ og $v$ går over til $\\omega$, $a$ over til $\\alpha$. Det er grunnlag i det samme.\n\n## Vinklet kinematiske formler - variarande akselerasjon.\n\n\u003e[!INFO] Importantísimo. \n\u003eVi måler vinkler i radianer når det kjemer til vinklet mosjon, dette er mykje lettere å arbeide med enn normale grader. Ew grader 🤮, radianer however chad 🗿\n### Visualised.\nEin visualisering over vinklet mosjon.\n![[Vinklet bevegelse. 2022-07-21 18.56.21.excalidraw|750]]\n\n\n\u003e[!INFO] Why vinklet i staden for normal.\n\u003eTenk på det slik at viss eg hadde stått nær midten så hadde eg beveget ein heil syklus på like lang tid som om eg hadde stått ytterst. Men problemet er at viss eg står ytterst så beveger eg meg mykje meir enn det å stå innerst. Det er forskjellige normale hastigheter der, og ulike normale akselerasjoner der. Det er simpelt sagt lettere å definere nye variabler.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Virus":{"title":"","content":"## Kva er virus\n**Virus er patikler som har ein kappe med arvestoff inni.** Dei forårsaker sykdommer som vannkopper, inlfuensa og covid. Virus regnes ikkjes som levende oranismer fordi dei avhenger av ein verts[[Introduksjon til cellen.|celle]] for å kunne [[Ulike typer reproduksjon.|reprodusere]]. Vi deler virus inn i tre gruper: [[Planter|plantevirus]], [[Dyr|dyrevirus]], og *bakteriofager* ([[Bakteriar|bakterievirus]]) avhengig av kva for ein type organismer dei går til angrep på.\n\n\n## Struktur til virus.\nNoen virus f.eks *adenovirus* har ein kappe som består av [[Proteiner og aminosyrer.|proteiner]].  Andre virus har ein [[Lipider.|lipid]][[Strukturen til cellemembranen.|membran]] med ein proteinkappe under. Arvestoffet er entens [[DNA]] eller RNA av alt i frå to til tre hundre gener. Ein kjent familie av RNA-virus har namnet av *retrovirus*. Retro betyr baklengs. Dei kalles retrovirus fordi virusets RNA kan omgjeres til DNA inne i cellen ved hjelp av eit virus[[Enzymer|enzym]], *revers transkriptase* og deretter integrers i cellens eget arvestoff.\n\n**Virusgenenes** einaste **hensikt** er å gi viruset **eigenskaper som gjer at den kan komme inn i ein celle, kopiere arvestoffet sitt og lage nye virus.** Kappen har ofte ein krystallform med en svært fin og symmetrisk fasong. \nVirus åleine har ingen [[Kva er organeller - organeller i eukaryotiske celler.|organeller]] da det er ikkje [[Prokaryote celler.|prokaryot eller eukrayot]], dermed ingen [[Prokaryote og eukaryote celler|cytoplasma]] og ikkje noe sjølvstendig stoffskifte.\n\nVirus kan ha ulike fasonger avhengig av vertscellen sin form. I [[Introduksjon til eukaryote celler.|eukaryote]] celler har virus ein annen grunnstruktur enn i [[Prokaryote celler.]] Virus kan entens ha RNA eller DNA som arvemateriale.\n\n![[uliketypervirus.png]]\n\n## Angrep\nDei fleste virus angriper berre bestemte celler hos bestemte organismar enten dyr, planet eller bakterier. Og dei de angrier vanlgisvis berre ein celler eller nokre få arter. Eit infleunsavirus angriper vanligvis celler i luftveinee. Dette gjer også SARS-Cov-2 som forårsaker Covid 19.\n\nHivviruset vil kun angrepe bestempte typer kvite blodceller, ikkje andre celletyper i mennesket. *Hiv* er ein forkortelse afor engelsk \"Human Immune Defiency Virus\" som betyr \"Humant immunsviktvirus\".\n\n\n## Formeiring\n### Generell DNA.\nVirus formeirer seg gjennom at virusets arvestoff tar kontroll over ein vertscelle og bruker maskineriet i vetscellen til å lage eit enormt tall kopiar av seg sjølv. Viruset fester seg til cella og sender arvestoffet sinn i cellene. Viruset bruker vertens proteiner og nokre av sine eigne til å lage kopiar av sitt eiget arvestoff. Videre blir byggesteinar frå vertscella brukt til å lage nye kapper, og slik blir det dannet mange kopiar av viruset. Virus foråsaker på denne måten sykdom fordi dei ødelegger celler vedå ta kontroll over dei. *Herpesviruset* er eit DNA-virus som har DNA som arvestoff og er eit eksempel på virus som formeirer seg på denne måten. Dette viruset angriper [[Immunforsvaret.#Det ytre forsvaret.|slimhinneceller]] i og ved munnen ellers kjønnsorganene. ( 🤮 ).\n\n![[bakteriofag.png]]\n\n\n### RNA - Spesielle.\nMange typer virus har RNA som arvemateriale. Hivviruset er eit eksempel på eit retrovirus. Hiv må først lage ein kopi av RNA-arvestoffet sitt, ein DNA-tråd som kan settjast inn i vertens DNA. For å klare å kopiere RNA til DNA har retrovirus enzymet *revers transkriptase*., Virus-DNA-et blir fraktet til kjernen der det blir avlest, og nytt virus-RNA blir transportert ut av cellekjernene for å alge nye virusproteinre (*translasjon*) og arvemateriale til nye viruspartikler. \nAndre RNA-virus kan lage nye kopier av sitt arvestoff **direkte** frå RNA uten å gå veien om DNA. Infleunsavirus og koronaivrus er eksempler på dette. Disse to typene RNA-virus går inni cellens cytoplasma. Der kopieres RNA for å lage nye viruspartikler og for å lese av RNA for å lage virusproteiner.\n\n![[hivvirus.png]]\n\n## Oppsummering\n\u003e[!INFO] Oppsummering\n\u003e Virus er **ikkje** celler. Dei er partikler med ulike typer kapper og med arvestoff inni. Arvestoffet er entens DNA eller RNA. Virus formeirer seg inne i andre celler ved å hente byggesteiner til nye virus frå vertscellen. Eksempåler på virus som er protogene er infleunsavirus, herpesvirus, hivvirus og koronavirus.\n\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Virus-advarning":{"title":"","content":"[[Grunnleggende celleteori.]]. [[Introduksjon til cellen.]].\nAlle celler i kroppen har egentelig moglegheita til å bli angripet, dermed kan også alle celler andre celler for viruset. Dette gjer den via interferoner som fortelljer andre celler å stanse å skape proteiner, proteiner er viktige fordi [[Infeksjon og smitte|virus]] har ein nød av proteiner og andre ulike mekanismer i ein celle for å kunne videreprodusere celler.\n\n\nCeller sender ut interferoner som andre tar i mot gjennom reseptorer, dette tillét dei nye cellene som tar i mot interfereonee å forstå at den må forberede seg til det nye angripet.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/Vitaminer-og-Mineraler":{"title":"","content":"# Vitaminer og Mineraler\n\nBåde vitaminer og mineraler er noe som kroppen trenger, men kroppen produserer ingen av dei to tingene. Vi må altså få det i oss gjennom spising.\n\n* Av vitaminer og mineraler så er **mineraler** det som **ikkje** er frå noko organisk/levende.\n\t* Fosfat, kalsium, kalium, magnesium, jern, …… Mange ulike [[Kva er grunnstoffer og atomer.|grunnstoff]].\n* Av vitaminer og mineraler så er **vitaminer** det som **er** i frå noko organisk/levende.\n\t* Nokre vitaminer er : Vitamin A, Vitamin D, Vitamin E, Vitamin K, Vitamin C.\n\n\n# Mineraler\n.\n\n# Vitaminer\n\nVitaminer kan både vere fettløyslig og vatnløslig. \nNokre fettløslige vitaminer er Vitamin - A, D, E, K.\nOg eit døme på vitamin som er vatnløslig er Vitamin C.\n\nTil dømes:\nGulrot inneholder *betakaroten* og *kalium*. \nBetakaroten er ein forløper til vitamin A.\nVitamin A er godt fort for auger og kropp.\n\n\nAppelsin inneholder Vitamin C.\nEin kan få blant anna \"scurvy\" viss ein får for lite vitamin C.\n\n## Forløper.\nAt eit stoff er ein forløper til ein vitamin tyder at kroppen kan produsere vitaminet sjølv (noko som er unormalt), så lenge vi får tak i forløperen.\n\n\n-------\n\n\u003e[!Som nemnt]\n\u003eVitaminer og mineraler er ganske viktig, til dømes mangelen av vitaminer er ganske farleg. Ein kan til dømes få sykdommen \"scurvy\" viss ein får for lite Vitamin C.\n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/forms-fieldset-legend":{"title":"","content":"# Fieldset legend\n\nFieldset brukes for å organisere contents i ein form\n\nlegend for å gi overskift til fieldset.","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null},"/notes/pH-syrer-og-baser.":{"title":"","content":"# pH, syrer og baser.\n\n\n\n# pH\nDet er ingen fast betydning for pH, men vi har nokre ideer til kor namnet kom i frå eller kva det tyder.\npH kan bety:\n* power of Hydrogen.\n* potential of Hydrogen.\n* capacity for Hydrogen (kjemer frå gresk trur eg)\n\nsom det er litt openbart så involverer pH noko med hydrogen.\nFor nemleg pH viser kor mykje positive ladet hydrogen ioner ($H^+$) det er i løsningen.\n\n## Syrer, baser, og pH.\n\nDet som definerer om noko er syrisk eller basisk er korleis det er med det ladet hydrogen ionene i løsningen.\n\nDet er nemleg slik at:\n* Syriske stoffer pleier å ha mange $H^+$.\n* I mens basiske stoffer pleiere å reagere mykje med $H^+$.\n\t* Basiske stoffer pleier og å ha mangen negative ladet hydroksider ($OH^-$). \n\nDet som er nøytralt på ein pH skala er verdien 7. Ein pH skala har verdier i mellom 0 og 14, der 0 er syriske, og 14 er basisk.\n\n\u003e[!INFO] Interessant\n\u003e1. Eit anna namn for basisk er alkalisk, kjemer i frå gammel arabisk og er basert på eit stoff med liknande namn som var svært basisk.\n\u003e\n\u003e2. Basiske stoffer pleier å vere slimete og bitter. MEN ALDRI SPIS DET!\n\u003e\n\u003e3. Syriske stoffer pleier å vere sure. MEN ALDRI SPIS DET!\n\n\nHer er ein visualisering.\n![](https://naturalbiohealth.com/wp-content/uploads/2020/08/pH-Scale-scaled.jpeg)\n\n\n\n## Lesing av pH skala.\n\n\nDet som er skikkelig spesielt med pH skalaen er at den vokser *eksponentiellt* og ikkje linært. Det betyr at den simpelt sagt vokser mykje meir i basisk, og syrisk etter ein bevegelse av ein enhet på skalen. Denne skalen vokser med 10 ganger kvar verdi.\nDet tyder at ein verdi av 8 er 10 ganger meir basisk enn 7, og ein verdi av 9 er 100 ganger meir basisk, ein verdi 10 er 1000 ganger meir basisk, osv. \n\n","lastmodified":"2022-12-05T20:39:56.369033936Z","tags":null}}